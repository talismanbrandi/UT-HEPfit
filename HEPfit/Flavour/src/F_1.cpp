/* 
 * Copyright (C) 2017 HEPfit Collaboration
 *
 *
 * For the licensing terms see doc/COPYING.
 */

/* Code derived from arXiv:0810.4077
 * authors: Christoph Greub, Volker Pilipp, Christof Sch√ºpbach
 */

#include "F_1.h"
#include "hpl.h"

F_1::F_1()
{}

F_1::~F_1()
{}

double F_1::F_17re(double muh, double z, double sh, int maxpow) 
{
    double lz = log(z);
    double lmu = log(muh);
    double Lsh = log(sh);
    double Lshb = log(1. - sh);
    double Li2sh = real(Li2(sh));
    double Li3sh = real(Li3(sh));
    double Li3shb = real(Li3(1. - sh));
    double Li4sh = real(Li4(sh));
    double sqrtsh = sqrt(sh);
    double sqrt4sh = sqrt(4. - sh);
    double ash = asin(sqrtsh / 2.);
    double cl2 = Cl2(2. * ash);
    double cl3 = Cl3(2. * ash);


    double res = 0;

    if (sh < 0.4) {
        res = -1.14266 - 0.8559670781893005 * lmu - 2.07503 * sh -
                0.0164609 * Lsh * sh - 0.222222 * lz * sh - 2.20356 * z -
                2.608715 * lz * z - 25.9259 * sh * z + 1.03704 * Lsh * sh * z -
                1.700505 * lz * sh * z + 0.2962965 * Lsh * lz * sh * z +
                0.14814825 * z * pow(lz, 2) - 1.122925 * sh * z * pow(lz, 2) +
                0.04938275 * z * pow(lz, 3) + 0.04938275 * sh * z * pow(lz, 3) -
                0.024691375 * sh * z * pow(lz, 4) - 19.4691 * pow(sh, 2) -
                0.0164609 * Lsh * pow(sh, 2) - 5.83895 * lz * pow(sh, 2) -
                90.4953 * z * pow(sh, 2) + 2.37037 * Lsh * z * pow(sh, 2) +
                7.46645 * lz * z * pow(sh, 2) + 0.592595 * Lsh * lz * z * pow(sh, 2) -
                0.74074 * pow(lz, 2) * pow(sh, 2) -
                6.1095 * z * pow(lz, 2) * pow(sh, 2) -
                0.04938275 * pow(lz, 3) * pow(sh, 2) +
                0.14814875 * z * pow(lz, 3) * pow(sh, 2) -
                0.074074375 * z * pow(lz, 4) * pow(sh, 2) - 41.9952 * pow(sh, 3) -
                0.0164609 * Lsh * pow(sh, 3) - 15.10455 * lz * pow(sh, 3) -
                189.354 * z * pow(sh, 3) + 3.85185 * Lsh * z * pow(sh, 3) +
                21.3283 * lz * z * pow(sh, 3) + 0.88889 * Lsh * lz * z * pow(sh, 3) -
                1.555555 * pow(lz, 2) * pow(sh, 3) -
                14.44125 * z * pow(lz, 2) * pow(sh, 3) -
                0.14814875 * pow(lz, 3) * pow(sh, 3) +
                0.34567875 * z * pow(lz, 3) * pow(sh, 3) -
                0.148148125 * z * pow(lz, 4) * pow(sh, 3) -
                0.00010778 * pow(sh, 3) * pow(z, -2) +
                0.00555556 * pow(sh, 2) * pow(z, -1) +
                0.946811 * pow(sh, 3) * pow(z, -1) +
                0.2444445 * lz * pow(sh, 3) * pow(z, -1) +
                0.02469135 * pow(lz, 2) * pow(sh, 3) * pow(z, -1) +
                11.6973 * sh * pow(z, 0.5) + 70.1839 * pow(sh, 2) * pow(z, 0.5) +
                pow(sh, 3)*(-3.8991 * pow(z, -0.5) + 159.863 * pow(z, 0.5)) +
                1.94955 * pow(z, 1.5) + 1.86366 * pow(z, 2) -
                2.331735 * lz * pow(z, 2) + 11.4229 * sh * pow(z, 2) -
                4.66347 * Lsh * sh * pow(z, 2) - 17.0403 * lz * sh * pow(z, 2) +
                2.5926 * sh * pow(lz, 2) * pow(z, 2) +
                0.5925925 * Lsh * sh * pow(lz, 2) * pow(z, 2) +
                0.04938275 * pow(lz, 3) * pow(z, 2) +
                0.29629625 * sh * pow(lz, 3) * pow(z, 2) +
                23.8816 * pow(sh, 2) * pow(z, 2) -
                13.9904 * Lsh * pow(sh, 2) * pow(z, 2) -
                41.39575 * lz * pow(sh, 2) * pow(z, 2) +
                1.185185 * Lsh * lz * pow(sh, 2) * pow(z, 2) +
                8.074075 * pow(lz, 2) * pow(sh, 2) * pow(z, 2) +
                1.7777775 * Lsh * pow(lz, 2) * pow(sh, 2) * pow(z, 2) +
                0.74074125 * pow(lz, 3) * pow(sh, 2) * pow(z, 2) +
                45.1784 * pow(sh, 3) * pow(z, 2) -
                27.3882 * Lsh * pow(sh, 3) * pow(z, 2) -
                72.5905 * lz * pow(sh, 3) * pow(z, 2) +
                4.14815 * Lsh * lz * pow(sh, 3) * pow(z, 2) +
                17.7284 * pow(lz, 2) * pow(sh, 3) * pow(z, 2) +
                3.55555 * Lsh * pow(lz, 2) * pow(sh, 3) * pow(z, 2) +
                1.3827125 * pow(lz, 3) * pow(sh, 3) * pow(z, 2) -
                1.21131 * pow(z, 3) + 1.49794 * lz * pow(z, 3) +
                11.7509 * sh * pow(z, 3) + 6.73754 * Lsh * sh * pow(z, 3) +
                9.4782 * lz * sh * pow(z, 3) + 0.592595 * Lsh * lz * sh * pow(z, 3) -
                1.0370375 * pow(lz, 2) * pow(z, 3) -
                3.654325 * sh * pow(lz, 2) * pow(z, 3) -
                0.5925925 * Lsh * sh * pow(lz, 2) * pow(z, 3) +
                38.1415 * pow(sh, 2) * pow(z, 3) +
                27.5428 * Lsh * pow(sh, 2) * pow(z, 3) +
                19.3218 * lz * pow(sh, 2) * pow(z, 3) +
                1.185185 * Lsh * lz * pow(sh, 2) * pow(z, 3) -
                10.39505 * pow(lz, 2) * pow(sh, 2) * pow(z, 3) -
                2.37037 * Lsh * pow(lz, 2) * pow(sh, 2) * pow(z, 3) +
                77.3602 * pow(sh, 3) * pow(z, 3) +
                69.4495 * Lsh * pow(sh, 3) * pow(z, 3) +
                29.22455 * lz * pow(sh, 3) * pow(z, 3) +
                0.592595 * Lsh * lz * pow(sh, 3) * pow(z, 3) -
                24.0247 * pow(lz, 2) * pow(sh, 3) * pow(z, 3) -
                5.925925 * Lsh * pow(lz, 2) * pow(sh, 3) * pow(z, 3);
    } else {
        if (0 <= maxpow) {
            if (sh < .900001)
                res += (-0.8559670781893004 * lmu -
                    0.2962962962962963 * sh * pow(ash, 2) * pow(-1 + sh, -4) -
                    0.00823045267489712 * Lsh *
                    (29. - 18. * Lshb * (-1. + sh) - 47. * sh) * sh *
                    pow(-1 + sh, -2) + 0.14814814814814814 * Li2sh * sh *
                    pow(-1 + sh, -1) - 0.07407407407407407 * pow(Lsh, 2) *
                    pow(-1 + sh, -3) * pow(sh, 3) -
                    0.01646090534979424 * ash * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, -1)*(-4. + 9. * sh - 15. * pow(sh, 2) +
                    4. * pow(sh, 3)) - 0.0013717421124828531 *
                    pow(-1 + sh, -4)*(785. -
                    2. * sh * (1585. + 12. * pow(3.141592653589793, 2)) +
                    6. * (803. + 9. * pow(3.141592653589793, 2)) * pow(sh, 2) -
                    2. * (1633. + 27. * pow(3.141592653589793, 2)) *
                    pow(sh, 3) + (833. + 18. * pow(3.141592653589793, 2)) *
                    pow(sh, 4))) * pow(z, 0);
            else
                res += (-0.7509911973035993 - 0.21726138504882622 * (1. - sh) -
                    0.8559670781893004 * log(muh) -
                    0.0659657518981201 * pow(1. - sh, 2) -
                    0.03129640614981805 * pow(1. - sh, 3) -
                    0.017719628843137502 * pow(1. - sh, 4)) * pow(z, 0);
        }

        if (1 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (2 <= maxpow) {
            if (sh < .900001)
                res += (0.04938271604938271 * sh * pow(Lsh, 4) * pow(-1 + sh, -3) -
                    0.2962962962962963 * Li2sh * (-1. + 4. * sh) *
                    pow(-1 + sh, -2) + 0.09876543209876543 * (-3. + sh) *
                    pow(Lsh, 3) * pow(-1 + sh, -2) -
                    lz * (-0.2962962962962963 * Lsh *
                    (2. + 2. * Lshb * (-1. + sh) + sh) * pow(-1 + sh, -2) -
                    0.5925925925925926 * Li2sh * pow(-1 + sh, -1) +
                    0.09876543209876543 * (9. + pow(3.141592653589793, 2)) *
                    pow(-1 + sh, -1) +
                    0.2962962962962963 * pow(Lsh, 2) * pow(-1 + sh, -1)) -
                    0.35616500834358344 * pow(-1 + sh, -3)*
                    (-5. + 5. * sh + 2. * pow(sh, 2)) -
                    0.2962962962962963 * Li3sh * pow(-1 + sh, -3)*
                    (-1. - 5. * sh + 4. * pow(sh, 2)) -
                    pow(Lsh, 2)*(-0.5925925925925926 * Li2sh * sh *
                    pow(-1 + sh, -3) -
                    0.04938271604938271 * pow(-1 + sh, -3)*
                    (12. + 3. * Lshb * (-5. + 3. * sh) +
                    sh * (-15. + 2. * pow(3.141592653589793, 2)) +
                    6. * pow(sh, 2))) -
                    Lsh * (-2.8493200667486676 * sh * pow(-1 + sh, -3) +
                    2.3703703703703702 * Li3sh * sh * pow(-1 + sh, -3) +
                    0.2962962962962963 * Li2sh * pow(-1 + sh, -3)*
                    (3. + sh - 2. * pow(sh, 2)) +
                    0.04938271604938271 * pow(-1 + sh, -3)*
                    (12. + 21. * sh +
                    (-5. + 3. * sh) * pow(3.141592653589793, 2) -
                    33. * pow(sh, 2) +
                    6. * Lshb * (1. - 5. * sh + 4. * pow(sh, 2)))) -
                    1.7777777777777777 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-1. - 3. * pow(sh, 2) + pow(sh, 3)) +
                    0.009876543209876543 * pow(-1 + sh, -4)*
                    (-4. * (-1. + sh) * sh * pow(3.141592653589793, 4) -
                    15. * (-1. + sh)*(10. - (17. + 24. * Li4sh) * sh +
                    7. * pow(sh, 2)) +
                    5. * pow(3.141592653589793, 2)*
                    (-6. + 16. * sh - 20. * pow(sh, 2) + 7. * pow(sh, 3))) -
                    0.8888888888888888 * ash * (1. + sh) * pow(-1 + sh, -3) *
                    pow(-((-4 + sh) * sh), 0.5)) * pow(z, 1);
            else
                res += (-1.5156467116109078 - 0.06864318910496076 * (1. - sh) +
                    0.19606872711735043 * pow(1. - sh, 2) +
                    0.3270513130738385 * pow(1. - sh, 3) +
                    log(z)*(0.4444444444444444 +
                    0.2962962962962963 * (1. - sh) +
                    0.23868312757201646 * pow(1. - sh, 2) +
                    0.20493827160493827 * pow(1. - sh, 3) +
                    0.1817283950617284 * pow(1. - sh, 4)) +
                    0.38673058027546225 * pow(1. - sh, 4)) * pow(z, 1);
        }

        if (3 <= maxpow) {
            if (sh < .900001)
                res += 0.19753086419753085 * (2. + sh) * pow(3.141592653589793, 2) *
                pow(sh, -1) * pow(z, 1.5);
            else
                res += (5.848654459904805 + 3.8991029732698697 * (1. - sh) +
                    3.8991029732698697 * pow(1. - sh, 2) +
                    3.8991029732698697 * pow(1. - sh, 3) +
                    3.8991029732698697 * pow(1. - sh, 4)) * pow(z, 1.5);
        }

        if (4 <= maxpow) {
            if (sh < .900001)
                res += (-0.2962962962962963 * Li3sh * (5. + 3. * sh) * pow(-1 + sh, -3) +
                    0.2962962962962963 * Li3shb * (1. + 6. * sh) *
                    pow(-1 + sh, -3) + 0.14814814814814814 * pow(Lsh, 3) *
                    pow(-1 + sh, -3) - 0.8888888888888888 * ash * (-3. + sh) *
                    sqrt4sh * sqrtsh * pow(-1 + sh, -3) * pow(sh, 2) +
                    0.35616500834358344 * pow(-1 + sh, -4)*
                    (-5. + 8. * sh + 3. * pow(sh, 2)) +
                    0.2962962962962963 * Li2sh * pow(-1 + sh, -3) * pow(sh, -1)*
                    (3. - 10. * sh + 8. * pow(sh, 2)) -
                    0.8888888888888888 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 2)*(2. + 9. * sh - 6. * pow(sh, 2) + pow(sh, 3)) -
                    0.07407407407407407 * pow(Lsh, 2) * pow(-1 + sh, -4) *
                    pow(sh, -2)*(-4. + 7. * sh + (5. + 6. * Lshb) * pow(sh, 2) -
                    (25. + 8. * Lshb) * pow(sh, 3) +
                    (11. + 2. * Lshb) * pow(sh, 4)) -
                    pow(lz, 2)*(0.14814814814814814 * Lsh * (1. + 6. * sh) *
                    pow(-1 + sh, -3) -
                    0.07407407407407407 * pow(-1 + sh, -2) * pow(sh, -2)*
                    (1. - 2. * sh + 8. * pow(sh, 2) + 10. * pow(sh, 3) -
                    4. * pow(sh, 4) + pow(sh, 5))) -
                    lz * (-10.666666666666666 * sh * pow(ash, 2) *
                    pow(-1 + sh, -4) -
                    0.2962962962962963 * Li2sh * (1. + 6. * sh) *
                    pow(-1 + sh, -3) -
                    0.14814814814814814 * pow(Lsh, 2) * pow(-1 + sh, -2) -
                    0.14814814814814814 * Lsh * pow(-1 + sh, -3) * pow(sh, -2)*
                    (2. - 3. * sh + 2. * (1. + Lshb) * pow(sh, 2) +
                    3. * (-1. + 4. * Lshb) * pow(sh, 3)) +
                    0.024691358024691357 * pow(-1 + sh, -4) * pow(sh, -2)*
                    (9. - 42. * sh + (81. - 2. * pow(3.141592653589793, 2)) *
                    pow(sh, 2) + 2. * (-6. + pow(3.141592653589793, 2)) *
                    pow(sh, 3) + 6. *
                    (-23. + 2. * pow(3.141592653589793, 2)) * pow(sh, 4)\
            + 153. * pow(sh, 5) - 60. * pow(sh, 6) + 9. * pow(sh, 7))
                    - 0.5925925925925926 * ash * pow(-1 + sh, -3)*
                    (-4. - 3. * pow(sh, 2) + pow(sh, 3)) *
                    pow(-((-4 + sh) * sh), 0.5)) -
                    Lsh * (-5.333333333333333 * sh * pow(ash, 2) *
                    pow(-1 + sh, -4) -
                    0.2962962962962963 * Li2sh * (4. + sh) *
                    pow(-1 + sh, -3) -
                    0.024691358024691357 * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-18. + (57. + 36. * Lshb) * sh -
                    6. * (5. + 20. * Lshb + pow(3.141592653589793, 2)) *
                    pow(sh, 2) + (-93. + 96. * Lshb +
                    50. * pow(3.141592653589793, 2)) * pow(sh, 3)) -
                    0.2962962962962963 * ash * pow(-1 + sh, -3)*
                    (-4. - 3. * pow(sh, 2) + pow(sh, 3)) *
                    pow(-((-4 + sh) * sh), 0.5)) +
                    0.012345679012345678 * pow(-1 + sh, -4) * pow(sh, -2)*
                    (2. * pow(3.141592653589793, 2)*
                    (-6. + 45. * sh - 133. * pow(sh, 2) + 157. * pow(sh, 3) -
                    59. * pow(sh, 4) + 12. * pow(sh, 5) - 12. * pow(sh, 6) +
                    2. * pow(sh, 7)) +
                    3. * (7. - 78. * sh + 7. * pow(sh, 7) +
                    pow(sh, 5)*(155. -
                    32. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    8. * pow(sh, 6)*
                    (-7. + cl2 * pow(-((-4 + sh) * sh), 0.5)) -
                    8. * pow(sh, 3)*(27. + 18. * cl3 +
                    4. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    pow(sh, 4)*(-62. +
                    24. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    pow(sh, 2)*(243. +
                    32. * cl2 * pow(-((-4 + sh) * sh), 0.5))))) * pow(z, 2);
            else
                res += pow(z, 2)*(-0.647637155328409 -
                    0.9413088193612421 * (1. - sh) -
                    0.8385255835044603 * pow(1. - sh, 2) -
                    1.1019705279460212 * pow(1. - sh, 3) -
                    1.6181578946132955 * pow(1. - sh, 4) +
                    log(z)*(1.7526351083839322 +
                    0.5609956120680696 * (1. - sh) +
                    1.1754785561935277 * pow(1. - sh, 2) +
                    1.6549606263554564 * pow(1. - sh, 3) +
                    2.1141011282028064 * pow(1. - sh, 4)) +
                    (0.09876543209876543 +
                    0.1111111111111111 * (1. - sh) +
                    0.23703703703703705 * pow(1. - sh, 2) +
                    0.3012345679012346 * pow(1. - sh, 3) +
                    0.37037037037037035 * pow(1. - sh, 4)) * pow(log(z), 2)
                    );
        }

        if (5 <= maxpow) {
            if (sh < .900001)
                res += 0.02633744855967078 * pow(3.141592653589793, 2) * pow(sh, -3)*
                (3. + 14. * sh + 3. * pow(sh, 2)) * pow(z, 2.5);
            else
                res += (5.1988039643598265 + 10.397607928719653 * (1. - sh) +
                    16.376232487733454 * pow(1. - sh, 2) +
                    23.13467764140123 * pow(1. - sh, 3) +
                    30.672943389722974 * pow(1. - sh, 4)) * pow(z, 2.5);
        }

        if (6 <= maxpow) {
            if (sh < .900001)
                res += (1.1851851851851851 * Li3shb * sh * pow(-1 + sh, -4) -
                    0.5925925925925926 * Li3sh * pow(-1 + sh, -3) * pow(sh, -1) +
                    0.19753086419753085 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -1) - 0.7123300166871669 * pow(-1 + sh, -4) *
                    pow(sh, -1)*(1. - sh + 2. * pow(sh, 2)) -
                    0.2962962962962963 * Li2sh * pow(-1 + sh, -4) * pow(sh, -2)*
                    (4. - 14. * sh + 18. * pow(sh, 2) - 11. * pow(sh, 3) +
                    pow(sh, 4)) - 0.19753086419753085 * cl2 * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (-9. - sh + 9. * pow(sh, 2) - 6. * pow(sh, 3) +
                    pow(sh, 4)) - 0.06584362139917696 * ash * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (27. - sh + 9. * pow(sh, 2) - 6. * pow(sh, 3) +
                    pow(sh, 4)) + 0.5925925925925926 * sh * pow(ash, 2) *
                    pow(-1 + sh, -4)*(-6. + 27. * sh - 30. * pow(sh, 3) +
                    27. * pow(sh, 4) - 9. * pow(sh, 5) + pow(sh, 6)) -
                    Lsh * (3.5555555555555554 * sh * pow(ash, 2) *
                    pow(-1 + sh, -4) -
                    0.5925925925925926 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -1) + 0.19753086419753085 * ash * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (-9. - sh + 9. * pow(sh, 2) - 6. * pow(sh, 3) +
                    pow(sh, 4)) + 0.00823045267489712 * pow(-1 + sh, -4) *
                    pow(sh, -4)*(-10. + 10. * sh +
                    6. * (23. + 24. * Lshb) * pow(sh, 2) -
                    2. * (67. + 252. * Lshb +
                    30. * pow(3.141592653589793, 2)) * pow(sh, 3) +
                    (-163. + 648. * Lshb +
                    60. * pow(3.141592653589793, 2)) * pow(sh, 4) -
                    12. * (-5. + 33. * Lshb +
                    6. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    9. * (-5. + 4. * Lshb) * pow(sh, 6))) -
                    0.012345679012345678 * pow(Lsh, 2) * pow(-1 + sh, -5) *
                    pow(sh, -4)*(8. + 8. * sh - 94. * pow(sh, 2) +
                    (94. - 24. * Lshb) * pow(sh, 3) +
                    (52. + 48. * Lshb) * pow(sh, 4) -
                    8. * (19. + 3. * Lshb) * pow(sh, 5) + 72. * pow(sh, 6) -
                    12. * pow(sh, 7)) -
                    pow(lz, 2)*(0.5925925925925926 * Lsh * sh *
                    pow(-1 + sh, -4) +
                    0.024691358024691357 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (1. + 3. * sh - 18. * pow(sh, 2) + 25. * pow(sh, 3) -
                    36. * pow(sh, 4) + 26. * pow(sh, 5) - 27. * pow(sh, 6) -
                    22. * pow(sh, 7) + 38. * pow(sh, 8) - 16. * pow(sh, 9) +
                    2. * pow(sh, 10))) -
                    lz * (-1.1851851851851851 * Li2sh * sh * pow(-1 + sh, -4) +
                    7.111111111111111 * sh * pow(ash, 2) * pow(-1 + sh, -4) +
                    0.2962962962962963 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -1) + 0.3950617283950617 * ash * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (-9. - sh + 9. * pow(sh, 2) - 6. * pow(sh, 3) +
                    pow(sh, 4)) + 0.04938271604938271 * Lsh *
                    pow(-1 + sh, -4) * pow(sh, -4)*
                    (2. + 4. * sh - 27. * pow(sh, 2) + 22. * pow(sh, 3) +
                    14. * pow(sh, 4) - 12. * (1. + 2. * Lshb) * pow(sh, 5) +
                    9. * pow(sh, 6)) +
                    0.00823045267489712 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (-5. + 57. * pow(sh, 2) - 46. * pow(sh, 3) -
                    85. * pow(sh, 4) + 164. * pow(sh, 5) - 73. * pow(sh, 6) +
                    102. * pow(sh, 7) - 40. * pow(sh, 8) - 4. * pow(sh, 9) +
                    2. * pow(sh, 10))) -
                    0.0013717421124828531 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (-19. + 46. * sh + 1365. * pow(sh, 2) - 4435. * pow(sh, 3) +
                    3757. * pow(sh, 4) + (610. - 2592. * cl3) * pow(sh, 5) -
                    3103. * pow(sh, 6) + 2113. * pow(sh, 7) +
                    594. * pow(sh, 8) - 1548. * pow(sh, 9) +
                    714. * pow(sh, 10) - 94. * pow(sh, 11) +
                    6. * pow(3.141592653589793, 2)*
                    (6. + 12. * sh - 195. * pow(sh, 2) + 442. * pow(sh, 3) -
                    434. * pow(sh, 4) + 124. * pow(sh, 5) +
                    137. * pow(sh, 6) - 16. * pow(sh, 7) -
                    120. * pow(sh, 8) + 108. * pow(sh, 9) -
                    36. * pow(sh, 10) + 4. * pow(sh, 11)))) * pow(z, 3);
            else
                res += pow(z, 3)*(2.0558846293203854 -
                    5.023381570340977 * (1. - sh) -
                    7.761640024983791 * pow(1. - sh, 2) -
                    13.35266138630302 * pow(1. - sh, 3) -
                    24.65891981493292 * pow(1. - sh, 4) +
                    log(z)*(2.772759928702021 -
                    0.24604278849693273 * (1. - sh) +
                    3.842007139630303 * pow(1. - sh, 2) +
                    8.253815580345757 * pow(1. - sh, 3) +
                    13.162562518769866 * pow(1. - sh, 4)) +
                    (-0.2222222222222222 +
                    0.044444444444444446 * (1. - sh) +
                    0.9679012345679012 * pow(1. - sh, 2) +
                    1.689594356261023 * pow(1. - sh, 3) +
                    2.6807760141093473 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (7 <= maxpow) {
            if (sh < .900001)
                res += 0.002257495590828924 * pow(3.141592653589793, 2) * pow(sh, -5)*
                (15. + 108. * sh + 314. * pow(sh, 2) + 108. * pow(sh, 3) +
                    15. * pow(sh, 4)) * pow(z, 3.5);
            else
                res += (12.477129514463583 + 37.43138854339075 * (1. - sh) +
                    78.60591594112057 * pow(1. - sh, 2) +
                    139.74385056199213 * pow(1. - sh, 3) +
                    224.92254008662476 * pow(1. - sh, 4)) * pow(z, 3.5);
        }

        if (8 <= maxpow) {
            if (sh < .900001)
                res += (1.1872166944786116 * pow(-1 + sh, -3) * pow(sh, -2) -
                    0.9876543209876543 * Li3sh * pow(-1 + sh, -3) * pow(sh, -2) +
                    0.3292181069958848 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -2) + 0.2962962962962963 * cl2 * sh * sqrt4sh * sqrtsh *
                    (8. + 6. * sh - 6. * pow(sh, 2) + pow(sh, 3)) -
                    0.04938271604938271 * Li2sh * pow(-1 + sh, -5) * pow(sh, -3)*
                    (-50. + 230. * sh - 420. * pow(sh, 2) + 380. * pow(sh, 3) -
                    146. * pow(sh, 4) + 15. * pow(sh, 5)) +
                    0.04938271604938271 * ash * sh * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3)*(16. + 72. * sh + 18. * pow(sh, 2) -
                    203. * pow(sh, 3) + 189. * pow(sh, 4) - 63. * pow(sh, 5) +
                    7. * pow(sh, 6)) - 0.8888888888888888 * pow(ash, 2) *
                    pow(-1 + sh, -4) * pow(sh, 2)*
                    (36. - 60. * sh + 99. * pow(sh, 3) - 112. * pow(sh, 4) +
                    54. * pow(sh, 5) - 12. * pow(sh, 6) + pow(sh, 7)) -
                    Lsh * (-0.9876543209876543 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -2) - 0.2962962962962963 * ash * sh * sqrt4sh *
                    sqrtsh * (8. + 6. * sh - 6. * pow(sh, 2) + pow(sh, 3)) +
                    0.0013717421124828531 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (21. - 10. * sh - 307. * pow(sh, 2) -
                    (283. + 1800. * Lshb) * pow(sh, 3) +
                    5. * (437. + 1656. * Lshb +
                    120. * pow(3.141592653589793, 2)) * pow(sh, 4) -
                    2. * (1081. + 7560. * Lshb +
                    600. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    (253. + 13680. * Lshb +
                    600. * pow(3.141592653589793, 2)) * pow(sh, 6) +
                    (861. - 5256. * Lshb) * pow(sh, 7) +
                    6. * (49. + 90. * Lshb) * pow(sh, 8) - 78. * pow(sh, 9)))\
      + 0.00823045267489712 * pow(Lsh, 2) * pow(-1 + sh, -6) *
                    pow(sh, -6)*(6. + 14. * sh - 30. * pow(sh, 2) -
                    255. * pow(sh, 3) + (729. - 60. * Lshb) * pow(sh, 4) +
                    45. * (-13. + 4. * Lshb) * pow(sh, 5) -
                    15. * (11. + 12. * Lshb) * pow(sh, 6) +
                    (541. + 60. * Lshb) * pow(sh, 7) - 270. * pow(sh, 8) +
                    45. * pow(sh, 9)) +
                    0.00411522633744856 * pow(lz, 2) * pow(sh, -6)*
                    (3. + 25. * sh + 90. * pow(sh, 2) - 60. * pow(sh, 3) +
                    5. * pow(sh, 4) - 3. * pow(sh, 5) - 144. * pow(sh, 6) -
                    252. * pow(sh, 7) + 72. * pow(sh, 8) + 288. * pow(sh, 9) -
                    144. * pow(sh, 10) + 18. * pow(sh, 11)) -
                    lz * (0.49382716049382713 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -2) - 0.5925925925925926 * ash * sh * sqrt4sh *
                    sqrtsh * (8. + 6. * sh - 6. * pow(sh, 2) + pow(sh, 3)) +
                    0.01646090534979424 * Lsh * pow(-1 + sh, -5) * pow(sh, -6)*
                    (-3. - 10. * sh + 5. * pow(sh, 2) + 185. * pow(sh, 3) -
                    425. * pow(sh, 4) + 343. * pow(sh, 5) -
                    125. * pow(sh, 6) + 3. * pow(sh, 7) - 15. * pow(sh, 8) +
                    15. * pow(sh, 9)) +
                    0.00013717421124828533 * pow(-1 + sh, -4) * pow(sh, -6)*
                    (105. + 55. * sh - 1480. * pow(sh, 2) + 90. * pow(sh, 3) +
                    10470. * pow(sh, 4) - 25782. * pow(sh, 5) +
                    43242. * pow(sh, 6) - 52678. * pow(sh, 7) +
                    52987. * pow(sh, 8) - 14283. * pow(sh, 9) -
                    23976. * pow(sh, 10) + 3240. * pow(sh, 11) +
                    28080. * pow(sh, 12) - 22680. * pow(sh, 13) +
                    6480. * pow(sh, 14) - 630. * pow(sh, 15))) +
                    2.2862368541380887e-6 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (-2775. + 5550. * sh + 34425. * pow(sh, 2) +
                    1.48905e6 * pow(sh, 3) - 7.4002e6 * pow(sh, 4) +
                    1.4083748e7 * pow(sh, 5) - 1.4200216e7 * pow(sh, 6) +
                    9.34426e6 * pow(sh, 7) - 5.568515e6 * pow(sh, 8) +
                    141850. * pow(sh, 9) + 4.948647e6 * pow(sh, 10) -
                    27324. * pow(sh, 11) - 8.9613e6 * pow(sh, 12) +
                    9.8388e6 * pow(sh, 13) - 4.6764e6 * pow(sh, 14) +
                    1.03725e6 * pow(sh, 15) - 86850. * pow(sh, 16) +
                    1200. * pow(3.141592653589793, 2)*
                    (9. + 30. * sh - 15. * pow(sh, 2) - 1245. * pow(sh, 3) +
                    4325. * pow(sh, 4) - 6463. * pow(sh, 5) +
                    5357. * pow(sh, 6) - 2657. * pow(sh, 7) +
                    295. * pow(sh, 8) + 1405. * pow(sh, 9) -
                    1014. * pow(sh, 10) - 1782. * pow(sh, 11) +
                    3798. * pow(sh, 12) - 2988. * pow(sh, 13) +
                    1188. * pow(sh, 14) - 234. * pow(sh, 15) +
                    18. * pow(sh, 16)))) * pow(z, 4);
            else
                res += pow(z, 4)*(4.166076007573638 -
                    29.482916540765096 * (1. - sh) -
                    51.76439651455935 * pow(1. - sh, 2) -
                    100.58418925538838 * pow(1. - sh, 3) -
                    217.9981110758939 * pow(1. - sh, 4) +
                    log(z)*(6.036523956202085 -
                    6.188787330687681 * (1. - sh) +
                    14.248013358351397 * pow(1. - sh, 2) +
                    42.62670356928015 * pow(1. - sh, 3) +
                    77.13858012891833 * pow(1. - sh, 4)) +
                    (-0.41975308641975306 +
                    0.24691358024691357 * (1. - sh) +
                    5.111111111111111 * pow(1. - sh, 2) +
                    9.74485596707819 * pow(1. - sh, 3) +
                    17.88477366255144 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (9 <= maxpow) {
            if (sh < .900001)
                res += 0.0005374989501973629 * pow(3.141592653589793, 2) * pow(sh, -7)*
                (35. + 330. * sh + 1389. * pow(sh, 2) + 3212. * pow(sh, 3) +
                    1389. * pow(sh, 4) + 330. * pow(sh, 5) + 35. * pow(sh, 6)) *
                pow(z, 4.5);
            else
                res += (35.64894146989595 + 142.5957658795838 * (1. - sh) +
                    372.5314383604127 * pow(1. - sh, 2) +
                    793.1889477051849 * pow(1. - sh, 3) +
                    1491.2079534505585 * pow(1. - sh, 4)) * pow(z, 4.5);
        }

        if (10 <= maxpow) {
            if (sh < .900001)
                res += (2.493155058405084 * pow(-1 + sh, -3) * pow(sh, -3) -
                    2.074074074074074 * Li3sh * pow(-1 + sh, -3) * pow(sh, -3) +
                    0.691358024691358 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -3) - 0.5925925925925926 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-20. - 11. * sh + 24. * pow(sh, 2) -
                    9. * pow(sh, 3) + pow(sh, 4)) -
                    0.019753086419753086 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 2)*
                    (630. - 1853. * sh - 99. * pow(sh, 2) + 4458. * pow(sh, 3) -
                    5217. * pow(sh, 4) + 2538. * pow(sh, 5) -
                    564. * pow(sh, 6) + 47. * pow(sh, 7)) +
                    0.09876543209876543 * Li2sh * pow(-1 + sh, -6) * pow(sh, -4)*
                    (-63. + 355. * sh - 826. * pow(sh, 2) + 1008. * pow(sh, 3) -
                    665. * pow(sh, 4) + 213. * pow(sh, 5) - 7. * pow(sh, 7) +
                    pow(sh, 8)) + 1.7777777777777777 * pow(ash, 2) *
                    pow(-1 + sh, -4) * pow(sh, 2)*
                    (10. - 90. * sh + 165. * pow(sh, 2) - 333. * pow(sh, 4) +
                    445. * pow(sh, 5) - 275. * pow(sh, 6) + 90. * pow(sh, 7) -
                    15. * pow(sh, 8) + pow(sh, 9)) -
                    Lsh * (-2.074074074074074 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -3) + 0.5925925925925926 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-20. - 11. * sh + 24. * pow(sh, 2) -
                    9. * pow(sh, 3) + pow(sh, 4)) +
                    0.0000823045267489712 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (-162. + 36. * sh + 2914. * pow(sh, 2) +
                    5862. * pow(sh, 3) +
                    30. * (-767. + 2520. * Lshb) * pow(sh, 4) -
                    8. * (2131. + 53250. * Lshb +
                    2625. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    8. * (12113. + 123900. * Lshb +
                    7875. * pow(3.141592653589793, 2)) * pow(sh, 6) -
                    18. * (5693. + 67200. * Lshb +
                    3500. * pow(3.141592653589793, 2)) * pow(sh, 7) +
                    3. * (15101. + 266000. * Lshb +
                    7000. * pow(3.141592653589793, 2)) * pow(sh, 8) -
                    50. * (259. + 5112. * Lshb) * pow(sh, 9) +
                    9600. * pow(sh, 10) +
                    150. * (11. + 56. * Lshb) * pow(sh, 11) -
                    25. * (25. + 48. * Lshb) * pow(sh, 12))) -
                    0.0024691358024691358 * pow(Lsh, 2) * pow(-1 + sh, -7) *
                    pow(sh, -8)*(12. + 42. * sh - 28. * pow(sh, 2) -
                    308. * pow(sh, 3) - 1533. * pow(sh, 4) +
                    (8318. - 420. * Lshb) * pow(sh, 5) +
                    6. * (-2237. + 280. * Lshb) * pow(sh, 6) -
                    56. * (-143. + 45. * Lshb) * pow(sh, 7) +
                    12. * (149. + 140. * Lshb) * pow(sh, 8) -
                    (4507. + 420. * Lshb) * pow(sh, 9) +
                    1540. * pow(sh, 10) + 140. * pow(sh, 11) -
                    160. * pow(sh, 12) + 20. * pow(sh, 13)) -
                    0.0012345679012345679 * pow(lz, 2) * pow(sh, -8)*
                    (-6. - 63. * sh - 301. * pow(sh, 2) - 840. * pow(sh, 3) +
                    630. * pow(sh, 4) - 99. * pow(sh, 5) + 153. * pow(sh, 6) +
                    6. * pow(sh, 7) + 1200. * pow(sh, 8) + 1440. * pow(sh, 9) +
                    3360. * pow(sh, 10) - 2400. * pow(sh, 11) -
                    5400. * pow(sh, 12) + 4800. * pow(sh, 13) -
                    1320. * pow(sh, 14) + 120. * pow(sh, 15)) -
                    lz * (1.037037037037037 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -3) + 1.1851851851851851 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-20. - 11. * sh + 24. * pow(sh, 2) -
                    9. * pow(sh, 3) + pow(sh, 4)) +
                    0.0049382716049382715 * Lsh * pow(-1 + sh, -6) *
                    pow(sh, -8)*(6. + 27. * sh + 13. * pow(sh, 2) -
                    141. * pow(sh, 3) - 1380. * pow(sh, 4) +
                    5549. * pow(sh, 5) - 8207. * pow(sh, 6) +
                    6207. * pow(sh, 7) - 2809. * pow(sh, 8) +
                    1080. * pow(sh, 9) - 30. * pow(sh, 10) -
                    30. * pow(sh, 11) + 35. * pow(sh, 12)) +
                    0.000011757789535567314 * pow(-1 + sh, -5) * pow(sh, -8)*
                    (-567. - 441. * sh + 9758. * pow(sh, 2) +
                    30275. * pow(sh, 3) - 166495. * pow(sh, 4) +
                    20923. * pow(sh, 5) + 866054. * pow(sh, 6) -
                    1.788427e6 * pow(sh, 7) + 1.255755e6 * pow(sh, 8) +
                    458890. * pow(sh, 9) - 1.258076e6 * pow(sh, 10) +
                    55832. * pow(sh, 11) - 524481. * pow(sh, 12) +
                    2.826e6 * pow(sh, 13) - 901320. * pow(sh, 14) -
                    5.25168e6 * pow(sh, 15) + 7.8771e6 * pow(sh, 16) -
                    5.0799e6 * pow(sh, 17) + 1.7073e6 * pow(sh, 18) -
                    290640. * pow(sh, 19) + 19740. * pow(sh, 20))) -
                    1.3997368494722993e-8 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (-161406. + 318843. * sh + 1.910657e6 * pow(sh, 2) -
                    738969. * pow(sh, 3) + 6.33135615e8 * pow(sh, 4) -
                    3.654733992e9 * pow(sh, 5) + 8.580730746e9 * pow(sh, 6) -
                    1.0387902666e10 * pow(sh, 7) +
                    6.272402572e9 * pow(sh, 8) - 4.35513965e8 * pow(sh, 9) -
                    2.310469467e9 * pow(sh, 10) +
                    2.213537811e9 * pow(sh, 11) -
                    4.191847021e9 * pow(sh, 12) +
                    8.659496442e9 * pow(sh, 13) -
                    5.00515056e9 * pow(sh, 14) -
                    1.057709688e10 * pow(sh, 15) +
                    2.294859924e10 * pow(sh, 16) -
                    2.03364504e10 * pow(sh, 17) +
                    1.00250472e10 * pow(sh, 18) -
                    2.83732932e9 * pow(sh, 19) + 4.2896364e8 * pow(sh, 20) -
                    2.674812e7 * pow(sh, 21) +
                    58800. * pow(3.141592653589793, 2)*
                    (18. + 81. * sh + 39. * pow(sh, 2) - 423. * pow(sh, 3) -
                    9810. * pow(sh, 4) + 47729. * pow(sh, 5) -
                    95467. * pow(sh, 6) + 103887. * pow(sh, 7) -
                    63289. * pow(sh, 8) + 15730. * pow(sh, 9) +
                    8388. * pow(sh, 10) - 21404. * pow(sh, 11) +
                    46029. * pow(sh, 12) - 50988. * pow(sh, 13) -
                    20160. * pow(sh, 14) + 133320. * pow(sh, 15) -
                    179760. * pow(sh, 16) + 130200. * pow(sh, 17) -
                    56400. * pow(sh, 18) + 14520. * pow(sh, 19) -
                    2040. * pow(sh, 20) + 120. * pow(sh, 21)))) * pow(z, 5);
            else
                res += pow(z, 5)*(9.495992115022151 -
                    144.07780670229167 * (1. - sh) -
                    287.1615196453904 * pow(1. - sh, 2) -
                    629.2386817194127 * pow(1. - sh, 3) -
                    1577.85840284407 * pow(1. - sh, 4) +
                    log(z)*(18.273866188842664 -
                    36.50758667966486 * (1. - sh) +
                    57.239414092843454 * pow(1. - sh, 2) +
                    217.34199886507017 * pow(1. - sh, 3) +
                    420.0317629604588 * pow(1. - sh, 4)) +
                    (-1.5802469135802468 +
                    0.2962962962962963 * (1. - sh) +
                    25. * pow(1. - sh, 2) +
                    51.65432098765432 * pow(1. - sh, 3) +
                    108.14814814814815 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (11 <= maxpow) {
            if (sh < .900001)
                res += 0.000038004976276581215 * pow(3.141592653589793, 2) * pow(sh, -9)*
                (315. + 3640. * sh + 19380. * pow(sh, 2) + 62088. * pow(sh, 3) +
                    124834. * pow(sh, 4) + 62088. * pow(sh, 5) +
                    19380. * pow(sh, 6) + 3640. * pow(sh, 7) + 315. * pow(sh, 8)) *
                pow(z, 5.5);
            else
                res += (110.90781790634296 + 554.5390895317148 * (1. - sh) +
                    1730.1619593389503 * pow(1. - sh, 2) +
                    4281.041771184839 * pow(1. - sh, 3) +
                    9178.810229798877 * pow(1. - sh, 4)) * pow(z, 5.5);
        }

        if (12 <= maxpow) {
            if (sh < .900001)
                res += (5.983572140172202 * pow(-1 + sh, -3) * pow(sh, -4) -
                    4.977777777777778 * Li3sh * pow(-1 + sh, -3) * pow(sh, -4) +
                    1.6592592592592592 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -4) + 0.691358024691358 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-8. + 102. * sh + 39. * pow(sh, 2) -
                    168. * pow(sh, 3) + 102. * pow(sh, 4) - 24. * pow(sh, 5) +
                    2. * pow(sh, 6)) + 0.006584362139917695 * ash * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3) * pow(sh, 2)*
                    (1236. - 20412. * sh + 48897. * pow(sh, 2) -
                    963. * pow(sh, 3) - 119097. * pow(sh, 4) +
                    165591. * pow(sh, 5) - 103846. * pow(sh, 6) +
                    34110. * pow(sh, 7) - 5685. * pow(sh, 8) + 379. * pow(sh, 9))
                    - 2.074074074074074 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 3)*(-90. + 560. * sh - 999. * pow(sh, 2) +
                    2278. * pow(sh, 4) - 3456. * pow(sh, 5) +
                    2565. * pow(sh, 6) - 1092. * pow(sh, 7) +
                    270. * pow(sh, 8) - 36. * pow(sh, 9) + 2. * pow(sh, 10)) +
                    0.0049382716049382715 * Li2sh * pow(-1 + sh, -7) * pow(sh, -5)*
                    (3528. - 23478. * sh + 66420. * pow(sh, 2) -
                    102960. * pow(sh, 3) + 93240. * pow(sh, 4) -
                    47628. * pow(sh, 5) + 10808. * pow(sh, 6) -
                    135. * pow(sh, 9) + 30. * pow(sh, 10)) -
                    Lsh * (-4.977777777777778 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -4) - 0.691358024691358 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-8. + 102. * sh + 39. * pow(sh, 2) -
                    168. * pow(sh, 3) + 102. * pow(sh, 4) -
                    24. * pow(sh, 5) + 2. * pow(sh, 6)) +
                    0.00001646090534979424 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (440. - 32. * sh - 10212. * pow(sh, 2) -
                    23632. * pow(sh, 3) + 7888. * pow(sh, 4) -
                    168. * (-2921. + 6300. * Lshb) * pow(sh, 5) +
                    18. * (-60791. + 391300. * Lshb +
                    14000. * pow(3.141592653589793, 2)) * pow(sh, 6) -
                    6. * (-91207. + 3.321e6 * Lshb +
                    168000. * pow(3.141592653589793, 2)) * pow(sh, 7) +
                    216. * (3607. + 143000. * Lshb +
                    7000. * pow(3.141592653589793, 2)) * pow(sh, 8) -
                    6. * (202093. + 4.662e6 * Lshb +
                    168000. * pow(3.141592653589793, 2)) * pow(sh, 9) +
                    6. * (113557. + 2.3814e6 * Lshb +
                    42000. * pow(3.141592653589793, 2)) * pow(sh, 10) -
                    15. * (16441. + 216160. * Lshb) * pow(sh, 11) +
                    20060. * pow(sh, 12) + 42310. * pow(sh, 13) +
                    45. * (23. + 900. * Lshb) * pow(sh, 14) -
                    45. * (41. + 200. * Lshb) * pow(sh, 15))) -
                    0.0004938271604938272 * pow(Lsh, 2) * pow(-1 + sh, -8) *
                    pow(sh, -10)*(-40. - 184. * sh - 40. * pow(sh, 2) +
                    1160. * pow(sh, 3) + 2240. * pow(sh, 4) +
                    16100. * pow(sh, 5) +
                    144. * (-936. + 35. * Lshb) * pow(sh, 6) +
                    (321315. - 25200. * Lshb) * pow(sh, 7) +
                    15. * (-23729. + 3360. * Lshb) * pow(sh, 8) -
                    160. * (-1006. + 315. * Lshb) * pow(sh, 9) +
                    40. * (859. + 630. * Lshb) * pow(sh, 10) -
                    2. * (31921. + 2520. * Lshb) * pow(sh, 11) +
                    18270. * pow(sh, 12) + 675. * pow(sh, 14) -
                    825. * pow(sh, 15) + 150. * pow(sh, 16)) -
                    0.0004938271604938272 * pow(lz, 2) * pow(sh, -10)*
                    (-10. - 126. * sh - 738. * pow(sh, 2) - 2646. * pow(sh, 3) -
                    6300. * pow(sh, 4) + 5040. * pow(sh, 5) -
                    1194. * pow(sh, 6) + 873. * pow(sh, 7) +
                    1791. * pow(sh, 8) + 10. * pow(sh, 9) +
                    8400. * pow(sh, 10) + 9100. * pow(sh, 11) +
                    11200. * pow(sh, 12) + 46900. * pow(sh, 13) -
                    47600. * pow(sh, 14) - 86450. * pow(sh, 15) +
                    116200. * pow(sh, 16) - 51100. * pow(sh, 17) +
                    9800. * pow(sh, 18) - 700. * pow(sh, 19)) -
                    lz * (2.488888888888889 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -4) - 1.382716049382716 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-8. + 102. * sh + 39. * pow(sh, 2) -
                    168. * pow(sh, 3) + 102. * pow(sh, 4) -
                    24. * pow(sh, 5) + 2. * pow(sh, 6)) +
                    0.0009876543209876543 * Lsh * pow(-1 + sh, -7) *
                    pow(sh, -10)*(-20. - 112. * sh - 132. * pow(sh, 2) +
                    448. * pow(sh, 3) + 1568. * pow(sh, 4) +
                    16548. * pow(sh, 5) - 99448. * pow(sh, 6) +
                    212137. * pow(sh, 7) - 240168. * pow(sh, 8) +
                    162112. * pow(sh, 9) - 68488. * pow(sh, 10) +
                    15610. * pow(sh, 11) - 980. * pow(sh, 12) +
                    20. * pow(sh, 13) - 105. * pow(sh, 14) +
                    135. * pow(sh, 15)) +
                    7.838526357044875e-7 * pow(-1 + sh, -6) * pow(sh, -10)*
                    (4620. + 4284. * sh - 102942. * pow(sh, 2) -
                    351078. * pow(sh, 3) - 268254. * pow(sh, 4) +
                    1.062621e7 * pow(sh, 5) - 2.1816102e7 * pow(sh, 6) -
                    1.1713284e7 * pow(sh, 7) + 9.2176614e7 * pow(sh, 8) -
                    1.30993468e8 * pow(sh, 9) +
                    9.7705975e7 * pow(sh, 10) -
                    8.3020137e7 * pow(sh, 11) +
                    1.22513471e8 * pow(sh, 12) -
                    1.48849691e8 * pow(sh, 13) +
                    1.22190192e8 * pow(sh, 14) +
                    1.1648879e8 * pow(sh, 15) - 5.630639e8 * pow(sh, 16) +
                    4.247208e8 * pow(sh, 17) + 8.672076e8 * pow(sh, 18) -
                    2.255526e9 * pow(sh, 19) + 2.3724372e9 * pow(sh, 20) -
                    1.4385273e9 * pow(sh, 21) + 5.355966e8 * pow(sh, 22) -
                    1.205778e8 * pow(sh, 23) + 1.5036e7 * pow(sh, 24) -
                    795900. * pow(sh, 25))) -
                    6.22105266432133e-10 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (1.60524e6 - 3.372768e6 * sh - 2.1255318e7 * pow(sh, 2) +
                    5.1364152e7 * pow(sh, 3) + 1.37438532e8 * pow(sh, 4) -
                    4.2259525308e10 * pow(sh, 5) +
                    2.74794978024e11 * pow(sh, 6) -
                    7.61157740601e11 * pow(sh, 7) +
                    1.144773779814e12 * pow(sh, 8) -
                    9.93234387676e11 * pow(sh, 9) +
                    5.07224614904e11 * pow(sh, 10) -
                    2.38950893986e11 * pow(sh, 11) +
                    2.88773890244e11 * pow(sh, 12) -
                    3.74015495266e11 * pow(sh, 13) +
                    2.45587937594e11 * pow(sh, 14) +
                    5.02610946089e11 * pow(sh, 15) -
                    1.90653668497e12 * pow(sh, 16) +
                    2.1081380789e12 * pow(sh, 17) +
                    1.1357177076e12 * pow(sh, 18) -
                    6.24126592845e12 * pow(sh, 19) +
                    8.68889605815e12 * pow(sh, 20) -
                    6.88407273225e12 * pow(sh, 21) +
                    3.47059394955e12 * pow(sh, 22) -
                    1.1307208248e12 * pow(sh, 23) +
                    2.301705126e11 * pow(sh, 24) -
                    2.65567113e10 * pow(sh, 25) + 1.3226913e9 * pow(sh, 26) -
                    264600. * pow(3.141592653589793, 2)*
                    (60. + 336. * sh + 396. * pow(sh, 2) -
                    1344. * pow(sh, 3) - 4704. * pow(sh, 4) -
                    127764. * pow(sh, 5) + 807808. * pow(sh, 6) -
                    2.054287e6 * pow(sh, 7) + 2.890968e6 * pow(sh, 8) -
                    2.434312e6 * pow(sh, 9) + 1.206688e6 * pow(sh, 10) -
                    345954. * pow(sh, 11) + 158816. * pow(sh, 12) -
                    132224. * pow(sh, 13) - 435459. * pow(sh, 14) +
                    2.009791e6 * pow(sh, 15) - 3.32854e6 * pow(sh, 16) +
                    895300. * pow(sh, 17) + 6.5037e6 * pow(sh, 18) -
                    1.38369e7 * pow(sh, 19) + 1.50031e7 * pow(sh, 20) -
                    1.02879e7 * pow(sh, 21) + 4.6809e6 * pow(sh, 22) -
                    1.4084e6 * pow(sh, 23) + 268800. * pow(sh, 24) -
                    29400. * pow(sh, 25) + 1400. * pow(sh, 26)))) * pow(z, 6);
            else
                res += pow(z, 6)*(24.733805819607653 -
                    658.4526886654753 * (1. - sh) -
                    1475.1364432727344 * pow(1. - sh, 2) -
                    3606.730264376797 * pow(1. - sh, 3) -
                    10286.147459271095 * pow(1. - sh, 4) +
                    log(z)*(60.344916140667145 -
                    182.02114574142348 * (1. - sh) +
                    236.5865278308859 * pow(1. - sh, 2) +
                    1085.4690469343443 * pow(1. - sh, 3) +
                    2155.306243897463 * pow(1. - sh, 4)) +
                    (-7.148148148148148 + sh +
                    120.49135802469135 * pow(1. - sh, 2) +
                    264.53827160493825 * pow(1. - sh, 3) +
                    620.7407407407408 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (13 <= maxpow) {
            if (sh < .900001)
                res += 0.000011959607919203879 * pow(3.141592653589793, 2) *
                pow(sh, -11)*(693. + 9450. * sh + 60305. * pow(sh, 2) +
                    238200. * pow(sh, 3) + 642234. * pow(sh, 4) +
                    1.173308e6 * pow(sh, 5) + 642234. * pow(sh, 6) +
                    238200. * pow(sh, 7) + 60305. * pow(sh, 8) +
                    9450. * pow(sh, 9) + 693. * pow(sh, 10)) * pow(z, 6.5);
            else
                res += (362.9710404207588 + 2177.8262425245525 * (1. - sh) +
                    7894.6201291515035 * pow(1. - sh, 2) +
                    22231.97622577148 * pow(1. - sh, 3) +
                    53453.96732767853 * pow(1. - sh, 4)) * pow(z, 6.5);
        }

        if (14 <= maxpow) {
            if (sh < .900001)
                res += (15.671260367117672 * pow(-1 + sh, -3) * pow(sh, -5) -
                    13.037037037037036 * Li3sh * pow(-1 + sh, -3) * pow(sh, -5) +
                    4.345679012345679 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -5) - 0.35555555555555557 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(252. - 1383. * sh - 342. * pow(sh, 2) +
                    2808. * pow(sh, 3) - 2380. * pow(sh, 4) +
                    870. * pow(sh, 5) - 150. * pow(sh, 6) + 10. * pow(sh, 7)) -
                    0.005643738977072311 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 3)*
                    (-28035. + 242727. * sh - 521748. * pow(sh, 2) +
                    32319. * pow(sh, 3) + 1.309096e6 * pow(sh, 4) -
                    2.07882e6 * pow(sh, 5) + 1.572282e6 * pow(sh, 6) -
                    674165. * pow(sh, 7) + 166995. * pow(sh, 8) -
                    22266. * pow(sh, 9) + 1237. * pow(sh, 10)) +
                    0.05925925925925926 * Li2sh * pow(-1 + sh, -8) * pow(sh, -6)*
                    (-880. + 6748. * sh - 22484. * pow(sh, 2) +
                    42350. * pow(sh, 3) - 48950. * pow(sh, 4) +
                    34980. * pow(sh, 5) - 14476. * pow(sh, 6) +
                    2770. * pow(sh, 7) - 11. * pow(sh, 11) + 3. * pow(sh, 12)) +
                    1.0666666666666667 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 3)*(-70. + 1890. * sh - 9345. * pow(sh, 2) +
                    15946. * pow(sh, 3) - 39510. * pow(sh, 5) +
                    66255. * pow(sh, 6) - 56700. * pow(sh, 7) +
                    29358. * pow(sh, 8) - 9520. * pow(sh, 9) +
                    1890. * pow(sh, 10) - 210. * pow(sh, 11) + 10. * pow(sh, 12))
                    - Lsh * (-13.037037037037036 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -5) + 0.35555555555555557 * ash * sqrt4sh *
                    sqrtsh * pow(sh, 3)*
                    (252. - 1383. * sh - 342. * pow(sh, 2) +
                    2808. * pow(sh, 3) - 2380. * pow(sh, 4) +
                    870. * pow(sh, 5) - 150. * pow(sh, 6) + 10. * pow(sh, 7))\
         + 1.1197894795778394e-6 * pow(-1 + sh, -8) *
                    pow(sh, -12)*(-3900. - 100. * sh +
                    116036. * pow(sh, 2) + 329570. * pow(sh, 3) -
                    93490. * pow(sh, 4) - 1.36222e6 * pow(sh, 5) +
                    140. * (-163613. + 332640. * Lshb) * pow(sh, 6) -
                    2. * (-5.1887161e7 + 1.7855208e8 * Lshb +
                    4.851e6 * pow(3.141592653589793, 2)) * pow(sh, 7) +
                    2. * (-9.0883589e7 + 5.9492664e8 * Lshb +
                    2.4255e7 * pow(3.141592653589793, 2)) * pow(sh, 8)\
            - 880. * (-178124. + 2.546775e6 * Lshb +
                    110250. * pow(3.141592653589793, 2)) * pow(sh, 9) +
                    5. * (-1.1387749e7 + 5.180868e8 * Lshb +
                    1.9404e7 * pow(3.141592653589793, 2)) * pow(sh, 10)\
            - 5. * (1.387987e6 + 3.7022832e8 * Lshb +
                    9.702e6 * pow(3.141592653589793, 2)) * pow(sh, 11)\
            + (1.1437831e7 + 7.6606992e8 * Lshb +
                    9.702e6 * pow(3.141592653589793, 2)) * pow(sh, 12)\
            - 28. * (18397. + 5.2353e6 * Lshb) * pow(sh, 13) -
                    936145. * pow(sh, 14) + 351575. * pow(sh, 15) +
                    587265. * pow(sh, 16) +
                    1176. * (-38. + 495. * Lshb) * pow(sh, 17) -
                    294. * (61. + 540. * Lshb) * pow(sh, 18))) -
                    0.00023515579071134627 * pow(Lsh, 2) * pow(-1 + sh, -9) *
                    pow(sh, -12)*(60. + 340. * sh + 312. * pow(sh, 2) -
                    1872. * pow(sh, 3) - 4980. * pow(sh, 4) -
                    1620. * pow(sh, 5) - 92970. * pow(sh, 6) +
                    (934391. - 27720. * Lshb) * pow(sh, 7) +
                    30. * (-97057. + 5544. * Lshb) * pow(sh, 8) +
                    (4.537599e6 - 415800. * Lshb) * pow(sh, 9) +
                    5. * (-756467. + 110880. * Lshb) * pow(sh, 10) -
                    15. * (-89267. + 27720. * Lshb) * pow(sh, 11) +
                    6. * (48563. + 27720. * Lshb) * pow(sh, 12) -
                    10. * (40823. + 2772. * Lshb) * pow(sh, 13) +
                    99792. * pow(sh, 14) + 1386. * pow(sh, 17) -
                    1764. * pow(sh, 18) + 378. * pow(sh, 19)) -
                    0.00023515579071134627 * pow(lz, 2) * pow(sh, -12)*
                    (-15. - 220. * sh - 1518. * pow(sh, 2) - 6534. * pow(sh, 3) -
                    19503. * pow(sh, 4) - 41580. * pow(sh, 5) +
                    34650. * pow(sh, 6) - 11094. * pow(sh, 7) +
                    2061. * pow(sh, 8) + 13740. * pow(sh, 9) +
                    12253. * pow(sh, 10) + 15. * pow(sh, 11) +
                    52920. * pow(sh, 12) + 55188. * pow(sh, 13) +
                    61992. * pow(sh, 14) + 49140. * pow(sh, 15) +
                    706860. * pow(sh, 16) - 807030. * pow(sh, 17) -
                    1.307124e6 * pow(sh, 18) + 2.391984e6 * pow(sh, 19) -
                    1.45908e6 * pow(sh, 20) + 434700. * pow(sh, 21) -
                    64260. * pow(sh, 22) + 3780. * pow(sh, 23)) -
                    lz * (6.518518518518518 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -5) + 0.7111111111111111 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(252. - 1383. * sh - 342. * pow(sh, 2) +
                    2808. * pow(sh, 3) - 2380. * pow(sh, 4) +
                    870. * pow(sh, 5) - 150. * pow(sh, 6) + 10. * pow(sh, 7))\
         + 0.00047031158142269255 * Lsh * pow(-1 + sh, -8) *
                    pow(sh, -12)*(30. + 200. * sh + 356. * pow(sh, 2) -
                    580. * pow(sh, 3) - 3070. * pow(sh, 4) -
                    3880. * pow(sh, 5) - 95410. * pow(sh, 6) +
                    738379. * pow(sh, 7) - 2.056331e6 * pow(sh, 8) +
                    3.10735e6 * pow(sh, 9) - 2.878135e6 * pow(sh, 10) +
                    1.70477e6 * pow(sh, 11) - 636256. * pow(sh, 12) +
                    132944. * pow(sh, 13) - 2380. * pow(sh, 14) -
                    2065. * pow(sh, 15) + 315. * pow(sh, 16) -
                    168. * pow(sh, 17) + 231. * pow(sh, 18)) -
                    3.39330145326618e-8 * pow(-1 + sh, -7) * pow(sh, -12)*
                    (64350. + 66000. * sh - 1.848594e6 * pow(sh, 2) -
                    7.286499e6 * pow(sh, 3) - 5.743914e6 * pow(sh, 4) +
                    1.6732716e7 * pow(sh, 5) + 8.36674146e8 * pow(sh, 6) -
                    3.086059581e9 * pow(sh, 7) +
                    2.920757103e9 * pow(sh, 8) +
                    4.213007403e9 * pow(sh, 9) -
                    1.3030540952e10 * pow(sh, 10) +
                    1.3445244908e10 * pow(sh, 11) -
                    5.400217599e9 * pow(sh, 12) -
                    4.838723267e9 * pow(sh, 13) +
                    1.4220596345e10 * pow(sh, 14) -
                    1.7384453508e10 * pow(sh, 15) +
                    7.769749144e9 * pow(sh, 16) +
                    1.428417884e9 * pow(sh, 17) +
                    4.8744289353e10 * pow(sh, 18) -
                    1.85048020584e11 * pow(sh, 19) +
                    2.17589171184e11 * pow(sh, 20) +
                    1.46917624392e11 * pow(sh, 21) -
                    8.1335313675e11 * pow(sh, 22) +
                    1.2454621641e12 * pow(sh, 23) -
                    1.1155514832e12 * pow(sh, 24) +
                    6.5679027876e11 * pow(sh, 25) -
                    2.615261418e11 * pow(sh, 26) +
                    6.977252898e10 * pow(sh, 27) -
                    1.19369943e10 * pow(sh, 28) +
                    1.18203624e9 * pow(sh, 29) - 5.143446e7 * pow(sh, 30)))
                    - 2.4482694468009954e-12 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (-2.074545e8 + 4.76982e8 * sh +
                    3.223561968e9 * pow(sh, 2) -
                    1.2229671465e10 * pow(sh, 3) -
                    5.5118379195e10 * pow(sh, 4) +
                    5.758493697e10 * pow(sh, 5) +
                    3.34335296988e13 * pow(sh, 6) -
                    2.46183339844728e14 * pow(sh, 7) +
                    7.88493088730853e14 * pow(sh, 8) -
                    1.41978242154342e15 * pow(sh, 9) +
                    1.554606048182275e15 * pow(sh, 10) -
                    1.04527795567331e15 * pow(sh, 11) +
                    4.00804930228849e14 * pow(sh, 12) +
                    4.89753913432e12 * pow(sh, 13) -
                    2.6147112177326e14 * pow(sh, 14) +
                    4.2032307297505e14 * pow(sh, 15) -
                    3.35740716930395e14 * pow(sh, 16) +
                    2.57962579027846e14 * pow(sh, 17) -
                    1.575614131965377e15 * pow(sh, 18) +
                    5.472481687455111e15 * pow(sh, 19) -
                    8.337459144709044e15 * pow(sh, 20) +
                    1.620077584398966e15 * pow(sh, 21) +
                    1.7052028891101666e16 * pow(sh, 22) -
                    3.5835539060836744e16 * pow(sh, 23) +
                    4.028199224768888e16 * pow(sh, 24) -
                    2.974451143108045e16 * pow(sh, 25) +
                    1.5207708416925024e16 * pow(sh, 26) -
                    5.427604622626956e15 * pow(sh, 27) +
                    1.32696547935336e15 * pow(sh, 28) -
                    2.1153689203878e14 * pow(sh, 29) +
                    1.97724893751e13 * pow(sh, 30) -
                    8.2047522942e11 * pow(sh, 31) +
                    3.20166e7 * pow(3.141592653589793, 2)*
                    (90. + 600. * sh + 1068. * pow(sh, 2) -
                    1740. * pow(sh, 3) - 9210. * pow(sh, 4) -
                    11640. * pow(sh, 5) - 771330. * pow(sh, 6) +
                    5.877289e6 * pow(sh, 7) - 1.8209993e7 * pow(sh, 8) +
                    3.175429e7 * pow(sh, 9) - 3.4335085e7 * pow(sh, 10) +
                    2.335241e7 * pow(sh, 11) - 9.338992e6 * pow(sh, 12) +
                    1.311716e6 * pow(sh, 13) + 1.360208e6 * pow(sh, 14) -
                    2.228227e6 * pow(sh, 15) + 3.717793e6 * pow(sh, 16) -
                    1.4308436e7 * pow(sh, 17) +
                    4.9487425e7 * pow(sh, 18) -
                    9.6430764e7 * pow(sh, 19) +
                    7.2149616e7 * pow(sh, 20) +
                    1.14281496e8 * pow(sh, 21) -
                    4.10382504e8 * pow(sh, 22) +
                    6.13666368e8 * pow(sh, 23) -
                    5.83391592e8 * pow(sh, 24) +
                    3.84934788e8 * pow(sh, 25) -
                    1.80700632e8 * pow(sh, 26) +
                    6.0198768e7 * pow(sh, 27) - 1.389528e7 * pow(sh, 28) +
                    2.10924e6 * pow(sh, 29) - 189000. * pow(sh, 30) +
                    7560. * pow(sh, 31)))) * pow(z, 7);
            else
                res += pow(z, 7)*(71.68678327155476 -
                    2907.1819685415394 * (1. - sh) -
                    7242.316104312352 * pow(1. - sh, 2) -
                    19566.456626720403 * pow(1. - sh, 3) -
                    62593.82522143261 * pow(1. - sh, 4) +
                    log(z)*(209.6252762986713 -
                    843.5722636566957 * (1. - sh) +
                    1005.2636076321755 * pow(1. - sh, 2) +
                    5346.8253794058 * pow(1. - sh, 3) +
                    10582.64385187247 * pow(1. - sh, 4)) +
                    (-23.82716049382716 -
                    10.365432098765432 * (1. - sh) +
                    574.3111111111111 * pow(1. - sh, 2) +
                    1325.2987654320987 * pow(1. - sh, 3) +
                    3439.3086419753085 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (15 <= maxpow) {
            if (sh < .900001)
                res += 2.0239336478652717e-6 * pow(3.141592653589793, 2) * pow(sh, -13)*
                (3003. + 47124. * sh + 349398. * pow(sh, 2) +
                    1.62554e6 * pow(sh, 3) + 5.297685e6 * pow(sh, 4) +
                    1.265412e7 * pow(sh, 5) + 2.15477e7 * pow(sh, 6) +
                    1.265412e7 * pow(sh, 7) + 5.297685e6 * pow(sh, 8) +
                    1.62554e6 * pow(sh, 9) + 349398. * pow(sh, 10) +
                    47124. * pow(sh, 11) + 3003. * pow(sh, 12)) * pow(z, 7.5);
            else
                res += (1228.5173675779529 + 8599.62157304567 * (1. - sh) +
                    35504.151923002835 * pow(1. - sh, 2) +
                    112040.7839231093 * pow(1. - sh, 3) +
                    298286.2106289405 * pow(1. - sh, 4)) * pow(z, 7.5);
        }

        if (16 <= maxpow) {
            if (sh < .900001)
                res += (43.6556538798278 * pow(-1 + sh, -3) * pow(sh, -6) -
                    36.317460317460316 * Li3sh * pow(-1 + sh, -3) * pow(sh, -6) +
                    12.105820105820106 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -6) + 1.9555555555555555 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(16. - 564. * sh + 2004. * pow(sh, 2) +
                    294. * pow(sh, 3) - 4650. * pow(sh, 4) +
                    5035. * pow(sh, 5) - 2500. * pow(sh, 6) +
                    660. * pow(sh, 7) - 90. * pow(sh, 8) + 5. * pow(sh, 9)) +
                    0.0007054673721340388 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 3)*
                    (-85472. + 3.302568e6 * sh - 2.0385756e7 * pow(sh, 2) +
                    4.0397342e7 * pow(sh, 3) - 3.614472e6 * pow(sh, 4) -
                    1.04197295e8 * pow(sh, 5) + 1.83802625e8 * pow(sh, 6) -
                    1.60798287e8 * pow(sh, 7) + 8.4097289e7 * pow(sh, 8) -
                    2.7378339e7 * pow(sh, 9) + 5.441121e6 * pow(sh, 10) -
                    604569. * pow(sh, 11) + 28789. * pow(sh, 12)) -
                    5.866666666666666 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 4)*
                    (280. - 3850. * sh + 16128. * pow(sh, 2) -
                    26340. * pow(sh, 3) + 69345. * pow(sh, 5) -
                    126120. * pow(sh, 6) + 121044. * pow(sh, 7) -
                    73080. * pow(sh, 8) + 29050. * pow(sh, 9) -
                    7600. * pow(sh, 10) + 1260. * pow(sh, 11) -
                    120. * pow(sh, 12) + 5. * pow(sh, 13)) +
                    0.0014109347442680777 * Li2sh * pow(-1 + sh, -9) * pow(sh, -7)*
                    (115830. - 1.00518e6 * sh + 3.85476e6 * pow(sh, 2) -
                    8.55036e6 * pow(sh, 3) + 1.203202e7 * pow(sh, 4) -
                    1.104103e7 * pow(sh, 5) + 6.48648e6 * pow(sh, 6) -
                    2.24796e6 * pow(sh, 7) + 352374. * pow(sh, 8) -
                    455. * pow(sh, 13) + 140. * pow(sh, 14)) -
                    Lsh * (-36.317460317460316 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -6) - 1.9555555555555555 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(16. - 564. * sh + 2004. * pow(sh, 2) +
                    294. * pow(sh, 3) - 4650. * pow(sh, 4) +
                    5035. * pow(sh, 5) - 2500. * pow(sh, 6) +
                    660. * pow(sh, 7) - 90. * pow(sh, 8) + 5. * pow(sh, 9)) +
                    1.1997744424048278e-7 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (23625. + 2250. * sh - 884825. * pow(sh, 2) -
                    3.042036e6 * pow(sh, 3) - 226209. * pow(sh, 4) +
                    1.547673e7 * pow(sh, 5) + 1.7445585e7 * pow(sh, 6) -
                    90. * (-7.706801e6 + 1.513512e7 * Lshb) * pow(sh, 7) +
                    (-4.511940709e9 + 1.18209168e10 * Lshb +
                    2.52252e8 * pow(3.141592653589793, 2)) * pow(sh, 8)\
            - 78. * (-1.49774363e8 + 5.811792e8 * Lshb +
                    1.9404e7 * pow(3.141592653589793, 2)) * pow(sh, 9)\
            + 45. * (-3.71984831e8 + 2.23449408e9 * Lshb +
                    8.4084e7 * pow(3.141592653589793, 2)) * pow(sh, 10)\
            - 2860. * (-5.103001e6 + 4.947432e7 * Lshb +
                    1.764e6 * pow(3.141592653589793, 2)) * pow(sh, 11)\
            + 5. * (-1.592356747e9 + 2.596850256e10 * Lshb +
                    7.56756e8 * pow(3.141592653589793, 2)) * pow(sh, 12)
                    - 6. * (-4.63805653e8 + 1.27135008e10 * Lshb +
                    2.52252e8 * pow(3.141592653589793, 2)) * pow(sh, 13)
                    + 3. * (-2.34797011e8 + 8.8120032e9 * Lshb +
                    8.4084e7 * pow(3.141592653589793, 2)) * pow(sh, 14)\
            - 70. * (-1.717333e6 + 5.9198832e7 * Lshb) *
                    pow(sh, 15) - 1.488018e7 * pow(sh, 16) -
                    1.051134e7 * pow(sh, 17) + 4.314492e6 * pow(sh, 18) +
                    5.300568e6 * pow(sh, 19) +
                    4200. * (-185. + 1274. * Lshb) * pow(sh, 20) -
                    1400. * (85. + 1176. * Lshb) * pow(sh, 21))) -
                    0.00010078105316200554 * pow(Lsh, 2) * pow(-1 + sh, -10) *
                    pow(sh, -14)*(-105. - 705. * sh - 1085. * pow(sh, 2) +
                    3227. * pow(sh, 3) + 12621. * pow(sh, 4) +
                    7077. * pow(sh, 5) - 23415. * pow(sh, 6) +
                    716940. * pow(sh, 7) +
                    (-7.485607e6 + 180180. * Lshb) * pow(sh, 8) -
                    14. * (-2.017121e6 + 90090. * Lshb) * pow(sh, 9) +
                    12012. * (-4661. + 315. * Lshb) * pow(sh, 10) -
                    2100. * (-30895. + 3003. * Lshb) * pow(sh, 11) +
                    35. * (-1.228621e6 + 180180. * Lshb) * pow(sh, 12) -
                    14. * (-875647. + 270270. * Lshb) * pow(sh, 13) +
                    14. * (198131. + 90090. * Lshb) * pow(sh, 14) -
                    2. * (1.519451e6 + 90090. * Lshb) * pow(sh, 15) +
                    645645. * pow(sh, 16) + 3185. * pow(sh, 20) -
                    4165. * pow(sh, 21) + 980. * pow(sh, 22)) +
                    0.000025195263290501386 * pow(lz, 2) * pow(sh, -14)*
                    (105. + 1755. * sh + 13910. * pow(sh, 2) +
                    69498. * pow(sh, 3) + 244959. * pow(sh, 4) +
                    642213. * pow(sh, 5) + 1.26126e6 * pow(sh, 6) -
                    1.08108e6 * pow(sh, 7) + 433071. * pow(sh, 8) +
                    67773. * pow(sh, 9) - 377694. * pow(sh, 10) -
                    501530. * pow(sh, 11) - 344895. * pow(sh, 12) -
                    105. * pow(sh, 13) - 1.55232e6 * pow(sh, 14) -
                    1.591128e6 * pow(sh, 15) - 1.707552e6 * pow(sh, 16) -
                    1.9404e6 * pow(sh, 17) + 3.10464e6 * pow(sh, 18) -
                    5.588352e7 * pow(sh, 19) + 6.4731744e7 * pow(sh, 20) +
                    9.7485696e7 * pow(sh, 21) - 2.250864e8 * pow(sh, 22) +
                    1.751211e8 * pow(sh, 23) - 7.101864e7 * pow(sh, 24) +
                    1.610532e7 * pow(sh, 25) - 1.9404e6 * pow(sh, 26) +
                    97020. * pow(sh, 27)) -
                    lz * (18.158730158730158 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -6) - 3.911111111111111 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(16. - 564. * sh + 2004. * pow(sh, 2) +
                    294. * pow(sh, 3) - 4650. * pow(sh, 4) +
                    5035. * pow(sh, 5) - 2500. * pow(sh, 6) +
                    660. * pow(sh, 7) - 90. * pow(sh, 8) + 5. * pow(sh, 9)) +
                    0.00010078105316200554 * Lsh * pow(-1 + sh, -9) *
                    pow(sh, -14)*(-105. - 810. * sh - 1895. * pow(sh, 2) +
                    1332. * pow(sh, 3) + 13953. * pow(sh, 4) +
                    21030. * pow(sh, 5) - 2385. * pow(sh, 6) +
                    1.39023e6 * pow(sh, 7) - 1.2340463e7 * pow(sh, 8) +
                    4.2069858e7 * pow(sh, 9) - 7.9546665e7 * pow(sh, 10) +
                    9.44649e7 * pow(sh, 11) - 7.3941065e7 * pow(sh, 12) +
                    3.83046e7 * pow(sh, 13) - 1.2446415e7 * pow(sh, 14) +
                    1.976646e6 * pow(sh, 15) + 12600. * pow(sh, 16) -
                    15820. * pow(sh, 17) - 9744. * pow(sh, 18) +
                    2604. * pow(sh, 19) - 630. * pow(sh, 20) +
                    910. * pow(sh, 21)) +
                    1.398338510961338e-10 * pow(-1 + sh, -8) * pow(sh, -14)*
                    (1.0135125e7 + 1.1100375e7 * sh -
                    3.6848955e8 * pow(sh, 2) -
                    1.673522994e9 * pow(sh, 3) -
                    1.770566655e9 * pow(sh, 4) +
                    4.868950515e9 * pow(sh, 5) +
                    1.235310648e10 * pow(sh, 6) +
                    6.7286773554e11 * pow(sh, 7) -
                    3.536335413468e12 * pow(sh, 8) +
                    6.50817484746e12 * pow(sh, 9) -
                    2.54454845502e12 * pow(sh, 10) -
                    9.21737859458e12 * pow(sh, 11) +
                    1.734525157846e13 * pow(sh, 12) -
                    1.3825678158092e13 * pow(sh, 13) +
                    6.1111523809e12 * pow(sh, 14) -
                    5.967579184772e12 * pow(sh, 15) +
                    1.5549203270443e13 * pow(sh, 16) -
                    2.5319186594687e13 * pow(sh, 17) +
                    2.6298770135182e13 * pow(sh, 18) -
                    2.5191363944162e13 * pow(sh, 19) +
                    5.842005220263e12 * pow(sh, 20) +
                    1.75096058403693e14 * pow(sh, 21) -
                    6.63423072171552e14 * pow(sh, 22) +
                    1.020989867585688e15 * pow(sh, 23) -
                    8.1473828147712e13 * pow(sh, 24) -
                    2.68267039048008e15 * pow(sh, 25) +
                    5.80722293943792e15 * pow(sh, 26) -
                    7.01674940414448e15 * pow(sh, 27) +
                    5.70997655452224e15 * pow(sh, 28) -
                    3.30275638300608e15 * pow(sh, 29) +
                    1.37813214547008e15 * pow(sh, 30) -
                    4.1220913139406e14 * pow(sh, 31) +
                    8.614194412824e13 * pow(sh, 32) -
                    1.192739023476e13 * pow(sh, 33) +
                    9.8172946872e11 * pow(sh, 34) -
                    3.631041414e10 * pow(sh, 35))) -
                    3.8803932483109607e-16 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (7.34806697625e11 - 1.86465740175e12 * sh -
                    1.3539275231625e13 * pow(sh, 2) +
                    6.7027116030732e13 * pow(sh, 3) +
                    3.63276406618983e14 * pow(sh, 4) +
                    7.707518005473e13 * pow(sh, 5) -
                    2.669628886797015e15 * pow(sh, 6) -
                    6.770358403959922e17 * pow(sh, 7) +
                    5.635158490072595e18 * pow(sh, 8) -
                    2.0599256704963682e19 * pow(sh, 9) +
                    4.3339042510046585e19 * pow(sh, 10) -
                    5.744182115659437e19 * pow(sh, 11) +
                    4.931522650068433e19 * pow(sh, 12) -
                    2.7187236012238836e19 * pow(sh, 13) +
                    9.574972725219654e18 * pow(sh, 14) -
                    3.9829978513193257e18 * pow(sh, 15) +
                    7.101765583473753e18 * pow(sh, 16) -
                    1.3106460108909054e19 * pow(sh, 17) +
                    1.6417164883861897e19 * pow(sh, 18) -
                    1.614980340692014e19 * pow(sh, 19) +
                    1.6686933598961236e18 * pow(sh, 20) +
                    1.0406361743628665e20 * pow(sh, 21) -
                    4.1780318877359584e20 * pow(sh, 22) +
                    7.917494561077571e20 * pow(sh, 23) -
                    5.495025478671567e20 * pow(sh, 24) -
                    9.680750952822325e20 * pow(sh, 25) +
                    3.329447282273382e21 * pow(sh, 26) -
                    5.025975451497482e21 * pow(sh, 27) +
                    4.956441109581607e21 * pow(sh, 28) -
                    3.485807792682049e21 * pow(sh, 29) +
                    1.7988128583543858e21 * pow(sh, 30) -
                    6.841200805238499e20 * pow(sh, 31) +
                    1.8949802366821115e20 * pow(sh, 32) -
                    3.71347919316412e19 * pow(sh, 33) +
                    4.870681746866896e18 * pow(sh, 34) -
                    3.8293915404046304e17 * pow(sh, 35) +
                    1.362249094884678e16 * pow(sh, 36) -
                    4.32864432e10 * pow(3.141592653589793, 2)*
                    (315. + 2430. * sh + 5685. * pow(sh, 2) -
                    3996. * pow(sh, 3) - 41859. * pow(sh, 4) -
                    63090. * pow(sh, 5) + 7155. * pow(sh, 6) -
                    1.119771e7 * pow(sh, 7) + 9.7239319e7 * pow(sh, 8) -
                    3.54595974e8 * pow(sh, 9) +
                    7.40399865e8 * pow(sh, 10) -
                    9.8372572e8 * pow(sh, 11) +
                    8.60053945e8 * pow(sh, 12) -
                    4.8766596e8 * pow(sh, 13) +
                    1.66863615e8 * pow(sh, 14) -
                    3.4122042e7 * pow(sh, 15) + 2.632797e7 * pow(sh, 16) -
                    5.075218e7 * pow(sh, 17) + 5.5929402e7 * pow(sh, 18) +
                    5.4364188e7 * pow(sh, 19) -
                    7.17712236e8 * pow(sh, 20) +
                    2.87081535e9 * pow(sh, 21) -
                    6.45842757e9 * pow(sh, 22) +
                    7.27388046e9 * pow(sh, 23) +
                    2.42462682e9 * pow(sh, 24) -
                    2.5172149464e10 * pow(sh, 25) +
                    5.057866044e10 * pow(sh, 26) -
                    6.234146226e10 * pow(sh, 27) +
                    5.421545514e10 * pow(sh, 28) -
                    3.47700276e10 * pow(sh, 29) +
                    1.6675099056e10 * pow(sh, 30) -
                    5.96740914e9 * pow(sh, 31) +
                    1.5692985e9 * pow(sh, 32) - 2.939706e8 * pow(sh, 33) +
                    3.706164e7 * pow(sh, 34) - 2.81358e6 * pow(sh, 35) +
                    97020. * pow(sh, 36)))) * pow(z, 8);
            else
                res += pow(z, 8)*(227.9127121130888 -
                    12564.351589175983 * (1. - sh) -
                    34464.767151214546 * pow(1. - sh, 2) -
                    102040.51747314115 * pow(1. - sh, 3) -
                    362196.8892583663 * pow(1. - sh, 4) +
                    log(z)*(751.6870505074294 -
                    3757.8602857129536 * (1. - sh) +
                    4373.596775680889 * pow(1. - sh, 2) +
                    26074.528627752614 * pow(1. - sh, 3) +
                    50226.02585572963 * pow(1. - sh, 4)) +
                    (-91.85185185185185 - 59.74814814814815 * (1. - sh) +
                    2707.866666666667 * pow(1. - sh, 2) +
                    6532.044444444445 * pow(1. - sh, 3) +
                    18560.308994708994 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (17 <= maxpow) {
            if (sh < .900001)
                res += 7.222665174734891e-7 * pow(3.141592653589793, 2) * pow(sh, -15)*
                (6435. + 114114. * sh + 962577. * pow(sh, 2) +
                    5.137524e6 * pow(sh, 3) + 1.9445755e7 * pow(sh, 4) +
                    5.526435e7 * pow(sh, 5) + 1.20557265e8 * pow(sh, 6) +
                    1.9446652e8 * pow(sh, 7) + 1.20557265e8 * pow(sh, 8) +
                    5.526435e7 * pow(sh, 9) + 1.9445755e7 * pow(sh, 10) +
                    5.137524e6 * pow(sh, 11) + 962577. * pow(sh, 12) +
                    114114. * pow(sh, 13) + 6435. * pow(sh, 14)) * pow(z, 8.5);
            else
                res += (4258.8602076035695 + 34070.881660828556 * (1. - sh) +
                    157790.77069171227 * pow(1. - sh, 2) +
                    551309.4538742821 * pow(1. - sh, 3) +
                    1.6090506221852237e6 * pow(1. - sh, 4)) * pow(z, 8.5);
        }

        if (18 <= maxpow) {
            if (sh < .900001)
                res += (127.32899048283109 * pow(-1 + sh, -3) * pow(sh, -7) -
                    105.92592592592592 * Li3sh * pow(-1 + sh, -3) * pow(sh, -7) +
                    35.30864197530864 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -7) - 4.035273368606702 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-216. + 3134. * sh - 8598. * pow(sh, 2) -
                    651. * pow(sh, 3) + 21696. * pow(sh, 4) -
                    28281. * pow(sh, 5) + 17655. * pow(sh, 6) -
                    6279. * pow(sh, 7) + 1302. * pow(sh, 8) -
                    147. * pow(sh, 9) + 7. * pow(sh, 10)) -
                    0.0001567705271408975 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 4)*
                    (1.1439036e7 - 2.01476662e8 * sh +
                    9.97505748e8 * pow(sh, 2) - 1.852234251e9 * pow(sh, 3) +
                    2.01151369e8 * pow(sh, 4) + 4.889181924e9 * pow(sh, 5) -
                    9.389910087e9 * pow(sh, 6) + 9.234375093e9 * pow(sh, 7) -
                    5.644419255e9 * pow(sh, 8) + 2.256993135e9 * pow(sh, 9) -
                    5.91888983e8 * pow(sh, 10) + 9.8193564e7 * pow(sh, 11) -
                    9.351768e6 * pow(sh, 12) + 389657. * pow(sh, 13)) +
                    12.105820105820106 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 4)*(42. - 2268. * sh + 21546. * pow(sh, 2) -
                    79506. * pow(sh, 3) + 124821. * pow(sh, 4) -
                    344253. * pow(sh, 6) + 669627. * pow(sh, 7) -
                    706482. * pow(sh, 8) + 483252. * pow(sh, 9) -
                    225666. * pow(sh, 10) + 72738. * pow(sh, 11) -
                    15939. * pow(sh, 12) + 2268. * pow(sh, 13) -
                    189. * pow(sh, 14) + 7. * pow(sh, 15)) +
                    0.021164021164021163 * Li2sh * pow(-1 + sh, -10) * pow(sh, -8)*
                    (-25025. + 242385. * sh - 1.05138e6 * pow(sh, 2) +
                    2.68422e6 * pow(sh, 3) - 4.45263e6 * pow(sh, 4) +
                    4.98771e6 * pow(sh, 5) - 3.78378e6 * pow(sh, 6) +
                    1.88188e6 * pow(sh, 7) - 559845. * pow(sh, 8) +
                    77077. * pow(sh, 9) - 30. * pow(sh, 15) + 10. * pow(sh, 16))\
      - Lsh * (-105.92592592592592 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -7) + 4.035273368606702 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-216. + 3134. * sh - 8598. * pow(sh, 2) -
                    651. * pow(sh, 3) + 21696. * pow(sh, 4) -
                    28281. * pow(sh, 5) + 17655. * pow(sh, 6) -
                    6279. * pow(sh, 7) + 1302. * pow(sh, 8) -
                    147. * pow(sh, 9) + 7. * pow(sh, 10)) +
                    2.3328947491204986e-7 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (-8330. - 1225. * sh + 385185. * pow(sh, 2) +
                    1.565725e6 * pow(sh, 3) + 766913. * pow(sh, 4) -
                    8.101569e6 * pow(sh, 5) - 1.6471637e7 * pow(sh, 6) +
                    1.4354375e7 * pow(sh, 7) +
                    315. * (-3.976811e6 + 7.2072e6 * Lshb) * pow(sh, 8) -
                    5. * (-1.972645723e9 + 4.39783344e9 * Lshb +
                    7.56756e7 * pow(3.141592653589793, 2)) * pow(sh, 9)\
            + (-3.2595109307e10 + 9.53811936e10 * Lshb +
                    2.648646e9 * pow(3.141592653589793, 2)) *
                    pow(sh, 10) -
                    105. * (-5.86295389e8 + 2.31916608e9 * Lshb +
                    7.56756e7 * pow(3.141592653589793, 2)) * pow(sh, 11)
                    + 35. * (-2.122319939e9 + 1.154121696e10 * Lshb +
                    3.78378e8 * pow(3.141592653589793, 2)) * pow(sh, 12)
                    - 35. * (-1.717789469e9 + 1.292814432e10 * Lshb +
                    3.78378e8 * pow(3.141592653589793, 2)) * pow(sh, 13)
                    + 21. * (-1.591388717e9 + 1.63459296e10 * Lshb +
                    3.78378e8 * pow(3.141592653589793, 2)) * pow(sh, 14)
                    - 77. * (-1.67932339e8 + 2.2171968e9 * Lshb +
                    3.4398e7 * pow(3.141592653589793, 2)) * pow(sh, 15)\
            + 16. * (-2.15122142e8 + 3.17432115e9 * Lshb +
                    2.3648625e7 * pow(3.141592653589793, 2)) *
                    pow(sh, 16) +
                    (5.68573578e8 - 6.99242544e9 * Lshb) * pow(sh, 17) +
                    1.312353e7 * pow(sh, 18) - 1.3816026e7 * pow(sh, 19) -
                    5.493852e6 * pow(sh, 20) + 2.810934e6 * pow(sh, 21) +
                    2.66553e6 * pow(sh, 22) +
                    810. * (-653. + 3360. * Lshb) * pow(sh, 23) -
                    405. * (113. + 2240. * Lshb) * pow(sh, 24))) -
                    0.00014697236919459142 * pow(Lsh, 2) * pow(-1 + sh, -11) *
                    pow(sh, -16)*(56. + 434. * sh + 920. * pow(sh, 2) -
                    1480. * pow(sh, 3) - 9184. * pow(sh, 4) -
                    8932. * pow(sh, 5) + 19712. * pow(sh, 6) +
                    36344. * pow(sh, 7) - 1.69477e6 * pow(sh, 8) +
                    (1.8252907e7 - 360360. * Lshb) * pow(sh, 9) +
                    20. * (-3.973357e6 + 144144. * Lshb) * pow(sh, 10) -
                    11440. * (-16567. + 882. * Lshb) * pow(sh, 11) +
                    56. * (-4.950037e6 + 360360. * Lshb) * pow(sh, 12) -
                    140. * (-1.822739e6 + 180180. * Lshb) * pow(sh, 13) +
                    224. * (-623131. + 90090. * Lshb) * pow(sh, 14) -
                    56. * (-585251. + 180180. * Lshb) * pow(sh, 15) +
                    8. * (968843. + 360360. * Lshb) * pow(sh, 16) -
                    (6.868451e6 + 360360. * Lshb) * pow(sh, 17) +
                    1.287e6 * pow(sh, 18) + 2160. * pow(sh, 23) -
                    2880. * pow(sh, 24) + 720. * pow(sh, 25)) -
                    0.00007348618459729571 * pow(lz, 2) * pow(sh, -16)*
                    (-28. - 525. * sh - 4695. * pow(sh, 2) -
                    26650. * pow(sh, 3) - 107718. * pow(sh, 4) -
                    329043. * pow(sh, 5) - 782353. * pow(sh, 6) -
                    1.44144e6 * pow(sh, 7) + 1.26126e6 * pow(sh, 8) -
                    599831. * pow(sh, 9) - 230937. * pow(sh, 10) +
                    340854. * pow(sh, 11) + 604990. * pow(sh, 12) +
                    577095. * pow(sh, 13) + 354945. * pow(sh, 14) +
                    28. * pow(sh, 15) + 1.729728e6 * pow(sh, 16) +
                    1.757184e6 * pow(sh, 17) + 1.839552e6 * pow(sh, 18) +
                    2.004288e6 * pow(sh, 19) + 2.855424e6 * pow(sh, 20) -
                    2.6138112e7 * pow(sh, 21) + 1.80276096e8 * pow(sh, 22) -
                    2.04107904e8 * pow(sh, 23) - 2.91953376e8 * pow(sh, 24) +
                    8.04076416e8 * pow(sh, 25) - 7.54586976e8 * pow(sh, 26) +
                    3.86127456e8 * pow(sh, 27) - 1.18294176e8 * pow(sh, 28) +
                    2.1717696e7 * pow(sh, 29) - 2.210208e6 * pow(sh, 30) +
                    96096. * pow(sh, 31)) -
                    lz * (52.96296296296296 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -7) + 8.070546737213403 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-216. + 3134. * sh - 8598. * pow(sh, 2) -
                    651. * pow(sh, 3) + 21696. * pow(sh, 4) -
                    28281. * pow(sh, 5) + 17655. * pow(sh, 6) -
                    6279. * pow(sh, 7) + 1302. * pow(sh, 8) -
                    147. * pow(sh, 9) + 7. * pow(sh, 10)) +
                    0.00029394473838918284 * Lsh * pow(-1 + sh, -10) *
                    pow(sh, -16)*(28. + 245. * sh + 705. * pow(sh, 2) -
                    35. * pow(sh, 3) - 4627. * pow(sh, 4) -
                    9093. * pow(sh, 5) + 763. * pow(sh, 6) +
                    18935. * pow(sh, 7) - 1.594215e6 * pow(sh, 8) +
                    1.5443423e7 * pow(sh, 9) - 6.1656473e7 * pow(sh, 10) +
                    1.39716843e8 * pow(sh, 11) -
                    2.03006125e8 * pow(sh, 12) +
                    1.99413865e8 * pow(sh, 13) -
                    1.34518335e8 * pow(sh, 14) +
                    6.1151573e7 * pow(sh, 15) -
                    1.7326475e7 * pow(sh, 16) + 2.392884e6 * pow(sh, 17) +
                    25200. * pow(sh, 18) + 3024. * pow(sh, 19) -
                    7560. * pow(sh, 20) - 3276. * pow(sh, 21) +
                    1260. * pow(sh, 22) - 180. * pow(sh, 23) +
                    270. * pow(sh, 24)) +
                    8.156974647274471e-10 * pow(-1 + sh, -9) * pow(sh, -16)*
                    (-1.19119e6 - 1.366365e6 * sh +
                    5.371509e7 * pow(sh, 2) + 2.77613765e8 * pow(sh, 3) +
                    3.87282324e8 * pow(sh, 4) -
                    7.71242043e8 * pow(sh, 5) -
                    3.126686134e9 * pow(sh, 6) -
                    1.074010509e9 * pow(sh, 7) -
                    3.93846095214e11 * pow(sh, 8) +
                    2.613136199245e12 * pow(sh, 9) -
                    6.74269843533e12 * pow(sh, 10) +
                    7.676937500739e12 * pow(sh, 11) -
                    1.9905569996e10 * pow(sh, 12) -
                    1.1323630699581e13 * pow(sh, 13) +
                    1.5234053867994e13 * pow(sh, 14) -
                    9.845078305115e12 * pow(sh, 15) +
                    2.700610570998e12 * pow(sh, 16) +
                    3.170609780136e12 * pow(sh, 17) -
                    1.1930111549088e13 * pow(sh, 18) +
                    2.3203039225488e13 * pow(sh, 19) -
                    2.8131676788624e13 * pow(sh, 20) +
                    1.8366269990976e13 * pow(sh, 21) +
                    5.86498925406e12 * pow(sh, 22) +
                    2.8811545081488e13 * pow(sh, 23) -
                    4.5661550453265e14 * pow(sh, 24) +
                    1.732122473878368e15 * pow(sh, 25) -
                    3.197952696667872e15 * pow(sh, 26) +
                    1.902641717625792e15 * pow(sh, 27) +
                    5.333806838035104e15 * pow(sh, 28) -
                    1.7146879255828608e16 * pow(sh, 29) +
                    2.675706192884525e16 * pow(sh, 30) -
                    2.8039050515059584e16 * pow(sh, 31) +
                    2.1385006944917616e16 * pow(sh, 32) -
                    1.2221439347413296e16 * pow(sh, 33) +
                    5.277310784521776e15 * pow(sh, 34) -
                    1.713784020076128e15 * pow(sh, 35) +
                    4.11671384988864e14 * pow(sh, 36) -
                    7.0855642249392e13 * pow(sh, 37) +
                    8.252635735344e12 * pow(sh, 38) -
                    5.81797087872e11 * pow(sh, 39) +
                    1.8722239536e10 * pow(sh, 40))) -
                    1.131781364090697e-15 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (-1.522039519e11 + 4.26276275425e11 * sh +
                    3.315607505925e12 * pow(sh, 2) -
                    1.9935815474575e13 * pow(sh, 3) -
                    1.24680380503679e14 * pow(sh, 4) -
                    9.4734104241777e13 * pow(sh, 5) +
                    6.72219759402191e14 * pow(sh, 6) +
                    2.120473984303675e15 * pow(sh, 7) +
                    7.662945656754339e17 * pow(sh, 8) -
                    7.132526555906264e18 * pow(sh, 9) +
                    2.9416202534538686e19 * pow(sh, 10) -
                    7.102049557437948e19 * pow(sh, 11) +
                    1.107461387150374e20 * pow(sh, 12) -
                    1.1592296841795374e20 * pow(sh, 13) +
                    8.202599046107015e19 * pow(sh, 14) -
                    3.867573016059e19 * pow(sh, 15) +
                    1.1583790708091849e19 * pow(sh, 16) +
                    5.455110631455277e16 * pow(sh, 17) -
                    9.021690519674575e18 * pow(sh, 18) +
                    2.0989006324251304e19 * pow(sh, 19) -
                    3.024958551383288e19 * pow(sh, 20) +
                    2.6235194397528736e19 * pow(sh, 21) -
                    4.751003778396708e18 * pow(sh, 22) +
                    3.1013412939244257e19 * pow(sh, 23) -
                    4.4030880872708604e20 * pow(sh, 24) +
                    1.8521539756313275e21 * pow(sh, 25) -
                    4.09723866666257e21 * pow(sh, 26) +
                    4.4398535867110675e21 * pow(sh, 27) +
                    1.6558648776187506e21 * pow(sh, 28) -
                    1.5447456223820402e22 * pow(sh, 29) +
                    3.0926810843136838e22 * pow(sh, 30) -
                    3.877106240961276e22 * pow(sh, 31) +
                    3.495116951810053e22 * pow(sh, 32) -
                    2.3715466598184745e22 * pow(sh, 33) +
                    1.231700538915695e22 * pow(sh, 34) -
                    4.908204594473572e21 * pow(sh, 35) +
                    1.4885933408647808e21 * pow(sh, 36) -
                    3.372012167296045e20 * pow(sh, 37) +
                    5.517431714182939e19 * pow(sh, 38) -
                    6.150944761142205e18 * pow(sh, 39) +
                    4.174745980836151e17 * pow(sh, 40) -
                    1.2998152420597344e16 * pow(sh, 41) +
                    4.32864432e10 * pow(3.141592653589793, 2)*
                    (84. + 735. * sh + 2115. * pow(sh, 2) -
                    105. * pow(sh, 3) - 13881. * pow(sh, 4) -
                    27279. * pow(sh, 5) + 2289. * pow(sh, 6) +
                    56805. * pow(sh, 7) - 1.2530385e7 * pow(sh, 8) +
                    1.20589919e8 * pow(sh, 9) -
                    5.04052193e8 * pow(sh, 10) +
                    1.226945139e9 * pow(sh, 11) -
                    1.939059325e9 * pow(sh, 12) +
                    2.078426665e9 * pow(sh, 13) -
                    1.520105055e9 * pow(sh, 14) +
                    7.36103333e8 * pow(sh, 15) -
                    2.14713611e8 * pow(sh, 16) +
                    1.9961346e7 * pow(sh, 17) +
                    3.7191526e7 * pow(sh, 18) -
                    8.4336034e7 * pow(sh, 19) +
                    1.23678654e8 * pow(sh, 20) -
                    1.54538642e8 * pow(sh, 21) +
                    5.6921303e8 * pow(sh, 22) -
                    3.377351682e9 * pow(sh, 23) +
                    1.3338367312e10 * pow(sh, 24) -
                    3.3040152232e10 * pow(sh, 25) +
                    4.7430542016e10 * pow(sh, 26) -
                    1.4900494752e10 * pow(sh, 27) -
                    1.03195325376e11 * pow(sh, 28) +
                    2.85860573856e11 * pow(sh, 29) -
                    4.41409041216e11 * pow(sh, 30) +
                    4.79314177056e11 * pow(sh, 31) -
                    3.90721421376e11 * pow(sh, 32) +
                    2.45176465248e11 * pow(sh, 33) -
                    1.19414737728e11 * pow(sh, 34) +
                    4.5058851552e10 * pow(sh, 35) -
                    1.3033582848e10 * pow(sh, 36) +
                    2.831770656e9 * pow(sh, 37) -
                    4.46462016e8 * pow(sh, 38) +
                    4.8144096e7 * pow(sh, 39) - 3.171168e6 * pow(sh, 40) +
                    96096. * pow(sh, 41)))) * pow(z, 9);
            else
                res += pow(z, 9)*(781.7694061014631 -
                    53520.67255349783 * (1. - sh) -
                    160255.89541905606 * pow(1. - sh, 2) -
                    516295.64539226936 * pow(1. - sh, 3) -
                    2.0156818718637745e6 * pow(1. - sh, 4) +
                    log(z)*(2753.339544200989 -
                    16340.99798716473 * (1. - sh) +
                    19367.74477240799 * pow(1. - sh, 2) +
                    126117.45819550043 * pow(1. - sh, 3) +
                    232002.88921917632 * pow(1. - sh, 4)) +
                    (-353.1111111111111 - 291.6666666666667 * (1. - sh) +
                    12631.518518518518 * pow(1. - sh, 2) +
                    31769.238095238095 * pow(1. - sh, 3) +
                    98072.45502645502 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (19 <= maxpow) {
            if (sh < .900001)
                res += 3.354178873715894e-8 * pow(3.141592653589793, 2) * pow(sh, -17)*
                (109395. + 2.16216e6 * sh + 2.0430696e7 * pow(sh, 2) +
                    1.22866128e8 * pow(sh, 3) + 5.27900436e8 * pow(sh, 4) +
                    1.72236568e9 * pow(sh, 5) + 4.41295356e9 * pow(sh, 6) +
                    8.96714376e9 * pow(sh, 7) + 1.385377093e10 * pow(sh, 8) +
                    8.96714376e9 * pow(sh, 9) + 4.41295356e9 * pow(sh, 10) +
                    1.72236568e9 * pow(sh, 11) + 5.27900436e8 * pow(sh, 12) +
                    1.22866128e8 * pow(sh, 13) + 2.0430696e7 * pow(sh, 14) +
                    2.16216e6 * pow(sh, 15) + 109395. * pow(sh, 16)) * pow(z, 9.5);
            else
                res += (15031.271320953776 + 135281.441888584 * (1. - sh) +
                    694444.7350280645 * pow(1. - sh, 2) +
                    2.6605350238088183e6 * pow(1. - sh, 3) +
                    8.443816664545784e6 * pow(1. - sh, 4)) * pow(z, 9.5);
        }

        if (20 <= maxpow) {
            if (sh < .900001)
                res += (384.81650457033396 * pow(-1 + sh, -3) * pow(sh, -8) -
                    320.13168724279836 * Li3sh * pow(-1 + sh, -3) * pow(sh, -8) +
                    106.71056241426612 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -8) + 3.0264550264550265 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-80. + 5340. * sh - 47370. * pow(sh, 2) +
                    109970. * pow(sh, 3) + 2889. * pow(sh, 4) -
                    292716. * pow(sh, 5) + 440556. * pow(sh, 6) -
                    328734. * pow(sh, 7) + 146475. * pow(sh, 8) -
                    40768. * pow(sh, 9) + 6972. * pow(sh, 10) -
                    672. * pow(sh, 11) + 28. * pow(sh, 12)) +
                    0.00047031158142269255 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 4)*
                    (1.1035e6 - 7.72587e7 * sh + 8.84076615e8 * pow(sh, 2) -
                    3.732489695e9 * pow(sh, 3) + 6.571169658e9 * pow(sh, 4) -
                    8.05040586e8 * pow(sh, 5) -
                    1.7678698868e10 * pow(sh, 6) +
                    3.6419080572e10 * pow(sh, 7) -
                    3.9440395638e10 * pow(sh, 8) +
                    2.7362254298e10 * pow(sh, 9) -
                    1.2874702995e10 * pow(sh, 10) +
                    4.165441731e9 * pow(sh, 11) -
                    9.14198644e8 * pow(sh, 12) + 1.30140756e8 * pow(sh, 13) -
                    1.0845063e7 * pow(sh, 14) + 401669. * pow(sh, 15)) -
                    9.079365079365079 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 5)*
                    (-1890. + 45864. * sh - 340200. * pow(sh, 2) +
                    1.13508e6 * pow(sh, 3) - 1.721265e6 * pow(sh, 4) +
                    4.925592e6 * pow(sh, 6) - 1.01388e7 * pow(sh, 7) +
                    1.158381e7 * pow(sh, 8) - 8.79228e6 * pow(sh, 9) +
                    4.68432e6 * pow(sh, 10) - 1.782648e6 * pow(sh, 11) +
                    482895. * pow(sh, 12) - 91000. * pow(sh, 13) +
                    11340. * pow(sh, 14) - 840. * pow(sh, 15) + 28. * pow(sh, 16)
                    ) - 0.0005878894767783657 * Li2sh * pow(-1 + sh, -11) *
                    pow(sh, -9)*(-2.994992e6 + 3.202199e7 * sh -
                    1.54990836e8 * pow(sh, 2) + 4.47615168e8 * pow(sh, 3) -
                    8.5514352e8 * pow(sh, 4) + 1.130787504e9 * pow(sh, 5) -
                    1.04997984e9 * pow(sh, 6) + 6.77511744e8 * pow(sh, 7) -
                    2.91603312e8 * pow(sh, 8) + 7.589582e7 * pow(sh, 9) -
                    9.069632e6 * pow(sh, 10) + 1071. * pow(sh, 17) -
                    378. * pow(sh, 18)) -
                    Lsh * (-320.13168724279836 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -8) - 3.0264550264550265 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-80. + 5340. * sh - 47370. * pow(sh, 2) +
                    109970. * pow(sh, 3) + 2889. * pow(sh, 4) -
                    292716. * pow(sh, 5) + 440556. * pow(sh, 6) -
                    328734. * pow(sh, 7) + 146475. * pow(sh, 8) -
                    40768. * pow(sh, 9) + 6972. * pow(sh, 10) -
                    672. * pow(sh, 11) + 28. * pow(sh, 12)) +
                    5.184210553601108e-9 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (268128. + 50176. * sh - 1.5037316e7 * pow(sh, 2) -
                    7.0758368e7 * pow(sh, 3) - 6.454424e7 * pow(sh, 4) +
                    3.47363296e8 * pow(sh, 5) +
                    9.86787592e8 * pow(sh, 6) + 3.5646688e7 * pow(sh, 7) -
                    4.264570016e9 * pow(sh, 8) -
                    49280. * (-4.185317e6 + 6.891885e6 * Lshb) *
                    pow(sh, 9) + 2. *
                    (-9.13367431661e11 + 1.815646833e12 * Lshb +
                    2.5729704e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 10) -
                    34. * (-2.11665295319e11 + 5.169400236e11 * Lshb +
                    1.2108096e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 11) +
                    112. * (-1.48068551563e11 + 4.532103576e11 * Lshb +
                    1.2864852e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 12) -
                    28. * (-8.92863157079e11 + 3.463331256e12 * Lshb +
                    1.02918816e11 * pow(3.141592653589793, 2)) *
                    pow(sh, 13) +
                    7700. * (-3.377464619e9 + 1.6653415968e10 * Lshb +
                    4.678128e8 * pow(3.141592653589793, 2)) *
                    pow(sh, 14) -
                    14. * (-1.367678553169e12 + 8.504836704e12 * Lshb +
                    2.05837632e11 * pow(3.141592653589793, 2)) *
                    pow(sh, 15) +
                    56. * (-1.79529366083e11 + 1.3719612816e12 * Lshb +
                    2.5729704e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 16) -
                    4. * (-9.28306865747e11 + 8.2669538952e12 * Lshb +
                    1.02918816e11 * pow(3.141592653589793, 2)) *
                    pow(sh, 17) +
                    (-9.00807538366e11 + 8.606585988e12 * Lshb +
                    5.1459408e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 18) -
                    315. * (-3.24014759e8 + 3.26506752e9 * Lshb) *
                    pow(sh, 19) + 3.873846312e9 * pow(sh, 20) +
                    6.5471364e7 * pow(sh, 21) -
                    8.55977724e8 * pow(sh, 22) -
                    2.31299082e8 * pow(sh, 23) +
                    1.540332e8 * pow(sh, 24) + 1.180071e8 * pow(sh, 25) +
                    11025. * (-2549. + 11016. * Lshb) * pow(sh, 26) -
                    11025. * (145. + 3888. * Lshb) * pow(sh, 27))) -
                    6.532105297537396e-6 * pow(Lsh, 2) * pow(-1 + sh, -12) *
                    pow(sh, -18)*(-1008. - 8848. * sh - 23688. * pow(sh, 2) +
                    17352. * pow(sh, 3) + 212592. * pow(sh, 4) +
                    311184. * pow(sh, 5) - 400176. * pow(sh, 6) -
                    1.492176e6 * pow(sh, 7) + 255024. * pow(sh, 8) +
                    1.29624264e8 * pow(sh, 9) +
                    24. * (-6.2253479e7 + 1.02102e6 * Lshb) * pow(sh, 10) -
                    27. * (-2.70724357e8 + 8.16816e6 * Lshb) * pow(sh, 11) +
                    1989. * (-1.0174699e7 + 443520. * Lshb) * pow(sh, 12) -
                    1848. * (-1.9205873e7 + 1.11384e6 * Lshb) * pow(sh, 13) +
                    4032. * (-1.0206433e7 + 765765. * Lshb) * pow(sh, 14) -
                    3528. * (-8.888339e6 + 875160. * Lshb) * pow(sh, 15) +
                    168. * (-8.6549101e7 + 1.225224e7 * Lshb) * pow(sh, 16) -
                    72. * (-3.9754051e7 + 1.225224e7 * Lshb) * pow(sh, 17) +
                    36. * (1.9660427e7 + 6.12612e6 * Lshb) * pow(sh, 18) -
                    2. * (2.60905399e8 + 1.225224e7 * Lshb) * pow(sh, 19) +
                    8.729721e7 * pow(sh, 20) + 48195. * pow(sh, 26) -
                    65205. * pow(sh, 27) + 17010. * pow(sh, 28)) -
                    6.532105297537396e-6 * pow(lz, 2) * pow(sh, -18)*
                    (-252. - 5236. * sh - 52122. * pow(sh, 2) -
                    330990. * pow(sh, 3) - 1.50586e6 * pow(sh, 4) -
                    5.221788e6 * pow(sh, 5) - 1.4306214e7 * pow(sh, 6) -
                    3.1500898e7 * pow(sh, 7) - 5.513508e7 * pow(sh, 8) +
                    4.900896e7 * pow(sh, 9) - 2.668511e7 * pow(sh, 10) -
                    1.4613135e7 * pow(sh, 11) + 8.763045e6 * pow(sh, 12) +
                    2.218345e7 * pow(sh, 13) + 2.506596e7 * pow(sh, 14) +
                    2.0910477e7 * pow(sh, 15) + 1.2190381e7 * pow(sh, 16) +
                    252. * pow(sh, 17) + 6.48648e7 * pow(sh, 18) +
                    6.555978e7 * pow(sh, 19) + 6.764472e7 * pow(sh, 20) +
                    7.18146e7 * pow(sh, 21) + 7.87644e7 * pow(sh, 22) +
                    3.081078e8 * pow(sh, 23) - 4.33296864e9 * pow(sh, 24) +
                    2.046808764e10 * pow(sh, 25) -
                    2.24524872e10 * pow(sh, 26) -
                    3.088433205e10 * pow(sh, 27) +
                    9.73829142e10 * pow(sh, 28) -
                    1.059717087e11 * pow(sh, 29) +
                    6.5108043e10 * pow(sh, 30) -
                    2.507429925e10 * pow(sh, 31) +
                    6.1945884e9 * pow(sh, 32) - 9.567558e8 * pow(sh, 33) +
                    8.432424e7 * pow(sh, 34) - 3.24324e6 * pow(sh, 35)) -
                    lz * (160.06584362139918 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -8) - 6.052910052910053 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-80. + 5340. * sh - 47370. * pow(sh, 2) +
                    109970. * pow(sh, 3) + 2889. * pow(sh, 4) -
                    292716. * pow(sh, 5) + 440556. * pow(sh, 6) -
                    328734. * pow(sh, 7) + 146475. * pow(sh, 8) -
                    40768. * pow(sh, 9) + 6972. * pow(sh, 10) -
                    672. * pow(sh, 11) + 28. * pow(sh, 12)) -
                    0.000013064210595074793 * Lsh * pow(-1 + sh, -11) *
                    pow(sh, -18)*(504. + 4928. * sh + 16772. * pow(sh, 2) +
                    8096. * pow(sh, 3) - 98200. * pow(sh, 4) -
                    253792. * pow(sh, 5) - 53704. * pow(sh, 6) +
                    692384. * pow(sh, 7) + 564872. * pow(sh, 8) -
                    1.224454e8 * pow(sh, 9) +
                    1.288450948e9 * pow(sh, 10) -
                    5.852563529e9 * pow(sh, 11) +
                    1.5415053304e10 * pow(sh, 12) -
                    2.6502321608e10 * pow(sh, 13) +
                    3.144127168e10 * pow(sh, 14) -
                    2.6331569936e10 * pow(sh, 15) +
                    1.5529376128e10 * pow(sh, 16) -
                    6.238441328e9 * pow(sh, 17) +
                    1.555660876e9 * pow(sh, 18) -
                    1.7969985e8 * pow(sh, 19) - 864864. * pow(sh, 20) -
                    769608. * pow(sh, 21) + 13608. * pow(sh, 22) +
                    222264. * pow(sh, 23) + 69120. * pow(sh, 24) -
                    36360. * pow(sh, 25) + 3465. * pow(sh, 26) -
                    5355. * pow(sh, 27)) +
                    2.132542391444306e-12 * pow(-1 + sh, -10) * pow(sh, -18)*
                    (3.25909584e8 + 3.86898512e8 * sh -
                    1.7890959086e10 * pow(sh, 2) -
                    1.0389775539e11 * pow(sh, 3) -
                    1.8235127911e11 * pow(sh, 4) +
                    2.39868807178e11 * pow(sh, 5) +
                    1.439309125254e12 * pow(sh, 6) +
                    1.482637674518e12 * pow(sh, 7) -
                    3.70094717993e12 * pow(sh, 8) +
                    5.3120395014687e14 * pow(sh, 9) -
                    4.14643042172931e15 * pow(sh, 10) +
                    1.345200523191798e16 * pow(sh, 11) -
                    2.254936255887042e16 * pow(sh, 12) +
                    1.699263013683648e16 * pow(sh, 13) +
                    6.14963216664132e15 * pow(sh, 14) -
                    2.740944223315607e16 * pow(sh, 15) +
                    2.8637380687636936e16 * pow(sh, 16) -
                    1.5526446414793194e16 * pow(sh, 17) +
                    4.836946771691055e15 * pow(sh, 18) -
                    5.380798436415755e15 * pow(sh, 19) +
                    1.974903378165775e16 * pow(sh, 20) -
                    4.525406630722413e16 * pow(sh, 21) +
                    6.653785922015247e16 * pow(sh, 22) -
                    6.66839502419495e16 * pow(sh, 23) +
                    6.049729378013662e16 * pow(sh, 24) -
                    7.411696572018171e16 * pow(sh, 25) -
                    2.463627215549949e17 * pow(sh, 26) +
                    2.690872861043421e18 * pow(sh, 27) -
                    1.035946806297679e19 * pow(sh, 28) +
                    2.182665348950866e19 * pow(sh, 29) -
                    2.151768755011101e19 * pow(sh, 30) -
                    1.6939887428138682e19 * pow(sh, 31) +
                    1.0333267615804637e20 * pow(sh, 32) -
                    2.0555129789476546e20 * pow(sh, 33) +
                    2.6641684480745528e20 * pow(sh, 34) -
                    2.5331099541938533e20 * pow(sh, 35) +
                    1.8430954123554472e20 * pow(sh, 36) -
                    1.0440880163165341e20 * pow(sh, 37) +
                    4.6274661819032445e19 * pow(sh, 38) -
                    1.5988086524017488e19 * pow(sh, 39) +
                    4.2570217606020905e18 * pow(sh, 40) -
                    8.554234587216317e17 * pow(sh, 41) +
                    1.252838056241772e17 * pow(sh, 42) -
                    1.26021689978184e16 * pow(sh, 43) +
                    7.7738941071792e14 * pow(sh, 44) -
                    2.214605244852e13 * pow(sh, 45))) +
                    3.4810653259229434e-19 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (-3.16414088198208e14 + 9.74539823921664e14 * sh +
                    8.087033764735926e15 * pow(sh, 2) -
                    5.684694862939435e16 * pow(sh, 3) -
                    4.0319420043801754e17 * pow(sh, 4) -
                    4.882604186351892e17 * pow(sh, 5) +
                    1.9325128069129482e18 * pow(sh, 6) +
                    6.292691026868566e18 * pow(sh, 7) +
                    6.880478820028293e18 * pow(sh, 8) +
                    8.434058124662613e21 * pow(sh, 9) -
                    8.666666875206849e22 * pow(sh, 10) +
                    3.988848694569122e23 * pow(sh, 11) -
                    1.0892247798831997e24 * pow(sh, 12) +
                    1.956951254970254e24 * pow(sh, 13) -
                    2.420742712936919e24 * pow(sh, 14) +
                    2.0958116597163414e24 * pow(sh, 15) -
                    1.2670164385119088e24 * pow(sh, 16) +
                    5.268571590407634e23 * pow(sh, 17) -
                    1.5075131737158982e23 * pow(sh, 18) +
                    5.5099869108338715e22 * pow(sh, 19) -
                    1.2335610340065616e23 * pow(sh, 20) +
                    3.125948051315389e23 * pow(sh, 21) -
                    5.329144661412522e23 * pow(sh, 22) +
                    6.337672351589234e23 * pow(sh, 23) -
                    6.415906398957901e23 * pow(sh, 24) +
                    7.960742052832872e23 * pow(sh, 25) +
                    1.0407339222184654e24 * pow(sh, 26) -
                    1.8365456331044262e25 * pow(sh, 27) +
                    8.185263022637105e25 * pow(sh, 28) -
                    2.0381593674174775e26 * pow(sh, 29) +
                    2.86653881719294e26 * pow(sh, 30) -
                    8.60180283451487e25 * pow(sh, 31) -
                    6.102598804051836e26 * pow(sh, 32) +
                    1.677905797647036e27 * pow(sh, 33) -
                    2.6085143775451684e27 * pow(sh, 34) +
                    2.8903964656452616e27 * pow(sh, 35) -
                    2.4393048290135273e27 * pow(sh, 36) +
                    1.610228894638015e27 * pow(sh, 37) -
                    8.401871973947814e26 * pow(sh, 38) +
                    3.469550828380025e26 * pow(sh, 39) -
                    1.1272782566287204e26 * pow(sh, 40) +
                    2.8443789274384395e25 * pow(sh, 41) -
                    5.451981703535345e24 * pow(sh, 42) +
                    7.659728477371017e23 * pow(sh, 43) -
                    7.427478422398451e22 * pow(sh, 44) +
                    4.435813069347255e21 * pow(sh, 45) -
                    1.2279937968685318e20 * pow(sh, 46) +
                    6.2548910424e12 * pow(3.141592653589793, 2)*
                    (1512. + 14784. * sh + 50316. * pow(sh, 2) +
                    24288. * pow(sh, 3) - 294600. * pow(sh, 4) -
                    761376. * pow(sh, 5) - 161112. * pow(sh, 6) +
                    2.077152e6 * pow(sh, 7) + 1.694616e6 * pow(sh, 8) -
                    9.4319148e8 * pow(sh, 9) +
                    9.967342612e9 * pow(sh, 10) -
                    4.6850139311e10 * pow(sh, 11) +
                    1.30210149496e11 * pow(sh, 12) -
                    2.38833139832e11 * pow(sh, 13) +
                    3.0372906844e11 * pow(sh, 14) -
                    2.72391022736e11 * pow(sh, 15) +
                    1.70802069088e11 * pow(sh, 16) -
                    7.1983905728e10 * pow(sh, 17) +
                    1.8589933516e10 * pow(sh, 18) -
                    2.99998765e9 * pow(sh, 19) +
                    3.44063258e9 * pow(sh, 20) -
                    8.9705161e9 * pow(sh, 21) +
                    1.535557394e10 * pow(sh, 22) -
                    1.759879618e10 * pow(sh, 23) +
                    1.0323785e9 * pow(sh, 24) +
                    1.54134820988e11 * pow(sh, 25) -
                    1.050042005659e12 * pow(sh, 26) +
                    4.280975184059e12 * pow(sh, 27) -
                    1.1452618278108e13 * pow(sh, 28) +
                    1.942055517402e13 * pow(sh, 29) -
                    1.455317517654e13 * pow(sh, 30) -
                    2.304660776418e13 * pow(sh, 31) +
                    9.97892002107e13 * pow(sh, 32) -
                    1.907859269745e14 * pow(sh, 33) +
                    2.504750279031e14 * pow(sh, 34) -
                    2.483138624967e14 * pow(sh, 35) +
                    1.926820640745e14 * pow(sh, 36) -
                    1.188407379159e14 * pow(sh, 37) +
                    5.85603387369e13 * pow(sh, 38) -
                    2.301507374166e13 * pow(sh, 39) +
                    7.15907863242e12 * pow(sh, 40) -
                    1.73763555966e12 * pow(sh, 41) +
                    3.216402189e11 * pow(sh, 42) -
                    4.378374e10 * pow(sh, 43) +
                    4.12540128e9 * pow(sh, 44) -
                    2.3999976e8 * pow(sh, 45) + 6.48648e6 * pow(sh, 46)))) *
                pow(z, 10);
            else
                res += pow(z, 10)*(2841.537345257575 -
                    225632.48115404812 * (1. - sh) -
                    731898.7973986422 * pow(1. - sh, 2) -
                    2.5500608094526595e6 * pow(1. - sh, 3) -
                    1.0871575896706128e7 * pow(1. - sh, 4) +
                    log(z)*(10236.629660601508 -
                    69938.30618254407 * (1. - sh) +
                    86757.40411215654 * pow(1. - sh, 2) +
                    605518.1352531877 * pow(1. - sh, 3) +
                    1.0480116268625655e6 * pow(1. - sh, 4)) +
                    (-1356.6172839506173 -
                    1319.851851851852 * (1. - sh) +
                    58319.57037037037 * pow(1. - sh, 2) +
                    152747.21081716637 * pow(1. - sh, 3) +
                    509124.9807172252 * pow(1. - sh, 4)) * pow(log(z), 2));
        }
    }
    return res;
}

double F_1::F_17im(double muh, double z, double sh, int maxpow) 
{
    double lz = log(z);
    double Lsh = log(sh);
    double Lshb = log(1. - sh);
    double Li2sh = real(Li2(sh));
    double Li3sh = real(Li3(sh));


    double res = 0;

    if (sh < 0.4) {
        res = -0.517135 + 1.39626 * sh + 0.465421 * lz * sh + 1.59186 * z +
                0.93084 * lz * z + 5.78065 * sh * z + 0.930842 * Lsh * sh * z +
                6.5159 * lz * sh * z + 0.9308425 * z * pow(lz, 2) +
                0.9308425 * sh * z * pow(lz, 2) + 1.59019 * pow(sh, 2) +
                0.465421 * lz * pow(sh, 2) + 14.7788 * z * pow(sh, 2) +
                1.86168 * Lsh * z * pow(sh, 2) + 11.1701 * lz * z * pow(sh, 2) +
                0.9308425 * z * pow(lz, 2) * pow(sh, 2) + 1.63673 * pow(sh, 3) +
                0.465421 * lz * pow(sh, 3) + 25.8196 * z * pow(sh, 3) +
                2.79253 * Lsh * z * pow(sh, 3) + 15.51405 * lz * z * pow(sh, 3) +
                0.9308425 * z * pow(lz, 2) * pow(sh, 3) +
                0.00258567 * pow(sh, 3) * pow(z, -2) -
                0.0258567 * pow(sh, 3) * pow(z, -1) - 3.06235 * pow(z, 2) -
                15.2375 * sh * pow(z, 2) + 5.58505 * lz * sh * pow(z, 2) +
                3.72337 * Lsh * lz * sh * pow(z, 2) +
                0.9308425 * pow(lz, 2) * pow(z, 2) +
                4.6542 * sh * pow(lz, 2) * pow(z, 2) -
                32.8021 * pow(sh, 2) * pow(z, 2) +
                3.72337 * Lsh * pow(sh, 2) * pow(z, 2) +
                19.5477 * lz * pow(sh, 2) * pow(z, 2) +
                11.1701 * Lsh * lz * pow(sh, 2) * pow(z, 2) +
                11.1701 * pow(lz, 2) * pow(sh, 2) * pow(z, 2) -
                52.4207 * pow(sh, 3) * pow(z, 2) +
                13.0318 * Lsh * pow(sh, 3) * pow(z, 2) +
                44.37015 * lz * pow(sh, 3) * pow(z, 2) +
                22.3402 * Lsh * lz * pow(sh, 3) * pow(z, 2) +
                20.478525 * pow(lz, 2) * pow(sh, 3) * pow(z, 2) +
                2.89595 * pow(z, 3) - 1.241125 * lz * pow(z, 3) +
                15.6984 * sh * pow(z, 3) + 1.86168 * Lsh * sh * pow(z, 3) -
                12.41125 * lz * sh * pow(z, 3) - 3.72337 * Lsh * lz * sh * pow(z, 3) +
                34.8683 * pow(sh, 2) * pow(z, 3) +
                3.72337 * Lsh * pow(sh, 2) * pow(z, 3) -
                40.3365 * lz * pow(sh, 2) * pow(z, 3) -
                14.8935 * Lsh * lz * pow(sh, 2) * pow(z, 3) +
                54.2499 * pow(sh, 3) * pow(z, 3) +
                1.86168 * Lsh * pow(sh, 3) * pow(z, 3) -
                92.4635 * lz * pow(sh, 3) * pow(z, 3) -
                37.2337 * Lsh * lz * pow(sh, 3) * pow(z, 3);
    } else {
        if (0 <= maxpow) {
            if (sh < .900001)
                res += (0.4654211338651545 * Lsh * sh * (-1. + 2. * sh) * pow(-1 + sh, -3) -
                    0.025856729659175254 * pow(-1 + sh, -2)*
                    (20. - 49. * sh + 47. * pow(sh, 2))) * pow(z, 0);
            else
                res += (-0.8274153490936081 + 0.11635528346628862 * (1. - sh) +
                    0.054299132284268026 * pow(1. - sh, 2) +
                    0.031028075591010302 * pow(1. - sh, 3) +
                    0.019946620022792336 * pow(1. - sh, 4)) * pow(z, 0);
        }

        if (1 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (2 <= maxpow) {
            if (sh < .900001)
                res += (-8.951402989423594 * sh * pow(-1 + sh, -3) +
                    7.446738141842472 * Li3sh * sh * pow(-1 + sh, -3) -
                    0.930842267730309 * Li2sh * (-5. + 3. * sh) *
                    pow(-1 + sh, -3) - 0.620561511820206 * sh * pow(Lsh, 3) *
                    pow(-1 + sh, -3) + 1.861684535460618 * pow(Lsh, 2) *
                    pow(-1 + sh, -2) - Lsh *
                    (3.723369070921236 * Li2sh * sh * pow(-1 + sh, -3) +
                    0.930842267730309 * pow(-1 + sh, -3)*
                    (3. + Lshb * (-5. + 3. * sh) +
                    2. * sh * pow(3.141592653589793, 2) - 2. * pow(sh, 2)))\
      + 0.1551403779550515 * pow(-1 + sh, -3)*
                    (-6. * (2. - 5. * sh + 3. * pow(sh, 2)) +
                    pow(3.141592653589793, 2)*
                    (-9. + 3. * sh + 4. * pow(sh, 2)))) * pow(z, 1);
            else
                res += (4.1876741044473365 + 2.7402552937030498 * (1. - sh) +
                    2.1232783768063475 * pow(1. - sh, 2) +
                    1.7630333644902134 * pow(1. - sh, 3) +
                    1.5217395214542553 * pow(1. - sh, 4)) * pow(z, 1);
        }

        if (3 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (4 <= maxpow) {
            if (sh < .900001)
                res += (-0.930842267730309 * Li2sh * (2. - 7. * sh) * pow(-1 + sh, -3) +
                    0.930842267730309 * pow(Lsh, 2) * pow(-1 + sh, -2) -
                    lz * (6.5158958741121635 * Lsh * sh * pow(-1 + sh, -3) -
                    0.4654211338651545 * pow(-1 + sh, -2) * pow(sh, -2)*
                    (2. - 7. * sh + 15. * pow(sh, 2) + 4. * pow(sh, 3))) -
                    0.07757018897752575 * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-18. + 63. * sh - 2. *
                    (63. + 2. * pow(3.141592653589793, 2)) * pow(sh, 2) +
                    (9. + 14. * pow(3.141592653589793, 2)) * pow(sh, 3) +
                    36. * pow(sh, 4)) +
                    0.4654211338651545 * Lsh * pow(-1 + sh, -4) * pow(sh, -2)*
                    (-4. + 13. * sh + (-21. + 4. * Lshb) * pow(sh, 2) +
                    (11. - 18. * Lshb) * pow(sh, 3) +
                    (-5. + 14. * Lshb) * pow(sh, 4))) * pow(z, 2);
            else
                res += (1.52554704989134 + 3.0730723199929786 * (1. - sh) +
                    4.914071471726257 * pow(1. - sh, 2) +
                    7.194598089480287 * pow(1. - sh, 3) +
                    9.866611424925042 * pow(1. - sh, 4) +
                    log(z)*(0.620561511820206 +
                    1.0084124567078347 * (1. - sh) +
                    1.7220581953010718 * pow(1. - sh, 2) +
                    2.544302198462845 * pow(1. - sh, 3) +
                    3.413088315011133 * pow(1. - sh, 4))) * pow(z, 2);
        }

        if (5 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (6 <= maxpow) {
            if (sh < .900001)
                res += (-1.861684535460618 * pow(Lsh, 2) * pow(-1 + sh, -3) * pow(sh, -1) +
                    1.861684535460618 * Li2sh * pow(-1 + sh, -4) * pow(sh, -1)*
                    (1. - sh + 2. * pow(sh, 2)) +
                    0.1551403779550515 * Lsh * pow(-1 + sh, -5) * pow(sh, -4)*
                    (4. + 4. * sh - 71. * pow(sh, 2) +
                    (155. - 12. * Lshb) * pow(sh, 3) +
                    2. * (-83. + 12. * Lshb) * pow(sh, 4) +
                    (98. - 36. * Lshb) * pow(sh, 5) +
                    12. * (-3. + 2. * Lshb) * pow(sh, 6)) -
                    lz * (1.861684535460618 * Lsh * pow(-1 + sh, -4) *
                    pow(sh, -1)*(1. - sh + 2. * pow(sh, 2)) +
                    0.1551403779550515 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (2. + 6. * sh - 45. * pow(sh, 2) + 61. * pow(sh, 3) -
                    41. * pow(sh, 4) - 11. * pow(sh, 5) + 4. * pow(sh, 6))) -
                    0.025856729659175254 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (10. - 10. * sh - 54. * pow(sh, 2) +
                    2. * (-23. + 6. * pow(3.141592653589793, 2)) * pow(sh, 3) -
                    3. * (-53. + 4. * pow(3.141592653589793, 2)) * pow(sh, 4) +
                    24. * (-10. + pow(3.141592653589793, 2)) * pow(sh, 5) +
                    141. * pow(sh, 6) - 32. * pow(sh, 7))) * pow(z, 3);
            else
                res += (2.32969134229169 + 7.64686922940449 * (1. - sh) +
                    18.94249239557088 * pow(1. - sh, 2) +
                    38.204310125548965 * pow(1. - sh, 3) +
                    67.3328659256586 * pow(1. - sh, 4) +
                    log(z)*(0.1551403779550515 +
                    3.07177948351002 * (1. - sh) +
                    8.625805014300864 * pow(1. - sh, 2) +
                    17.193986459646997 * pow(1. - sh, 3) +
                    29.117632651049522 * pow(1. - sh, 4))) * pow(z, 3);
        }

        if (7 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (8 <= maxpow) {
            if (sh < .900001)
                res += (-3.1028075591010302 * Li2sh * pow(-1 + sh, -3) * pow(sh, -2) -
                    3.1028075591010302 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -2) - lz *
                    (-3.1028075591010302 * Lsh * pow(-1 + sh, -3) * pow(sh, -2) -
                    0.05171345931835051 * pow(-1 + sh, -2) * pow(sh, -6)*
                    (3. + 19. * sh + 43. * pow(sh, 2) - 260. * pow(sh, 3) +
                    225. * pow(sh, 4) - 105. * pow(sh, 5) + 15. * pow(sh, 6)))
                    - 0.05171345931835051 * Lsh * pow(-1 + sh, -6) * pow(sh, -6)*
                    (6. + 14. * sh - 30. * pow(sh, 2) - 405. * pow(sh, 3) +
                    (1569. - 60. * Lshb) * pow(sh, 4) +
                    15. * (-169. + 12. * Lshb) * pow(sh, 5) +
                    (2235. - 180. * Lshb) * pow(sh, 6) +
                    (-1037. + 60. * Lshb) * pow(sh, 7) + 213. * pow(sh, 8)) +
                    0.004309454943195875 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (21. - 10. * sh - 307. * pow(sh, 2) + 1247. * pow(sh, 3) +
                    (-3143. + 120. * pow(3.141592653589793, 2)) *
                    pow(sh, 4) + (3526. -
                    240. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    (397. + 120. * pow(3.141592653589793, 2)) * pow(sh, 6) -
                    2577. * pow(sh, 7) + 1140. * pow(sh, 8) +
                    138. * pow(sh, 9) - 72. * pow(sh, 10))) * pow(z, 4);
            else
                res += (2.999380640464329 + 22.55925786392586 * (1. - sh) +
                    78.72635417514317 * pow(1. - sh, 2) +
                    200.15639021889723 * pow(1. - sh, 3) +
                    424.28359587096105 * pow(1. - sh, 4) +
                    log(z)*(2.482246047280824 +
                    14.11777439390969 * (1. - sh) +
                    44.215007717189685 * pow(1. - sh, 2) +
                    104.04748014852122 * pow(1. - sh, 3) +
                    206.9868147402206 * pow(1. - sh, 4))) * pow(z, 4);
        }

        if (9 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (10 <= maxpow) {
            if (sh < .900001)
                res += (-6.5158958741121635 * Li2sh * pow(-1 + sh, -3) * pow(sh, -3) -
                    6.5158958741121635 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -3) - lz *
                    (-6.5158958741121635 * Lsh * pow(-1 + sh, -3) * pow(sh, -3) -
                    0.015514037795505151 * pow(-1 + sh, -2) * pow(sh, -8)*
                    (6. + 51. * sh + 181. * pow(sh, 2) + 301. * pow(sh, 3) -
                    2324. * pow(sh, 4) + 2220. * pow(sh, 5) -
                    880. * pow(sh, 6) - 70. * pow(sh, 7) + 95. * pow(sh, 8)))\
      - 0.015514037795505151 * Lsh * pow(-1 + sh, -7) * pow(sh, -8)*
                    (-12. - 42. * sh + 28. * pow(sh, 2) + 308. * pow(sh, 3) +
                    2793. * pow(sh, 4) +
                    2. * (-8339. + 210. * Lshb) * pow(sh, 5) +
                    (37042. - 1680. * Lshb) * pow(sh, 6) +
                    168. * (-266. + 15. * Lshb) * pow(sh, 7) -
                    8. * (-3959. + 210. * Lshb) * pow(sh, 8) +
                    3. * (-4351. + 140. * Lshb) * pow(sh, 9) + 2720. * pow(sh, 10)
                    ) - 0.00025856729659175253 * pow(-1 + sh, -6) *
                    pow(sh, -8)*(162. - 36. * sh - 2914. * pow(sh, 2) -
                    5862. * pow(sh, 3) + 97530. * pow(sh, 4) -
                    329152. * pow(sh, 5) -
                    4200. * pow(3.141592653589793, 2) * pow(-1 + sh, 3) *
                    pow(sh, 5) + 497696. * pow(sh, 6) -
                    286926. * pow(sh, 7) - 114303. * pow(sh, 8) +
                    259230. * pow(sh, 9) - 141000. * pow(sh, 10) +
                    22550. * pow(sh, 11) - 2975. * pow(sh, 12) +
                    600. * pow(sh, 13))) * pow(z, 5);
            else
                res += (7.5730667353201575 + 76.74295831935828 * (1. - sh) +
                    333.4828305424486 * pow(1. - sh, 2) +
                    1010.6544814238534 * pow(1. - sh, 3) +
                    2487.030661606718 * pow(1. - sh, 4) +
                    log(z)*(9.618703433213193 +
                    58.798203244964526 * (1. - sh) +
                    212.46474760944307 * pow(1. - sh, 2) +
                    578.673609772342 * pow(1. - sh, 3) +
                    1319.624054885668 * pow(1. - sh, 4))) * pow(z, 5);
        }

        if (11 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (12 <= maxpow) {
            if (sh < .900001)
                res += (-15.638150097869193 * Li2sh * pow(-1 + sh, -3) * pow(sh, -4) -
                    15.638150097869193 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -4) - lz *
                    (-15.638150097869193 * Lsh * pow(-1 + sh, -3) * pow(sh, -4) -
                    0.00310280755910103 * pow(-1 + sh, -2) * pow(sh, -10)*
                    (20. + 212. * sh + 992. * pow(sh, 2) +
                    2592. * pow(sh, 3) + 3492. * pow(sh, 4) -
                    33768. * pow(sh, 5) + 34250. * pow(sh, 6) -
                    12355. * pow(sh, 7) - 1855. * pow(sh, 8) +
                    795. * pow(sh, 9) + 585. * pow(sh, 10))) -
                    0.00310280755910103 * Lsh * pow(-1 + sh, -8) * pow(sh, -10)*
                    (40. + 184. * sh + 40. * pow(sh, 2) - 1160. * pow(sh, 3) -
                    2240. * pow(sh, 4) - 33740. * pow(sh, 5) -
                    6. * (-44969. + 840. * Lshb) * pow(sh, 6) +
                    315. * (-2447. + 80. * Lshb) * pow(sh, 7) -
                    15. * (-80189. + 3360. * Lshb) * pow(sh, 8) +
                    40. * (-28549. + 1260. * Lshb) * pow(sh, 9) +
                    (669980. - 25200. * Lshb) * pow(sh, 10) +
                    (-228338. + 5040. * Lshb) * pow(sh, 11) +
                    35770. * pow(sh, 12)) -
                    0.00005171345931835051 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (-440. + 32. * sh + 10212. * pow(sh, 2) +
                    23632. * pow(sh, 3) - 7888. * pow(sh, 4) -
                    1.620528e6 * pow(sh, 5) + 7.571238e6 * pow(sh, 6) -
                    50400. * pow(3.141592653589793, 2) * pow(-1 + sh, 4) *
                    pow(sh, 6) - 1.5372042e7 * pow(sh, 7) +
                    1.5504288e7 * pow(sh, 8) - 5.560242e6 * pow(sh, 9) -
                    3.213542e6 * pow(sh, 10) + 3.254015e6 * pow(sh, 11) -
                    18260. * pow(sh, 12) - 907710. * pow(sh, 13) +
                    366640. * pow(sh, 14) - 57405. * pow(sh, 15) +
                    2800. * pow(sh, 16))) * pow(z, 6);
            else
                res += (22.715875769290008 + 274.2629779131134 * (1. - sh) +
                    1412.2988649700028 * pow(1. - sh, 2) +
                    4950.204882473423 * pow(1. - sh, 3) +
                    13834.085987140208 * pow(1. - sh, 4) +
                    log(z)*(35.68228692966185 +
                    243.9582443343185 * (1. - sh) +
                    998.3128181029609 * pow(1. - sh, 2) +
                    3074.85126299353 * pow(1. - sh, 3) +
                    7873.5293215968195 * pow(1. - sh, 4))) * pow(z, 6);
        }

        if (13 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (14 <= maxpow) {
            if (sh < .900001)
                res += (-40.9570597801336 * Li2sh * pow(-1 + sh, -3) * pow(sh, -5) -
                    40.9570597801336 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -5) - lz *
                    (-40.9570597801336 * Lsh * pow(-1 + sh, -3) * pow(sh, -5) -
                    0.0014775274090957288 * pow(-1 + sh, -2) * pow(sh, -12)*
                    (30. + 380. * sh + 2186. * pow(sh, 2) +
                    7436. * pow(sh, 3) + 15906. * pow(sh, 4) +
                    18216. * pow(sh, 5) - 217404. * pow(sh, 6) +
                    230279. * pow(sh, 7) - 78421. * pow(sh, 8) -
                    14581. * pow(sh, 9) + 3024. * pow(sh, 10) +
                    3864. * pow(sh, 11) + 1365. * pow(sh, 12))) -
                    0.0014775274090957288 * Lsh * pow(-1 + sh, -9) * pow(sh, -12)*
                    (-60. - 340. * sh - 312. * pow(sh, 2) + 1872. * pow(sh, 3) +
                    4980. * pow(sh, 4) + 1620. * pow(sh, 5) +
                    203850. * pow(sh, 6) +
                    (-1.895519e6 + 27720. * Lshb) * pow(sh, 7) +
                    (6.594942e6 - 166320. * Lshb) * pow(sh, 8) +
                    33. * (-385051. + 12600. * Lshb) * pow(sh, 9) +
                    (1.5286135e7 - 554400. * Lshb) * pow(sh, 10) +
                    15. * (-794279. + 27720. * Lshb) * pow(sh, 11) -
                    6. * (-990013. + 27720. * Lshb) * pow(sh, 12) +
                    2. * (-882383. + 13860. * Lshb) * pow(sh, 13) +
                    249228. * pow(sh, 14)) -
                    3.517922402608878e-6 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (3900. + 100. * sh - 116036. * pow(sh, 2) -
                    329570. * pow(sh, 3) + 93490. * pow(sh, 4) +
                    1.36222e6 * pow(sh, 5) + 7.515214e7 * pow(sh, 6) -
                    4.58367722e8 * pow(sh, 7) -
                    1.9404e6 * pow(3.141592653589793, 2) * pow(-1 + sh, 5) *
                    pow(sh, 7) + 1.185571378e9 * pow(sh, 8) -
                    1.64901962e9 * pow(sh, 9) + 1.210803485e9 * pow(sh, 10) -
                    2.77663825e8 * pow(sh, 11) - 2.28715591e8 * pow(sh, 12) +
                    1.81552504e8 * pow(sh, 13) - 5.1683975e7 * pow(sh, 14) +
                    3.0412585e7 * pow(sh, 15) - 3.0028425e7 * pow(sh, 16) +
                    1.2629064e7 * pow(sh, 17) - 2.061822e6 * pow(sh, 18) +
                    52920. * pow(sh, 19))) * pow(z, 7);
            else
                res += (76.06009440178788 + 1017.2781752351876 * (1. - sh) +
                    5990.892688563418 * pow(1. - sh, 2) +
                    23739.93632888451 * pow(1. - sh, 3) +
                    74088.64892315648 * pow(1. - sh, 4) +
                    log(z)*(131.81760780247544 +
                    1011.2566969703441 * (1. - sh) +
                    4618.653164024247 * pow(1. - sh, 2) +
                    15821.68116499002 * pow(1. - sh, 3) +
                    44807.95424173389 * pow(1. - sh, 4))) * pow(z, 7);
        }

        if (15 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (16 <= maxpow) {
            if (sh < .900001)
                res += (-114.09466653037217 * Li2sh * pow(-1 + sh, -3) * pow(sh, -6) -
                    114.09466653037217 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -6) - lz *
                    (-114.09466653037217 * Lsh * pow(-1 + sh, -3) * pow(sh, -6) -
                    0.000316613016234799 * pow(-1 + sh, -2) * pow(sh, -14)*
                    (105. + 1545. * sh + 10505. * pow(sh, 2) +
                    43433. * pow(sh, 3) + 119873. * pow(sh, 4) +
                    221793. * pow(sh, 5) + 221793. * pow(sh, 6) -
                    3.231657e6 * pow(sh, 7) + 3.541034e6 * pow(sh, 8) -
                    1.160656e6 * pow(sh, 9) - 243376. * pow(sh, 10) +
                    26124. * pow(sh, 11) + 54544. * pow(sh, 12) +
                    27790. * pow(sh, 13) + 6790. * pow(sh, 14))) -
                    0.000633226032469598 * Lsh * pow(-1 + sh, -10) * pow(sh, -14)*
                    (105. + 705. * sh + 1085. * pow(sh, 2) - 3227. * pow(sh, 3) -
                    12621. * pow(sh, 4) - 7077. * pow(sh, 5) +
                    23415. * pow(sh, 6) - 1.52775e6 * pow(sh, 7) +
                    (1.5332677e7 - 180180. * Lshb) * pow(sh, 8) +
                    154. * (-404281. + 8190. * Lshb) * pow(sh, 9) -
                    3276. * (-43597. + 1155. * Lshb) * pow(sh, 10) +
                    140. * (-1.492544e6 + 45045. * Lshb) * pow(sh, 11) -
                    35. * (-5.843231e6 + 180180. * Lshb) * pow(sh, 12) +
                    84. * (-1.606567e6 + 45045. * Lshb) * pow(sh, 13) -
                    14. * (-4.169089e6 + 90090. * Lshb) * pow(sh, 14) +
                    4. * (-3.790859e6 + 45045. * Lshb) * pow(sh, 15) +
                    1.820973e6 * pow(sh, 16)) -
                    3.7692025742237975e-7 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (-23625. - 2250. * sh + 884825. * pow(sh, 2) +
                    3.042036e6 * pow(sh, 3) + 226209. * pow(sh, 4) -
                    1.547673e7 * pow(sh, 5) - 1.7445585e7 * pow(sh, 6) -
                    2.27462355e9 * pow(sh, 7) +
                    1.6881630069e10 * pow(sh, 8) -
                    5.04504e7 * pow(3.141592653589793, 2) * pow(-1 + sh, 6) *
                    pow(sh, 8) - 5.3231013434e10 * pow(sh, 9) +
                    9.3745467315e10 * pow(sh, 10) -
                    9.75051387e10 * pow(sh, 11) +
                    5.4985329535e10 * pow(sh, 12) -
                    7.700748318e9 * pow(sh, 13) -
                    9.422168487e9 * pow(sh, 14) +
                    5.032015758e9 * pow(sh, 15) + 1.2563586e8 * pow(sh, 16) -
                    1.23426506e9 * pow(sh, 17) +
                    1.153426148e9 * pow(sh, 18) -
                    7.67036928e8 * pow(sh, 19) + 2.79185592e8 * pow(sh, 20) -
                    4.285204e7 * pow(sh, 21) + 776160. * pow(sh, 22))) *
                pow(z, 8);
            else
                res += (271.5271820060675 + 3880.215714318396 * (1. - sh) +
                    25470.9497140867 * pow(1. - sh, 2) +
                    112116.7831963215 * pow(1. - sh, 3) +
                    385562.38008219755 * pow(1. - sh, 4) +
                    log(z)*(489.0024713143224 +
                    4185.8425376052455 * (1. - sh) +
                    21101.356451405147 * pow(1. - sh, 2) +
                    79419.24508622084 * pow(1. - sh, 3) +
                    245951.53666868948 * pow(1. - sh, 4))) * pow(z, 8);
        }

        if (17 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (18 <= maxpow) {
            if (sh < .900001)
                res += (-332.77611071358547 * Li2sh * pow(-1 + sh, -3) * pow(sh, -7) -
                    332.77611071358547 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -7) - lz *
                    (-332.77611071358547 * Lsh * pow(-1 + sh, -3) * pow(sh, -7) -
                    0.0009234546306848304 * pow(-1 + sh, -2) * pow(sh, -16)*
                    (28. + 469. * sh + 3673. * pow(sh, 2) +
                    17785. * pow(sh, 3) + 59113. * pow(sh, 4) +
                    140257. * pow(sh, 5) + 231985. * pow(sh, 6) +
                    205777. * pow(sh, 7) - 3.632057e6 * pow(sh, 8) +
                    4.091364e6 * pow(sh, 9) - 1.304928e6 * pow(sh, 10) -
                    297432. * pow(sh, 11) + 14292. * pow(sh, 12) +
                    58644. * pow(sh, 13) + 35460. * pow(sh, 14) +
                    12780. * pow(sh, 15) + 2430. * pow(sh, 16))) -
                    0.0009234546306848304 * Lsh * pow(-1 + sh, -11) * pow(sh, -16)*
                    (-56. - 434. * sh - 920. * pow(sh, 2) + 1480. * pow(sh, 3) +
                    9184. * pow(sh, 4) + 8932. * pow(sh, 5) -
                    19712. * pow(sh, 6) - 36344. * pow(sh, 7) +
                    3.49657e6 * pow(sh, 8) +
                    7. * (-5.358061e6 + 51480. * Lshb) * pow(sh, 9) -
                    20. * (-8.630911e6 + 144144. * Lshb) * pow(sh, 10) +
                    880. * (-521011. + 11466. * Lshb) * pow(sh, 11) -
                    56. * (-1.4125987e7 + 360360. * Lshb) * pow(sh, 12) +
                    140. * (-6.677771e6 + 180180. * Lshb) * pow(sh, 13) -
                    112. * (-6.885077e6 + 180180. * Lshb) * pow(sh, 14) +
                    56. * (-7.869671e6 + 180180. * Lshb) * pow(sh, 15) +
                    (1.68053456e8 - 2.88288e6 * Lshb) * pow(sh, 16) +
                    (-3.8989933e7 + 360360. * Lshb) * pow(sh, 17) +
                    4.262544e6 * pow(sh, 18)) -
                    7.329005005435162e-7 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (8330. + 1225. * sh - 385185. * pow(sh, 2) -
                    1.565725e6 * pow(sh, 3) - 766913. * pow(sh, 4) +
                    8.101569e6 * pow(sh, 5) + 1.6471637e7 * pow(sh, 6) -
                    1.4354375e7 * pow(sh, 7) + 3.953480265e9 * pow(sh, 8) -
                    3.3767434535e10 * pow(sh, 9) -
                    7.56756e7 * pow(3.141592653589793, 2) * pow(-1 + sh, 7) *
                    pow(sh, 9) + 1.25322516107e11 * pow(sh, 10) -
                    2.66443744245e11 * pow(sh, 11) +
                    3.52730324065e11 * pow(sh, 12) -
                    2.89748672815e11 * pow(sh, 13) +
                    1.29737902497e11 * pow(sh, 14) -
                    9.132479783e9 * pow(sh, 15) -
                    2.0967436048e10 * pow(sh, 16) +
                    9.674219718e9 * pow(sh, 17) -
                    2.08073817e9 * pow(sh, 18) +
                    2.119593546e9 * pow(sh, 19) -
                    2.784214188e9 * pow(sh, 20) +
                    2.248987986e9 * pow(sh, 21) -
                    1.186673418e9 * pow(sh, 22) + 3.6469845e8 * pow(sh, 23) -
                    5.0148315e7 * pow(sh, 24) + 720720. * pow(sh, 25))) *
                pow(z, 9);
            else
                res += (1006.065639479665 + 15109.542202132543 * (1. - sh) +
                    108519.79668479163 * pow(1. - sh, 2) +
                    523317.44480667595 * pow(1. - sh, 3) +
                    1.9618209518756133e6 * pow(1. - sh, 4) +
                    log(z)*(1824.4508447514058 +
                    17292.722228759816 * (1. - sh) +
                    95376.89127845067 * pow(1. - sh, 2) +
                    390749.8979900969 * pow(1. - sh, 3) +
                    1.3116595468138563e6 * pow(1. - sh, 4))) * pow(z, 9);
        }

        if (19 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (20 <= maxpow) {
            if (sh < .900001)
                res += (-1005.7233568232806 * Li2sh * pow(-1 + sh, -3) * pow(sh, -8) -
                    1005.7233568232806 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -8) - lz *
                    (-1005.7233568232806 * Lsh * pow(-1 + sh, -3) * pow(sh, -8) -
                    0.00004104242803043691 * pow(-1 + sh, -2) * pow(sh, -18)*
                    (504. + 9464. * sh + 83804. * pow(sh, 2) +
                    463964. * pow(sh, 3) + 1.792004e6 * pow(sh, 4) +
                    5.082116e6 * pow(sh, 5) + 1.0736996e7 * pow(sh, 6) +
                    1.6220516e7 * pow(sh, 7) + 1.2878996e7 * pow(sh, 8) -
                    2.73934804e8 * pow(sh, 9) +
                    3.15821466e8 * pow(sh, 10) -
                    9.8670339e7 * pow(sh, 11) -
                    2.3977539e7 * pow(sh, 12) + 157761. * pow(sh, 13) +
                    4.274181e6 * pow(sh, 14) + 2.899395e6 * pow(sh, 15) +
                    1.241235e6 * pow(sh, 16) + 359415. * pow(sh, 17) +
                    56385. * pow(sh, 18))) -
                    0.00004104242803043691 * Lsh * pow(-1 + sh, -12) *
                    pow(sh, -18)*(1008. + 8848. * sh + 23688. * pow(sh, 2) -
                    17352. * pow(sh, 3) - 212592. * pow(sh, 4) -
                    311184. * pow(sh, 5) + 400176. * pow(sh, 6) +
                    1.492176e6 * pow(sh, 7) - 255024. * pow(sh, 8) -
                    2.64398904e8 * pow(sh, 9) -
                    6. * (-5.11641281e8 + 4.08408e6 * Lshb) * pow(sh, 10) +
                    9. * (-1.747237201e9 + 2.450448e7 * Lshb) * pow(sh, 11) -
                    1989. * (-2.3808319e7 + 443520. * Lshb) * pow(sh, 12) +
                    1848. * (-5.0928893e7 + 1.11384e6 * Lshb) * pow(sh, 13) -
                    13104. * (-9.960259e6 + 235620. * Lshb) * pow(sh, 14) +
                    3528. * (-3.6704249e7 + 875160. * Lshb) * pow(sh, 15) -
                    168. * (-5.49270061e8 + 1.225224e7 * Lshb) * pow(sh, 16) +
                    72. * (-6.45450961e8 + 1.225224e7 * Lshb) * pow(sh, 17) -
                    288. * (-5.4964186e7 + 765765. * Lshb) * pow(sh, 18) +
                    (-3.301634542e9 + 2.450448e7 * Lshb) * pow(sh, 19) +
                    3.2083623e8 * pow(sh, 20)) +
                    1.6286677789855916e-8 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (268128. + 50176. * sh - 1.5037316e7 * pow(sh, 2) -
                    7.0758368e7 * pow(sh, 3) - 6.454424e7 * pow(sh, 4) +
                    3.47363296e8 * pow(sh, 5) + 9.86787592e8 * pow(sh, 6) +
                    3.5646688e7 * pow(sh, 7) - 4.264570016e9 * pow(sh, 8) +
                    6.1791288328e11 * pow(sh, 9) -
                    5.890389956722e12 * pow(sh, 10) +
                    1.02918816e10 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 8) * pow(sh, 10) +
                    2.5054270208126e13 * pow(sh, 11) -
                    6.2290275001696e13 * pow(sh, 12) +
                    9.9547394852612e13 * pow(sh, 13) -
                    1.0492568190538e14 * pow(sh, 14) +
                    7.0557905411966e13 * pow(sh, 15) -
                    2.5585687891288e13 * pow(sh, 16) +
                    2.41116416108e11 * pow(sh, 17) +
                    4.002654161834e12 * pow(sh, 18) -
                    1.418993445915e12 * pow(sh, 19) -
                    5.1123112488e10 * pow(sh, 20) +
                    3.91122982404e11 * pow(sh, 21) -
                    5.60776090644e11 * pow(sh, 22) +
                    5.66827442118e11 * pow(sh, 23) -
                    3.8373727824e11 * pow(sh, 24) +
                    1.699988427e11 * pow(sh, 25) -
                    4.480654338e10 * pow(sh, 26) +
                    5.447537865e9 * pow(sh, 27) - 6.48648e7 * pow(sh, 28))) *
                pow(z, 10);
            else
                res += (3810.205573044906 + 59724.74778239659 * (1. - sh) +
                    463067.1377229003 * pow(1. - sh, 2) +
                    2.4198049101282065e6 * pow(1. - sh, 3) +
                    9.801969439295417e6 * pow(1. - sh, 4) +
                    log(z)*(6844.5866215396 +
                    71287.3656645614 * (1. - sh) +
                    427082.75058067543 * pow(1. - sh, 2) +
                    1.8906811822573014e6 * pow(1. - sh, 3) +
                    6.831129334403158e6 * pow(1. - sh, 4))) * pow(z, 10);
        }
    }
    return res;
}

double F_1::F_19re(double muh, double z, double sh, int maxpow) 
{
    double lz = log(z);
    double lmu = log(muh);
    double Lsh = log(sh);
    double Lshb = log(1. - sh);
    double Li2sh = real(Li2(sh));
    double Li3sh = real(Li3(sh));
    double Li3shb = real(Li3(1. - sh));
    double Li4sh = real(Li4(sh));
    double sqrtsh = sqrt(sh);
    double sqrt4sh = sqrt(4. - sh);
    double ash = asin(sqrtsh / 2.);
    double cl2 = Cl2(2. * ash);
    double cl3 = Cl3(2. * ash);


    double res = 0;

    if (sh < 0.4) {
        res = -4.61812 - 0.0493827 * Lsh - 0.06584362139917696 * lmu * Lsh +
                2.814815 * lz + lmu * (-1.953360768175583 +
                1.1851851851851851 * lz) + 4.47441 * sh + 0.74074 * lz * sh +
                14.4621 * z - 0.592593 * Lsh * z + 4.796605 * lz * z +
                71.3855 * sh * z - 2.66667 * Lsh * sh * z + 4.238385 * lz * sh * z -
                0.592595 * Lsh * lz * sh * z - 1.0534979423868314 * pow(lmu, 2) -
                0.2962975 * z * pow(lz, 2) + 3.134725 * sh * z * pow(lz, 2) -
                0.098765375 * z * pow(lz, 3) - 0.098765375 * sh * z * pow(lz, 3) +
                0.0493826875 * sh * z * pow(lz, 4) + 37.1282 * pow(sh, 2) +
                0.0164609 * Lsh * pow(sh, 2) + 11.03105 * lz * pow(sh, 2) +
                212.74 * z * pow(sh, 2) - 5.33333 * Lsh * z * pow(sh, 2) -
                10.96075 * lz * z * pow(sh, 2) - 1.185185 * Lsh * lz * z * pow(sh, 2) +
                1.3333325 * pow(lz, 2) * pow(sh, 2) +
                14.2931 * z * pow(lz, 2) * pow(sh, 2) +
                0.098765375 * pow(lz, 3) * pow(sh, 2) -
                0.29629625 * z * pow(lz, 3) * pow(sh, 2) +
                0.148148125 * z * pow(lz, 4) * pow(sh, 2) + 79.7475 * pow(sh, 3) +
                0.0219479 * Lsh * pow(sh, 3) + 28.65855 * lz * pow(sh, 3) +
                425.579 * z * pow(sh, 3) - 8.2963 * Lsh * z * pow(sh, 3) -
                34.4008 * lz * z * pow(sh, 3) - 1.77778 * Lsh * lz * z * pow(sh, 3) +
                2.814825 * pow(lz, 2) * pow(sh, 3) +
                32.33925 * z * pow(lz, 2) * pow(sh, 3) +
                0.29629625 * pow(lz, 3) * pow(sh, 3) -
                0.6913575 * z * pow(lz, 3) * pow(sh, 3) +
                0.29629625 * z * pow(lz, 4) * pow(sh, 3) +
                lmu * pow(sh, 3)*(0.00020902736952119668 -
                0.0037624926513815404 * pow(z, -3)) -
                0.0759415 * pow(sh, 3) * pow(z, -3) +
                lmu * pow(sh, 2)*(0.0014109347442680777 -
                0.025396825396825397 * pow(z, -2)) -
                0.403158 * pow(sh, 2) * pow(z, -2) -
                0.00480894 * pow(sh, 3) * pow(z, -2) +
                lmu * sh * (0.01316872427983539 -
                0.23703703703703705 * pow(z, -1)) -
                2.48507 * sh * pow(z, -1) - 0.0613169 * pow(sh, 2) * pow(z, -1) -
                1.81002 * pow(sh, 3) * pow(z, -1) -
                0.4597295 * lz * pow(sh, 3) * pow(z, -1) -
                0.04938275 * pow(lz, 2) * pow(sh, 3) * pow(z, -1) +
                pow(sh, 3)*(7.79821 * pow(z, -0.5) - 319.726 * pow(z, 0.5)) -
                23.3946 * sh * pow(z, 0.5) - 140.368 * pow(sh, 2) * pow(z, 0.5) +
                3.8991 * pow(z, 1.5) - 16.0864 * pow(z, 2) +
                4.95977 * Lsh * pow(z, 2) + 27.12195 * lz * pow(z, 2) -
                0.592595 * Lsh * lz * pow(z, 2) - 18.1301 * sh * pow(z, 2) +
                18.6539 * Lsh * sh * pow(z, 2) + 74.798 * lz * sh * pow(z, 2) -
                2.37037 * Lsh * lz * sh * pow(z, 2) -
                3.85185 * pow(lz, 2) * pow(z, 2) -
                0.5925925 * Lsh * pow(lz, 2) * pow(z, 2) -
                12.2963 * sh * pow(lz, 2) * pow(z, 2) -
                2.37037 * Lsh * sh * pow(lz, 2) * pow(z, 2) -
                0.4938275 * pow(lz, 3) * pow(z, 2) -
                1.3827125 * sh * pow(lz, 3) * pow(z, 2) -
                44.6829 * pow(sh, 2) * pow(z, 2) +
                40.786 * Lsh * pow(sh, 2) * pow(z, 2) +
                136.0075 * lz * pow(sh, 2) * pow(z, 2) -
                7.1111 * Lsh * lz * pow(sh, 2) * pow(z, 2) -
                29.77775 * pow(lz, 2) * pow(sh, 2) * pow(z, 2) -
                5.333325 * Lsh * pow(lz, 2) * pow(sh, 2) * pow(z, 2) -
                2.6666625 * pow(lz, 3) * pow(sh, 2) * pow(z, 2) -
                87.8946 * pow(sh, 3) * pow(z, 2) +
                70.2698 * Lsh * pow(sh, 3) * pow(z, 2) +
                208.806 * lz * pow(sh, 3) * pow(z, 2) -
                15.80245 * Lsh * lz * pow(sh, 3) * pow(z, 2) -
                56.79 * pow(lz, 2) * pow(sh, 3) * pow(z, 2) -
                9.481475 * Lsh * pow(lz, 2) * pow(sh, 3) * pow(z, 2) -
                4.345675 * pow(lz, 3) * pow(sh, 3) * pow(z, 2) - 14.73 * pow(z, 3) -
                9.20287 * Lsh * pow(z, 3) - 14.28805 * lz * pow(z, 3) -
                0.52675 * Lsh * lz * pow(z, 3) - 72.89 * sh * pow(z, 3) -
                41.6104 * Lsh * sh * pow(z, 3) - 34.0675 * lz * sh * pow(z, 3) -
                1.185185 * Lsh * lz * sh * pow(z, 3) +
                5.037025 * pow(lz, 2) * pow(z, 3) +
                0.7901225 * Lsh * pow(lz, 2) * pow(z, 3) +
                15.901225 * sh * pow(lz, 2) * pow(z, 3) +
                3.55555 * Lsh * sh * pow(lz, 2) * pow(z, 3) -
                137.203 * pow(sh, 2) * pow(z, 3) -
                111.356 * Lsh * pow(sh, 2) * pow(z, 3) -
                49.7185 * lz * pow(sh, 2) * pow(z, 3) +
                42.22225 * pow(lz, 2) * pow(sh, 2) * pow(z, 3) +
                9.481475 * Lsh * pow(lz, 2) * pow(sh, 2) * pow(z, 3) -
                279.268 * pow(sh, 3) * pow(z, 3) -
                231.893 * Lsh * pow(sh, 3) * pow(z, 3) -
                73.4265 * lz * pow(sh, 3) * pow(z, 3) +
                5.92595 * Lsh * lz * pow(sh, 3) * pow(z, 3) +
                82.81475 * pow(lz, 2) * pow(sh, 3) * pow(z, 3) +
                19.753075 * Lsh * pow(lz, 2) * pow(sh, 3) * pow(z, 3);
    } else {
        if (0 <= maxpow) {
            if (sh < .900001)
                res += (11.39728026699467 - 1.0534979423868314 * pow(lmu, 2) -
                    0.03292181069958848 * Li2sh * (-8. + 17. * sh) *
                    pow(-1 + sh, -1) - 0.03292181069958848 * cl2 * (2. + sh) *
                    sqrt4sh * sqrtsh * pow(sh, -2) -
                    lmu * (-1.1193415637860082 * Lsh +
                    0.13168724279835392 * ash * (2. + sh) * sqrt4sh * sqrtsh *
                    pow(sh, -2) + 0.13168724279835392 * (-2. + 29. * sh) *
                    pow(sh, -1)) + 0.14814814814814814 * pow(Lsh, 2) *
                    pow(-1 + sh, -3) * pow(sh, 2) -
                    Lsh * (0.03292181069958848 * ash * (2. + sh) * sqrt4sh *
                    sqrtsh * pow(sh, -2) +
                    0.01646090534979424 * pow(-1 + sh, -2)*
                    (-168. + 307. * sh - 121. * pow(sh, 2) +
                    2. * Lshb * (8. - 25. * sh + 17. * pow(sh, 2)))) -
                    0.03292181069958848 * ash * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, -2)*(-4. + 3. * sh + 18. * pow(sh, 2) -
                    16. * pow(sh, 3) + 5. * pow(sh, 4)) -
                    0.09876543209876543 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, -1)*(12. - 33. * sh + 18. * pow(sh, 2) -
                    4. * pow(sh, 4) + pow(sh, 5)) +
                    0.001828989483310471 * pow(-1 + sh, -4) * pow(sh, -1)*
                    (144. + 2. * sh * (-2068. +
                    75. * pow(3.141592653589793, 2)) +
                    (15077. - 618. * pow(3.141592653589793, 2)) *
                    pow(sh, 2) + 102. *
                    (-214. + 9. * pow(3.141592653589793, 2)) * pow(sh, 3) +
                    (14249. - 615. * pow(3.141592653589793, 2)) *
                    pow(sh, 4) + 2. * (-1753. +
                    78. * pow(3.141592653589793, 2)) * pow(sh, 5))) *
                pow(z, 0);
            else
                res += pow(z, 0)*(5.605483340182181 -
                    1.9301201034078073 * (1. - sh) -
                    1.1708211541924651 * pow(1. - sh, 2) -
                    0.8303057591438543 * pow(1. - sh, 3) +
                    log(muh)*(-3.9138369114536733 -
                    1.136144688522592 * (1. - sh) -
                    0.5573265536192934 * pow(1. - sh, 2) -
                    0.37357014711105585 * pow(1. - sh, 3) -
                    0.27973271946953165 * pow(1. - sh, 4)) -
                    0.6410250317311895 * pow(1. - sh, 4) -
                    1.0534979423868314 * pow(log(muh), 2));
        }

        if (1 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (2 <= maxpow) {
            if (sh < .900001)
                res += (-0.09876543209876543 * sh * pow(Lsh, 4) * pow(-1 + sh, -3) +
                    0.5925925925925926 * Li2sh * (1. + 2. * sh) *
                    pow(-1 + sh, -2) - 0.19753086419753085 * (-3. + sh) *
                    pow(Lsh, 3) * pow(-1 + sh, -2) -
                    7.111111111111111 * lmu * pow(sh, -1) -
                    lz * (0.5925925925925926 * Lsh *
                    (2. + 2. * Lshb * (-1. + sh) + sh) * pow(-1 + sh, -2) +
                    1.1851851851851851 * Li2sh * pow(-1 + sh, -1) -
                    0.5925925925925926 * pow(Lsh, 2) * pow(-1 + sh, -1) -
                    0.19753086419753085 *
                    (144. + sh * (-135. + pow(3.141592653589793, 2))) *
                    pow(-1 + sh, -1) * pow(sh, -1)) +
                    0.7123300166871669 * pow(-1 + sh, -3)*
                    (-3. + 3. * sh + 2. * pow(sh, 2)) -
                    0.5925925925925926 * ash * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, -1)*(2. - 11. * sh + 3. * pow(sh, 2)) +
                    0.5925925925925926 * Li3sh * pow(-1 + sh, -3)*
                    (-3. - 3. * sh + 4. * pow(sh, 2)) -
                    pow(Lsh, 2)*(1.1851851851851851 * Li2sh * sh *
                    pow(-1 + sh, -3) +
                    0.09876543209876543 * pow(-1 + sh, -3)*
                    (12. + 3. * Lshb * (-7. + 5. * sh) +
                    2. * sh * (-6. + pow(3.141592653589793, 2)) +
                    3. * pow(sh, 2))) -
                    3.5555555555555554 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-1. + 8. * sh - 5. * pow(sh, 2) + pow(sh, 3)) -
                    Lsh * (5.698640133497335 * sh * pow(-1 + sh, -3) -
                    4.7407407407407405 * Li3sh * sh * pow(-1 + sh, -3) +
                    0.5925925925925926 * Li2sh * pow(-1 + sh, -3)*
                    (-5. + sh + 2. * pow(sh, 2)) -
                    0.09876543209876543 * pow(-1 + sh, -3) * pow(sh, -1)*
                    (-288. + sh * (906. - 6. * Lshb -
                    7. * pow(3.141592653589793, 2)) +
                    (-903. - 6. * Lshb + 5. * pow(3.141592653589793, 2)) *
                    pow(sh, 2) + 3. * (95. + 4. * Lshb) * pow(sh, 3))) -
                    0.019753086419753086 * pow(-1 + sh, -4) * pow(sh, -1)*
                    (-4. * (-1. + sh) * pow(3.141592653589793, 4) * pow(sh, 2) +
                    15. * (-1. + sh)*(-20. + 48. * sh +
                    3. * (-13. + 8. * Li4sh) * pow(sh, 2) + 11. * pow(sh, 3))\
         + 5. * pow(3.141592653589793, 2)*
                    (-3. + 8. * sh - 10. * pow(sh, 2) + 2. * pow(sh, 4)))) *
                pow(z, 1);
            else
                res += (-0.6372090343808106 - 30.841194974865694 * (1. - sh) -
                    45.8723194923496 * pow(1. - sh, 2) -
                    55.64666652217136 * pow(1. - sh, 3) +
                    log(z)*(-29.333333333333332 -
                    29.037037037037038 * (1. - sh) -
                    28.921810699588477 * pow(1. - sh, 2) -
                    28.854320987654322 * pow(1. - sh, 3) -
                    28.8079012345679 * pow(1. - sh, 4)) +
                    log(muh)*(-7.111111111111111 -
                    7.111111111111111 * (1. - sh) -
                    7.111111111111111 * pow(1. - sh, 2) -
                    7.111111111111111 * pow(1. - sh, 3) -
                    7.111111111111111 * pow(1. - sh, 4)) -
                    62.91148562558235 * pow(1. - sh, 4)) * pow(z, 1);
        }

        if (3 <= maxpow) {
            if (sh < .900001)
                res += 0.3950617283950617 * (-2. + sh) * pow(3.141592653589793, 2) *
                pow(sh, -1) * pow(z, 1.5);
            else
                res += (-3.8991029732698697 - 7.798205946539739 * (1. - sh) -
                    7.798205946539739 * pow(1. - sh, 2) -
                    7.798205946539739 * pow(1. - sh, 3) -
                    7.798205946539739 * pow(1. - sh, 4)) * pow(z, 1.5);
        }

        if (4 <= maxpow) {
            if (sh < .900001)
                res += (-0.5925925925925926 * Li3shb * (6. + sh) * pow(-1 + sh, -3) -
                    0.5925925925925926 * Li3sh * (-11. + 3. * sh) *
                    pow(-1 + sh, -3) - 0.09876543209876543 * (2. + sh) *
                    pow(Lsh, 3) * pow(-1 + sh, -3) -
                    lmu * (3.5555555555555554 * pow(sh, -2) +
                    7.111111111111111 * Lsh * pow(sh, -2)) +
                    0.5925925925925926 * Li2sh * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-3. + 10. * sh - 9. * pow(sh, 2) + pow(sh, 3)) +
                    0.5925925925925926 * cl2 * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, -1)*(2. + 8. * pow(sh, 2) - 5. * pow(sh, 3) +
                    pow(sh, 4)) - 0.5925925925925926 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, -1)*
                    (-2. - 4. * sh + 24. * pow(sh, 2) - 15. * pow(sh, 3) +
                    3. * pow(sh, 4)) - 0.7123300166871669 * pow(-1 + sh, -4) *
                    pow(sh, -2)*(64. - 256. * sh + 375. * pow(sh, 2) -
                    236. * pow(sh, 3) + 59. * pow(sh, 4)) +
                    0.14814814814814814 * pow(Lsh, 2) * pow(-1 + sh, -4) *
                    pow(sh, -2)*(185. - 751. * sh +
                    3. * (379. + 2. * Lshb) * pow(sh, 2) -
                    (777. + 8. * Lshb) * pow(sh, 3) +
                    2. * (100. + Lshb) * pow(sh, 4)) -
                    Lsh * (-0.5925925925925926 * Li2sh * (-7. + 2. * sh) *
                    pow(-1 + sh, -3) -
                    3.5555555555555554 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-1. - 3. * sh + pow(sh, 2)) -
                    0.04938271604938271 * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-423. + 1236. * sh -
                    (1179. + 46. * pow(3.141592653589793, 2)) *
                    pow(sh, 2) + 2. *
                    (225. + pow(3.141592653589793, 2)) * pow(sh, 3) +
                    12. * Lshb * (-3. + 10. * sh - 9. * pow(sh, 2) +
                    pow(sh, 3))) -
                    0.5925925925925926 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, -1)*
                    (2. + 8. * pow(sh, 2) - 5. * pow(sh, 3) + pow(sh, 4))) -
                    1.7777777777777777 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (4. - 2. * sh - 24. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) -
                    pow(lz, 2)*(-0.2962962962962963 * Lsh * (6. + sh) *
                    pow(-1 + sh, -3) -
                    0.14814814814814814 * pow(-1 + sh, -2) * pow(sh, -2)*
                    (188. - 378. * sh + 169. * pow(sh, 2) + 12. * pow(sh, 3) -
                    6. * pow(sh, 4) + pow(sh, 5))) -
                    0.024691358024691357 * pow(-1 + sh, -4) * pow(sh, -2)*
                    (88. - 448. * sh - 3. * (-415. + 48. * cl3) * pow(sh, 2) -
                    2. * (917. + 216. * cl3) * pow(sh, 3) +
                    (1453. + 144. * cl3) * pow(sh, 4) - 693. * pow(sh, 5) +
                    210. * pow(sh, 6) - 21. * pow(sh, 7) -
                    2. * pow(3.141592653589793, 2)*
                    (-603. + 2441. * sh - 3677. * pow(sh, 2) +
                    2457. * pow(sh, 3) - 662. * pow(sh, 4) +
                    52. * pow(sh, 5) - 16. * pow(sh, 6) + 2. * pow(sh, 7))) -
                    lz * (0.5925925925925926 * Li2sh * (6. + sh) *
                    pow(-1 + sh, -3) -
                    0.2962962962962963 * pow(Lsh, 2) * pow(-1 + sh, -2) -
                    7.111111111111111 * lmu * pow(sh, -2) -
                    7.111111111111111 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-1. - 3. * sh + pow(sh, 2)) +
                    0.2962962962962963 * Lsh * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-187. + 566. * sh +
                    3. * (-191. + 4. * Lshb) * pow(sh, 2) +
                    2. * (96. + Lshb) * pow(sh, 3)) -
                    1.1851851851851851 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, -1)*
                    (2. + 8. * pow(sh, 2) - 5. * pow(sh, 3) + pow(sh, 4)) +
                    0.04938271604938271 * pow(-1 + sh, -4) * pow(sh, -2)*
                    (432. - 1728. * sh +
                    (2511. + 8. * pow(3.141592653589793, 2)) *
                    pow(sh, 2) - 2. *
                    (735. + 11. * pow(3.141592653589793, 2)) * pow(sh, 3)\
            + (99. + 2. * pow(3.141592653589793, 2)) *
                    pow(sh, 4) + 225. * pow(sh, 5) - 78. * pow(sh, 6) +
                    9. * pow(sh, 7)))) * pow(z, 2);
            else
                res += pow(z, 2)*(-336.0382986459167 -
                    695.8939576145283 * (1. - sh) -
                    1040.3241576582361 * pow(1. - sh, 2) -
                    1365.7546667417848 * pow(1. - sh, 3) -
                    1671.7824637501126 * pow(1. - sh, 4) +
                    log(muh)*(-3.5555555555555554 +
                    7.111111111111111 * pow(1. - sh, 2) +
                    16.59259259259259 * pow(1. - sh, 3) +
                    27.85185185185185 * pow(1. - sh, 4)) +
                    log(z)*(-21.887216272530303 +
                    9.991951790611958 * (1. - sh) +
                    71.95973563934483 * pow(1. - sh, 2) +
                    151.94549827445954 * pow(1. - sh, 3) +
                    245.72125954180052 * pow(1. - sh, 4) +
                    log(muh)*(7.111111111111111 +
                    14.222222222222221 * (1. - sh) +
                    21.333333333333332 * pow(1. - sh, 2) +
                    28.444444444444443 * pow(1. - sh, 3) +
                    35.55555555555556 * pow(1. - sh, 4))) +
                    (27.65432098765432 + 55.67901234567901 * (1. - sh) +
                    83.6 * pow(1. - sh, 2) +
                    111.39753086419753 * pow(1. - sh, 3) +
                    139.20987654320987 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (5 <= maxpow) {
            if (sh < .900001)
                res += -0.05267489711934156 * pow(3.141592653589793, 2) * pow(sh, -3)*
                (3. + 14. * sh + 3. * pow(sh, 2)) * pow(z, 2.5);
            else
                res += (-10.397607928719653 - 20.795215857439306 * (1. - sh) -
                    32.75246497546691 * pow(1. - sh, 2) -
                    46.26935528280246 * pow(1. - sh, 3) -
                    61.34588677944595 * pow(1. - sh, 4)) * pow(z, 2.5);
        }

        if (6 <= maxpow) {
            if (sh < .900001)
                res += (-0.7901234567901234 * Li3shb * (2. + sh) * pow(-1 + sh, -4) -
                    lmu * (-6.320987654320987 * pow(sh, -3) +
                    9.481481481481481 * Lsh * pow(sh, -3)) +
                    1.1851851851851851 * Li3sh * pow(-1 + sh, -3) * pow(sh, -1) -
                    0.3950617283950617 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -1) + 0.4748866777914446 * pow(-1 + sh, -4) *
                    pow(sh, -1)*(3. + sh + 2. * pow(sh, 2)) -
                    0.06584362139917696 * Li2sh * pow(-1 + sh, -4) * pow(sh, -3)*
                    (-36. + 144. * sh - 234. * pow(sh, 2) + 208. * pow(sh, 3) -
                    73. * pow(sh, 4) + 9. * pow(sh, 5)) -
                    0.01646090534979424 * pow(Lsh, 2) * pow(-1 + sh, -5) *
                    pow(sh, -4)*(-12. + 3682. * sh - 18347. * pow(sh, 2) +
                    (36889. + 36. * Lshb) * pow(sh, 3) -
                    2. * (18563. + 36. * Lshb) * pow(sh, 4) +
                    4. * (4679. + 9. * Lshb) * pow(sh, 5) - 3748. * pow(sh, 6) -
                    18. * pow(sh, 7)) +
                    0.3950617283950617 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (16. - 22. * sh - 171. * pow(sh, 2) + 336. * pow(sh, 3) -
                    300. * pow(sh, 4) + 141. * pow(sh, 5) - 33. * pow(sh, 6) +
                    3. * pow(sh, 7)) - pow(lz, 2)*
                    (-0.3950617283950617 * Lsh * (2. + sh) * pow(-1 + sh, -4) +
                    0.01646090534979424 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (-3. + 3685. * sh - 11046. * pow(sh, 2) +
                    11061. * pow(sh, 3) - 3604. * pow(sh, 4) -
                    132. * pow(sh, 5) + 321. * pow(sh, 6) -
                    378. * pow(sh, 7) + 222. * pow(sh, 8) -
                    60. * pow(sh, 9) + 6. * pow(sh, 10))) -
                    0.13168724279835392 * ash * pow(-1 + sh, -3)*
                    (-8. - 21. * sh - 17. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) * pow(-((-4 + sh) * sh), 0.5)\
      - Lsh * (-2.3703703703703702 * (2. + sh) * pow(ash, 2) *
                    pow(-1 + sh, -4) +
                    1.1851851851851851 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -1) + 0.0054869684499314125 * pow(-1 + sh, -4) *
                    pow(sh, -4)*(30. + (12452. - 432. * Lshb) * sh +
                    2. * (-25315. + 864. * Lshb) * pow(sh, 2) +
                    36. * (-78. * Lshb +
                    5. * (424. + pow(3.141592653589793, 2))) *
                    pow(sh, 3) + (-50317. + 2496. * Lshb -
                    36. * pow(3.141592653589793, 2)) * pow(sh, 4) +
                    (12496. - 876. * Lshb +
                    72. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    27. * (3. + 4. * Lshb) * pow(sh, 6)) +
                    0.3950617283950617 * ash * pow(-1 + sh, -3)*
                    (4. + 15. * sh - 29. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) *
                    pow(-((-4 + sh) * sh), 0.5)) -
                    lz * (0.7901234567901234 * Li2sh * (2. + sh) *
                    pow(-1 + sh, -4) -
                    4.7407407407407405 * (2. + sh) * pow(ash, 2) *
                    pow(-1 + sh, -4) -
                    9.481481481481481 * lmu * pow(sh, -3) -
                    0.5925925925925926 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -1) + 0.03292181069958848 * Lsh *
                    pow(-1 + sh, -4) * pow(sh, -4)*
                    (-6. + 3682. * sh - 14713. * pow(sh, 2) +
                    22170. * pow(sh, 3) +
                    6. * (-2491. + 8. * Lshb) * pow(sh, 4) +
                    6. * (631. + 4. * Lshb) * pow(sh, 5) - 9. * pow(sh, 6)) +
                    0.0054869684499314125 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (15. + 12482. * sh - 37473. * pow(sh, 2) +
                    37278. * pow(sh, 3) - 12305. * pow(sh, 4) +
                    498. * pow(sh, 5) - 1215. * pow(sh, 6) +
                    606. * pow(sh, 7) - 84. * pow(sh, 8) - 24. * pow(sh, 9) +
                    6. * pow(sh, 10)) +
                    0.7901234567901234 * ash * pow(-1 + sh, -3)*
                    (4. + 15. * sh - 29. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) *
                    pow(-((-4 + sh) * sh), 0.5)) -
                    0.0027434842249657062 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (19. + 31332. * sh - 125971. * pow(sh, 2) +
                    189649. * pow(sh, 3) - 94. * pow(sh, 11) +
                    6. * pow(3.141592653589793, 2)*
                    (-6. + 3838. * sh - 15355. * pow(sh, 2) +
                    23258. * pow(sh, 3) - 15790. * pow(sh, 4) +
                    4134. * pow(sh, 5) - 299. * pow(sh, 6) +
                    440. * pow(sh, 7) - 400. * pow(sh, 8) +
                    188. * pow(sh, 9) - 44. * pow(sh, 10) + 4. * pow(sh, 11))\
         + pow(sh, 4)*(-125525. + 1728. * cl3 -
                    576. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    12. * pow(sh, 5)*(2563. + 72. * cl3 -
                    132. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    2. * pow(sh, 10)*(451. +
                    72. * cl2 * pow(-((-4 + sh) * sh), 0.5)) -
                    4. * pow(sh, 9)*(791. +
                    324. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    pow(sh, 8)*(4810. +
                    4464. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    pow(sh, 6)*(-343. +
                    6336. * cl2 * pow(-((-4 + sh) * sh), 0.5)) -
                    pow(sh, 7)*(2371. +
                    7488. * cl2 * pow(-((-4 + sh) * sh), 0.5)))) * pow(z, 3);
            else
                res += pow(z, 3)*(-691.9182670329545 -
                    2017.613655726338 * (1. - sh) -
                    3881.550454689942 * pow(1. - sh, 2) -
                    6209.7474017909 * pow(1. - sh, 3) -
                    8925.087722919276 * pow(1. - sh, 4) +
                    log(muh)*(6.320987654320987 +
                    28.444444444444443 * (1. - sh) +
                    71.11111111111111 * pow(1. - sh, 2) +
                    137.4814814814815 * pow(1. - sh, 3) +
                    229.92592592592592 * pow(1. - sh, 4)) +
                    log(z)*(65.87937511351353 +
                    322.6369826409675 * (1. - sh) +
                    831.0074785910778 * pow(1. - sh, 2) +
                    1624.0261584651576 * pow(1. - sh, 3) +
                    2734.9197954441984 * pow(1. - sh, 4) +
                    log(muh)*(9.481481481481481 +
                    28.444444444444443 * (1. - sh) +
                    56.888888888888886 * pow(1. - sh, 2) +
                    94.81481481481481 * pow(1. - sh, 3) +
                    142.22222222222223 * pow(1. - sh, 4))) +
                    (59.7037037037037 + 181.14567901234568 * (1. - sh) +
                    362.4493827160494 * pow(1. - sh, 2) +
                    603.5673133450912 * pow(1. - sh, 3) +
                    905.1428571428571 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (7 <= maxpow) {
            if (sh < .900001)
                res += -0.004514991181657848 * pow(3.141592653589793, 2) * pow(sh, -5)*
                (15. + 108. * sh + 314. * pow(sh, 2) + 108. * pow(sh, 3) +
                    15. * pow(sh, 4)) * pow(z, 3.5);
            else
                res += (-24.954259028927165 - 74.8627770867815 * (1. - sh) -
                    157.21183188224114 * pow(1. - sh, 2) -
                    279.48770112398427 * pow(1. - sh, 3) -
                    449.8450801732495 * pow(1. - sh, 4)) * pow(z, 3.5);
        }

        if (8 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (-19.555555555555557 * pow(sh, -4) +
                    21.333333333333332 * Lsh * pow(sh, -4)) -
                    2.374433388957223 * pow(-1 + sh, -3) * pow(sh, -2) +
                    1.9753086419753085 * Li3sh * pow(-1 + sh, -3) * pow(sh, -2) -
                    0.6584362139917695 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -2) - 0.09876543209876543 * Li2sh *
                    pow(-1 + sh, -5) * pow(sh, -4)*
                    (54. - 268. * sh + 544. * pow(sh, 2) - 570. * pow(sh, 3) +
                    292. * pow(sh, 4) - 58. * pow(sh, 5) - 6. * pow(sh, 6) +
                    3. * pow(sh, 7)) - 1.7777777777777777 * sh * pow(ash, 2) *
                    pow(-1 + sh, -4)*(-24. - 3. * sh + 174. * pow(sh, 2) -
                    390. * pow(sh, 3) + 411. * pow(sh, 4) - 241. * pow(sh, 5) +
                    80. * pow(sh, 6) - 14. * pow(sh, 7) + pow(sh, 8)) -
                    0.01646090534979424 * pow(Lsh, 2) * pow(-1 + sh, -6) *
                    pow(sh, -6)*(6. + 14. * sh - 9747. * pow(sh, 2) +
                    58077. * pow(sh, 3) -
                    3. * (48391. + 20. * Lshb) * pow(sh, 4) +
                    3. * (64669. + 60. * Lshb) * pow(sh, 5) -
                    15. * (9737. + 12. * Lshb) * pow(sh, 6) +
                    (58789. + 60. * Lshb) * pow(sh, 7) - 9906. * pow(sh, 8) +
                    27. * pow(sh, 9) - 9. * pow(sh, 10)) +
                    0.00823045267489712 * pow(lz, 2) * pow(sh, -6)*
                    (-3. - 25. * sh + 19344. * pow(sh, 2) + 73. * pow(sh, 4) +
                    3. * pow(sh, 5) + 180. * pow(sh, 6) + 36. * pow(sh, 7) -
                    738. * pow(sh, 8) + 612. * pow(sh, 9) - 180. * pow(sh, 10) +
                    18. * pow(sh, 11)) +
                    0.09876543209876543 * ash * pow(-1 + sh, -3)*
                    (-6. - 41. * sh - 239. * pow(sh, 2) + 671. * pow(sh, 3) -
                    680. * pow(sh, 4) + 329. * pow(sh, 5) - 77. * pow(sh, 6) +
                    7. * pow(sh, 7)) * pow(-((-4 + sh) * sh), 0.5) -
                    lz * (-21.333333333333332 * lmu * pow(sh, -4) -
                    0.9876543209876543 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -2) - 0.03292181069958848 * Lsh *
                    pow(-1 + sh, -5) * pow(sh, -6)*
                    (-3. - 10. * sh + 9722. * pow(sh, 2) -
                    48430. * pow(sh, 3) + 96898. * pow(sh, 4) -
                    97142. * pow(sh, 5) + 48736. * pow(sh, 6) -
                    9804. * pow(sh, 7) + 3. * pow(sh, 8) + 3. * pow(sh, 9)) -
                    0.00027434842249657066 * pow(-1 + sh, -4) * pow(sh, -6)*
                    (105. + 55. * sh + 963530. * pow(sh, 2) -
                    3.85233e6 * pow(sh, 3) + 5.76189e6 * pow(sh, 4) -
                    3.806202e6 * pow(sh, 5) + 923844. * pow(sh, 6) +
                    1154. * pow(sh, 7) + 54349. * pow(sh, 8) -
                    76131. * pow(sh, 9) + 4716. * pow(sh, 10) +
                    82440. * pow(sh, 11) - 83970. * pow(sh, 12) +
                    36900. * pow(sh, 13) - 7740. * pow(sh, 14) +
                    630. * pow(sh, 15)) -
                    1.1851851851851851 * ash *
                    (-6. - 13. * sh + 20. * pow(sh, 2) - 8. * pow(sh, 3) +
                    pow(sh, 4)) * pow(-((-4 + sh) * sh), 0.5)) -
                    Lsh * (1.9753086419753085 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -2) + 0.0027434842249657062 * pow(-1 + sh, -5) *
                    pow(sh, -6)*(-21. + 10. * sh +
                    2. * (-48097. + 972. * Lshb) * pow(sh, 2) +
                    (483970. - 9648. * Lshb) * pow(sh, 3) +
                    (-972667. + 19584. * Lshb -
                    600. * pow(3.141592653589793, 2)) * pow(sh, 4) +
                    8. * (122107. - 2565. * Lshb +
                    150. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    2. * (-245429. + 5256. * Lshb -
                    300. * pow(3.141592653589793, 2)) * pow(sh, 6) +
                    (98142. - 2088. * Lshb) * pow(sh, 7) -
                    6. * (7. + 36. * Lshb) * pow(sh, 8) +
                    6. * (5. + 18. * Lshb) * pow(sh, 9)) -
                    0.5925925925925926 * ash *
                    (-6. - 13. * sh + 20. * pow(sh, 2) - 8. * pow(sh, 3) +
                    pow(sh, 4)) * pow(-((-4 + sh) * sh), 0.5)) -
                    4.572473708276177e-6 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (-1200. * pow(3.141592653589793, 2)*
                    (-9. - 30. * sh + 30192. * pow(sh, 2) -
                    150534. * pow(sh, 3) + 301774. * pow(sh, 4) -
                    303542. * pow(sh, 5) + 152986. * pow(sh, 6) -
                    30076. * pow(sh, 7) - 1033. * pow(sh, 8) -
                    2857. * pow(sh, 9) + 10122. * pow(sh, 10) -
                    14418. * pow(sh, 11) + 11736. * pow(sh, 12) -
                    5778. * pow(sh, 13) + 1692. * pow(sh, 14) -
                    270. * pow(sh, 15) + 18. * pow(sh, 16)) +
                    (-1. + sh)*(2775. - 2775. * sh +
                    1.836255e7 * pow(sh, 2) - 7.415055e7 * pow(sh, 3) +
                    1.1249425e8 * pow(sh, 4) - 7.6337698e7 * pow(sh, 5) +
                    86850. * pow(sh, 15) +
                    pow(sh, 8)*(4.883011e6 -
                    4.6656e6 * cl2 * pow(-((-4 + sh) * sh), 0.5)) -
                    900. * pow(sh, 14)*
                    (1249. + 144. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    900. * pow(sh, 13)*
                    (6445. + 1728. * cl2 * pow(-((-4 + sh) * sh), 0.5)) -
                    4050. * pow(sh, 12)*
                    (3755. + 1856. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    4500. * pow(sh, 11)*
                    (4681. + 4176. * cl2 * pow(-((-4 + sh) * sh), 0.5)) +
                    12. * pow(sh, 6)*
                    (1.746143e6 +
                    64800. * cl2 * pow(-((-4 + sh) * sh), 0.5)) -
                    2. * pow(sh, 7)*(1.393817e6 +
                    712800. * cl2 * pow(-((-4 + sh) * sh), 0.5)) -
                    36. * pow(sh, 10)*
                    (374591. + 716400. * cl2 * pow(-((-4 + sh) * sh), 0.5))
                    + 3. * pow(sh, 9)*
                    (-523. + 6.1344e6 * cl2 * pow(-((-4 + sh) * sh), 0.5)))
                    )) * pow(z, 4);
            else
                res += pow(z, 4)*(-1672.4687901566804 -
                    6425.515582048289 * (1. - sh) -
                    15411.783043279445 * pow(1. - sh, 2) -
                    29568.2502704632 * pow(1. - sh, 3) -
                    49534.42028818623 * pow(1. - sh, 4) +
                    log(muh)*(19.555555555555557 +
                    99.55555555555556 * (1. - sh) +
                    291.55555555555554 * pow(1. - sh, 2) +
                    654.2222222222222 * pow(1. - sh, 3) +
                    1251.5555555555557 * pow(1. - sh, 4)) +
                    log(z)*(253.5498382001439 +
                    1369.6655601827902 * (1. - sh) +
                    4072.304539664025 * pow(1. - sh, 2) +
                    9174.433775454903 * pow(1. - sh, 3) +
                    17618.760992657026 * pow(1. - sh, 4) +
                    log(muh)*(21.333333333333332 +
                    85.33333333333333 * (1. - sh) +
                    213.33333333333334 * pow(1. - sh, 2) +
                    426.6666666666667 * pow(1. - sh, 3) +
                    746.6666666666666 * pow(1. - sh, 4))) +
                    (159.01234567901236 + 638.8148148148148 * (1. - sh) +
                    1591.9506172839506 * pow(1. - sh, 2) +
                    3177.448559670782 * pow(1. - sh, 3) +
                    5557.119341563786 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (9 <= maxpow) {
            if (sh < .900001)
                res += -0.0010749979003947259 * pow(3.141592653589793, 2) * pow(sh, -7)*
                (35. + 330. * sh + 1389. * pow(sh, 2) + 3212. * pow(sh, 3) +
                    1389. * pow(sh, 4) + 330. * pow(sh, 5) + 35. * pow(sh, 6)) *
                pow(z, 4.5);
            else
                res += (-71.2978829397919 - 285.1915317591676 * (1. - sh) -
                    745.0628767208254 * pow(1. - sh, 2) -
                    1586.3778954103698 * pow(1. - sh, 3) -
                    2982.415906901117 * pow(1. - sh, 4)) * pow(z, 4.5);
        }

        if (10 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (-58.785185185185185 * pow(sh, -5) +
                    56.888888888888886 * Lsh * pow(sh, -5)) -
                    4.986310116810168 * pow(-1 + sh, -3) * pow(sh, -3) +
                    4.148148148148148 * Li3sh * pow(-1 + sh, -3) * pow(sh, -3) -
                    1.382716049382716 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -3) - 0.3950617283950617 * cl2 * sh * sqrt4sh * sqrtsh *
                    (44. + 108. * sh - 221. * pow(sh, 2) + 132. * pow(sh, 3) -
                    33. * pow(sh, 4) + 3. * pow(sh, 5)) -
                    0.03950617283950617 * ash * sh * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3)*(-496. + 326. * sh + 6147. * pow(sh, 2) -
                    16495. * pow(sh, 3) + 18680. * pow(sh, 4) -
                    11251. * pow(sh, 5) + 3760. * pow(sh, 6) -
                    658. * pow(sh, 7) + 47. * pow(sh, 8)) -
                    0.19753086419753085 * Li2sh * pow(-1 + sh, -6) * pow(sh, -5)*
                    (-72. + 429. * sh - 1073. * pow(sh, 2) + 1442. * pow(sh, 3) -
                    1092. * pow(sh, 4) + 435. * pow(sh, 5) - 47. * pow(sh, 6) -
                    6. * pow(sh, 7) - pow(sh, 8) + pow(sh, 9)) +
                    1.1851851851851851 * sh * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-24. + 162. * sh + 114. * pow(sh, 2) - 1809. * pow(sh, 3) +
                    4224. * pow(sh, 4) - 4957. * pow(sh, 5) +
                    3423. * pow(sh, 6) - 1445. * pow(sh, 7) +
                    366. * pow(sh, 8) - 51. * pow(sh, 9) + 3. * pow(sh, 10)) -
                    Lsh * (4.148148148148148 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -3) + 0.3950617283950617 * ash * sh * sqrt4sh *
                    sqrtsh * (44. + 108. * sh - 221. * pow(sh, 2) +
                    132. * pow(sh, 3) - 33. * pow(sh, 4) + 3. * pow(sh, 5)) +
                    0.00005486968449931413 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (486. - 108. * sh - 8742. * pow(sh, 2) +
                    (1.6072738e7 - 259200. * Lshb) * pow(sh, 3) +
                    6. * (-1.6103209e7 + 257400. * Lshb) * pow(sh, 4) +
                    24. * (1.0092821e7 - 160950. * Lshb +
                    2625. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    4. * (-8.0991623e7 + 1.2978e6 * Lshb -
                    47250. * pow(3.141592653589793, 2)) * pow(sh, 6) +
                    6. * (4.0636147e7 - 655200. * Lshb +
                    31500. * pow(3.141592653589793, 2)) * pow(sh, 7) +
                    3. * (-3.2644121e7 + 522000. * Lshb -
                    21000. * pow(3.141592653589793, 2)) * pow(sh, 8) -
                    2. * (-8.202737e6 + 84600. * Lshb) * pow(sh, 9) -
                    900. * (17. + 24. * Lshb) * pow(sh, 10) -
                    450. * (-1. + 8. * Lshb) * pow(sh, 11) +
                    75. * (7. + 48. * Lshb) * pow(sh, 12))) -
                    0.0016460905349794238 * pow(Lsh, 2) * pow(-1 + sh, -7) *
                    pow(sh, -8)*(-36. - 126. * sh + 84. * pow(sh, 2) +
                    299648. * pow(sh, 3) - 2.087099e6 * pow(sh, 4) +
                    60. * (104197. + 21. * Lshb) * pow(sh, 5) -
                    2. * (5.211467e6 + 2520. * Lshb) * pow(sh, 6) +
                    56. * (186416. + 135. * Lshb) * pow(sh, 7) -
                    12. * (523459. + 420. * Lshb) * pow(sh, 8) +
                    (2.104169e6 + 1260. * Lshb) * pow(sh, 9) -
                    303404. * pow(sh, 10) + 300. * pow(sh, 11) +
                    120. * pow(sh, 12) - 60. * pow(sh, 13)) +
                    0.0008230452674897119 * pow(lz, 2) * pow(sh, -8)*
                    (-18. - 189. * sh - 903. * pow(sh, 2) +
                    594928. * pow(sh, 3) + 630. * pow(sh, 4) +
                    1383. * pow(sh, 5) + 1839. * pow(sh, 6) + 18. * pow(sh, 7) +
                    3120. * pow(sh, 8) + 8160. * pow(sh, 9) +
                    1440. * pow(sh, 10) - 46560. * pow(sh, 11) +
                    51720. * pow(sh, 12) - 23040. * pow(sh, 13) +
                    4680. * pow(sh, 14) - 360. * pow(sh, 15)) -
                    lz * (-56.888888888888886 * lmu * pow(sh, -5) -
                    2.074074074074074 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -3) + 0.7901234567901234 * ash * sh * sqrt4sh *
                    sqrtsh * (44. + 108. * sh - 221. * pow(sh, 2) +
                    132. * pow(sh, 3) - 33. * pow(sh, 4) + 3. * pow(sh, 5)) -
                    0.0032921810699588477 * Lsh * pow(-1 + sh, -6) *
                    pow(sh, -8)*(18. + 81. * sh + 39. * pow(sh, 2) -
                    299147. * pow(sh, 3) + 1.788834e6 * pow(sh, 4) -
                    4.467993e6 * pow(sh, 5) + 5.959219e6 * pow(sh, 6) -
                    4.474299e6 * pow(sh, 7) + 1.792497e6 * pow(sh, 8) -
                    297944. * pow(sh, 9) - 450. * pow(sh, 10) +
                    90. * pow(sh, 11) + 15. * pow(sh, 12)) +
                    7.838526357044876e-6 * pow(-1 + sh, -5) * pow(sh, -8)*
                    (1701. + 1323. * sh - 29274. * pow(sh, 2) +
                    1.12541443e8 * pow(sh, 3) -
                    5.61871835e8 * pow(sh, 4) +
                    1.121615551e9 * pow(sh, 5) -
                    1.117743382e9 * pow(sh, 6) +
                    5.54683001e8 * pow(sh, 7) -
                    1.07408773e8 * pow(sh, 8) - 4.03983e6 * pow(sh, 9) +
                    4.371768e6 * pow(sh, 10) + 4.551324e6 * pow(sh, 11) -
                    1.1897697e7 * pow(sh, 12) - 1.323264e7 * pow(sh, 13) +
                    6.277908e7 * pow(sh, 14) - 8.508528e7 * pow(sh, 15) +
                    6.212682e7 * pow(sh, 16) - 2.701314e7 * pow(sh, 17) +
                    6.98418e6 * pow(sh, 18) - 990360. * pow(sh, 19) +
                    59220. * pow(sh, 20))) -
                    2.7994736989445985e-8 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (161406. - 318843. * sh - 1.910657e6 * pow(sh, 2) +
                    2.6587841e7 * pow(sh, 3) - 4.35567027e8 * pow(sh, 4) +
                    2.014488392e9 * pow(sh, 5) - 4.239785466e9 * pow(sh, 6) +
                    4.472946066e9 * pow(sh, 7) - 1.480821324e9 * pow(sh, 8) -
                    2.199797883e9 * pow(sh, 9) +
                    2.944201467e9 * pow(sh, 10) +
                    1.246759469e9 * pow(sh, 11) -
                    2.466843039e9 * pow(sh, 12) -
                    1.8171607842e10 * pow(sh, 13) +
                    6.053910752e10 * pow(sh, 14) -
                    8.996385496e10 * pow(sh, 15) +
                    7.96292826e10 * pow(sh, 16) -
                    4.509057616e10 * pow(sh, 17) +
                    1.647058952e10 * pow(sh, 18) -
                    3.74875284e9 * pow(sh, 19) + 4.8245988e8 * pow(sh, 20) -
                    2.674812e7 * pow(sh, 21) +
                    58800. * pow(3.141592653589793, 2)*
                    (-18. - 81. * sh - 39. * pow(sh, 2) +
                    308147. * pow(sh, 3) - 1.843944e6 * pow(sh, 4) +
                    4.610871e6 * pow(sh, 5) - 6.160013e6 * pow(sh, 6) +
                    4.635393e6 * pow(sh, 7) - 1.862435e6 * pow(sh, 8) +
                    312614. * pow(sh, 9) + 3132. * pow(sh, 10) -
                    3736. * pow(sh, 11) - 77479. * pow(sh, 12) +
                    318588. * pow(sh, 13) - 608560. * pow(sh, 14) +
                    702440. * pow(sh, 15) - 529920. * pow(sh, 16) +
                    267160. * pow(sh, 17) - 89120. * pow(sh, 18) +
                    18840. * pow(sh, 19) - 2280. * pow(sh, 20) +
                    120. * pow(sh, 21)))) * pow(z, 5);
            else
                res += pow(z, 5)*(-4875.039604802492 -
                    23394.026843086856 * (1. - sh) -
                    67666.42652379921 * pow(1. - sh, 2) -
                    152266.3652960926 * pow(1. - sh, 3) -
                    292874.8144929396 * pow(1. - sh, 4) +
                    log(muh)*(58.785185185185185 +
                    350.81481481481484 * (1. - sh) +
                    1194.6666666666667 * pow(1. - sh, 2) +
                    3072. * pow(1. - sh, 3) +
                    6641.777777777777 * pow(1. - sh, 4)) +
                    log(z)*(847.677812246958 +
                    5397.215321438122 * (1. - sh) +
                    18627.480751808722 * pow(1. - sh, 2) +
                    48121.18079162945 * pow(1. - sh, 3) +
                    104649.22541796633 * pow(1. - sh, 4) +
                    log(muh)*(56.888888888888886 +
                    284.44444444444446 * (1. - sh) +
                    853.3333333333334 * pow(1. - sh, 2) +
                    1991.111111111111 * pow(1. - sh, 3) +
                    3982.222222222222 * pow(1. - sh, 4))) +
                    (491.23292181069957 +
                    2460.5102880658437 * (1. - sh) +
                    7344.419753086419 * pow(1. - sh, 2) +
                    17100.213991769546 * pow(1. - sh, 3) +
                    34182.45267489712 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (11 <= maxpow) {
            if (sh < .900001)
                res += -0.00007600995255316243 * pow(3.141592653589793, 2) * pow(sh, -9)*
                (315. + 3640. * sh + 19380. * pow(sh, 2) + 62088. * pow(sh, 3) +
                    124834. * pow(sh, 4) + 62088. * pow(sh, 5) +
                    19380. * pow(sh, 6) + 3640. * pow(sh, 7) + 315. * pow(sh, 8)) *
                pow(z, 5.5);
            else
                res += (-221.8156358126859 - 1109.0781790634296 * (1. - sh) -
                    3460.3239186779006 * pow(1. - sh, 2) -
                    8562.083542369677 * pow(1. - sh, 3) -
                    18357.620459597754 * pow(1. - sh, 4)) * pow(z, 5.5);
        }

        if (12 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (-182.91358024691357 * pow(sh, -6) +
                    165.92592592592592 * Lsh * pow(sh, -6)) -
                    11.967144280344405 * pow(-1 + sh, -3) * pow(sh, -4) +
                    9.955555555555556 * Li3sh * pow(-1 + sh, -3) * pow(sh, -4) -
                    3.3185185185185184 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -4) + 0.4609053497942387 * cl2 * sh * sqrt4sh * sqrtsh *
                    (20. - 194. * sh - 657. * pow(sh, 2) + 1581. * pow(sh, 3) -
                    1239. * pow(sh, 4) + 462. * pow(sh, 5) - 84. * pow(sh, 6) +
                    6. * pow(sh, 7)) + 0.0043895747599451305 * ash * sh *
                    sqrt4sh * sqrtsh * pow(-1 + sh, -3)*
                    (-3230. + 42428. * sh + 5415. * pow(sh, 2) -
                    547510. * pow(sh, 3) + 1.454143e6 * pow(sh, 4) -
                    1.806873e6 * pow(sh, 5) + 1.280646e6 * pow(sh, 6) -
                    546171. * pow(sh, 7) + 138714. * pow(sh, 8) -
                    19329. * pow(sh, 9) + 1137. * pow(sh, 10)) -
                    1.382716049382716 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 2)*
                    (210. - 870. * sh - 1395. * pow(sh, 2) +
                    13113. * pow(sh, 3) - 31009. * pow(sh, 4) +
                    39370. * pow(sh, 5) - 30843. * pow(sh, 6) +
                    15585. * pow(sh, 7) - 5091. * pow(sh, 8) +
                    1038. * pow(sh, 9) - 120. * pow(sh, 10) + 6. * pow(sh, 11))\
      - 0.0032921810699588477 * Li2sh * pow(-1 + sh, -7) *
                    pow(sh, -6)*(12600. - 87696. * sh + 262296. * pow(sh, 2) -
                    436590. * pow(sh, 3) + 435240. * pow(sh, 4) -
                    257040. * pow(sh, 5) + 79436. * pow(sh, 6) -
                    8456. * pow(sh, 7) - 360. * pow(sh, 9) + 45. * pow(sh, 11))\
      - Lsh * (9.955555555555556 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -4) - 0.4609053497942387 * ash * sh * sqrt4sh *
                    sqrtsh * (20. - 194. * sh - 657. * pow(sh, 2) +
                    1581. * pow(sh, 3) - 1239. * pow(sh, 4) +
                    462. * pow(sh, 5) - 84. * pow(sh, 6) + 6. * pow(sh, 7)) +
                    0.000010973936899862826 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (-1320. + 96. * sh + 30636. * pow(sh, 2) +
                    70896. * pow(sh, 3) +
                    8. * (-3.4452983e7 + 472500. * Lshb) * pow(sh, 4) -
                    112. * (-1.7229823e7 + 234900. * Lshb) * pow(sh, 5) +
                    6. * (-9.66264881e8 + 1.31148e7 * Lshb -
                    126000. * pow(3.141592653589793, 2)) * pow(sh, 6) +
                    (9.681150074e9 - 1.30977e8 * Lshb +
                    3.024e6 * pow(3.141592653589793, 2)) * pow(sh, 7) +
                    2. * (-4.851617443e9 + 6.5286e7 * Lshb -
                    2.268e6 * pow(3.141592653589793, 2)) * pow(sh, 8) +
                    24. * (2.43237251e8 - 3.213e6 * Lshb +
                    126000. * pow(3.141592653589793, 2)) * pow(sh, 9) +
                    3. * (-6.50704647e8 + 7.9436e6 * Lshb -
                    252000. * pow(3.141592653589793, 2)) * pow(sh, 10)\
            - 60. * (-4.666787e6 + 42280. * Lshb) * pow(sh, 11) -
                    23730. * pow(sh, 12) -
                    60. * (923. + 1800. * Lshb) * pow(sh, 13) +
                    4995. * pow(sh, 14) +
                    135. * (9. + 100. * Lshb) * pow(sh, 15))) -
                    0.0003292181069958848 * pow(Lsh, 2) * pow(-1 + sh, -8) *
                    pow(sh, -10)*(120. + 552. * sh + 120. * pow(sh, 2) -
                    3480. * pow(sh, 3) - 4.90282e6 * pow(sh, 4) +
                    3.912806e7 * pow(sh, 5) -
                    (1.36736083e8 + 15120. * Lshb) * pow(sh, 6) +
                    5. * (5.4670261e7 + 15120. * Lshb) * pow(sh, 7) -
                    70. * (4.883491e6 + 2160. * Lshb) * pow(sh, 8) +
                    40. * (6.845753e6 + 3780. * Lshb) * pow(sh, 9) -
                    10. * (1.3722853e7 + 7560. * Lshb) * pow(sh, 10) +
                    2. * (1.9677013e7 + 7560. * Lshb) * pow(sh, 11) -
                    4.94776e6 * pow(sh, 12) - 1800. * pow(sh, 13) +
                    1800. * pow(sh, 14) + 225. * pow(sh, 15) - 225. * pow(sh, 16)
                    ) + 0.0003292181069958848 * pow(lz, 2) * pow(sh, -10)*
                    (-30. - 378. * sh - 2214. * pow(sh, 2) - 7938. * pow(sh, 3) +
                    4.8772e6 * pow(sh, 4) + 7560. * pow(sh, 5) +
                    6273. * pow(sh, 6) + 13689. * pow(sh, 7) +
                    10908. * pow(sh, 8) + 30. * pow(sh, 9) +
                    20300. * pow(sh, 10) + 27300. * pow(sh, 11) +
                    113400. * pow(sh, 12) + 49700. * pow(sh, 13) -
                    880950. * pow(sh, 14) + 1.19385e6 * pow(sh, 15) -
                    706650. * pow(sh, 16) + 216300. * pow(sh, 17) -
                    33600. * pow(sh, 18) + 2100. * pow(sh, 19)) -
                    lz * (-165.92592592592592 * lmu * pow(sh, -6) -
                    4.977777777777778 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -4) - 0.9218106995884774 * ash * sh * sqrt4sh *
                    sqrtsh * (20. - 194. * sh - 657. * pow(sh, 2) +
                    1581. * pow(sh, 3) - 1239. * pow(sh, 4) +
                    462. * pow(sh, 5) - 84. * pow(sh, 6) + 6. * pow(sh, 7)) -
                    0.0006584362139917696 * Lsh * pow(-1 + sh, -7) *
                    pow(sh, -10)*(-60. - 336. * sh - 396. * pow(sh, 2) +
                    1344. * pow(sh, 3) + 4.900804e6 * pow(sh, 4) -
                    3.4230616e7 * pow(sh, 5) + 1.02572181e8 * pow(sh, 6) -
                    1.70881214e8 * pow(sh, 7) +
                    1.70889596e8 * pow(sh, 8) -
                    1.02558564e8 * pow(sh, 9) +
                    3.4176506e7 * pow(sh, 10) - 4.86782e6 * pow(sh, 11) -
                    2940. * pow(sh, 12) - 1740. * pow(sh, 13) +
                    585. * pow(sh, 14) + 45. * pow(sh, 15)) +
                    1.567705271408975e-6 * pow(-1 + sh, -6) * pow(sh, -10)*
                    (-4620. - 4284. * sh + 102942. * pow(sh, 2) +
                    351078. * pow(sh, 3) - 1.928933146e9 * pow(sh, 4) +
                    1.155219891e10 * pow(sh, 5) -
                    2.8832387178e10 * pow(sh, 6) +
                    3.8356658804e10 * pow(sh, 7) -
                    2.8662297144e10 * pow(sh, 8) +
                    1.1385924988e10 * pow(sh, 9) -
                    1.88384127e9 * pow(sh, 10) +
                    5.9056617e7 * pow(sh, 11) -
                    8.9385341e7 * pow(sh, 12) +
                    1.01542571e8 * pow(sh, 13) -
                    3.36952887e8 * pow(sh, 14) +
                    4.6151941e8 * pow(sh, 15) +
                    1.1490745e9 * pow(sh, 16) -
                    5.1849126e9 * pow(sh, 17) +
                    8.94761595e9 * pow(sh, 18) -
                    9.1281316e9 * pow(sh, 19) +
                    6.0729627e9 * pow(sh, 20) -
                    2.7087795e9 * pow(sh, 21) + 8.039283e8 * pow(sh, 22) -
                    1.522416e8 * pow(sh, 23) + 1.66278e7 * pow(sh, 24) -
                    795900. * pow(sh, 25))) -
                    1.244210532864266e-9 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (-1.60524e6 + 3.372768e6 * sh + 2.1255318e7 * pow(sh, 2) -
                    5.1364152e7 * pow(sh, 3) +
                    3.79257522168e11 * pow(sh, 4) -
                    2.633399785632e12 * pow(sh, 5) +
                    7.825640856201e12 * pow(sh, 6) -
                    1.2900120410724e13 * pow(sh, 7) +
                    1.2750237623886e13 * pow(sh, 8) -
                    7.584725099624e12 * pow(sh, 9) +
                    2.529935410926e12 * pow(sh, 10) -
                    2.91800208364e11 * pow(sh, 11) -
                    2.09548894394e11 * pow(sh, 12) +
                    3.42677229216e11 * pow(sh, 13) -
                    7.84252942969e11 * pow(sh, 14) +
                    7.91328639346e11 * pow(sh, 15) +
                    3.49537340577e12 * pow(sh, 16) -
                    1.51956042427e13 * pow(sh, 17) +
                    2.91706462341e13 * pow(sh, 18) -
                    3.468763704735e13 * pow(sh, 19) +
                    2.790223133985e13 * pow(sh, 20) -
                    1.564098014115e13 * pow(sh, 21) +
                    6.1223554161e12 * pow(sh, 22) -
                    1.63963647855e12 * pow(sh, 23) +
                    2.859293178e11 * pow(sh, 24) -
                    2.92020939e10 * pow(sh, 25) + 1.3226913e9 * pow(sh, 26) -
                    88200. * pow(3.141592653589793, 2)*
                    (-180. - 1008. * sh - 1188. * pow(sh, 2) +
                    4032. * pow(sh, 3) + 1.5093012e7 * pow(sh, 4) -
                    1.05478968e8 * pow(sh, 5) +
                    3.16319451e8 * pow(sh, 6) -
                    5.27535714e8 * pow(sh, 7) +
                    5.28275796e8 * pow(sh, 8) -
                    3.17556564e8 * pow(sh, 9) +
                    1.05971306e8 * pow(sh, 10) -
                    1.4919188e7 * pow(sh, 11) - 564648. * pow(sh, 12) +
                    1.515872e6 * pow(sh, 13) - 1.613573e6 * pow(sh, 14) -
                    1.0017483e7 * pow(sh, 15) + 5.154742e7 * pow(sh, 16) -
                    1.211917e8 * pow(sh, 17) + 1.785651e8 * pow(sh, 18) -
                    1.800631e8 * pow(sh, 19) + 1.286215e8 * pow(sh, 20) -
                    6.57363e7 * pow(sh, 21) + 2.38644e7 * pow(sh, 22) -
                    5.9997e6 * pow(sh, 23) + 991200. * pow(sh, 24) -
                    96600. * pow(sh, 25) + 4200. * pow(sh, 26)))) * pow(z, 6);
            else
                res += pow(z, 6)*(-15489.003566799385 -
                    89232.71889975584 * (1. - sh) -
                    302596.6493265383 * pow(1. - sh, 2) -
                    781979.762945469 * pow(1. - sh, 3) -
                    1.6992401790855133e6 * pow(1. - sh, 4) +
                    log(muh)*(182.91358024691357 +
                    1263.4074074074074 * (1. - sh) +
                    4919.7037037037035 * pow(1. - sh, 2) +
                    14280.691358024691 * pow(1. - sh, 3) +
                    34454.51851851852 * pow(1. - sh, 4)) +
                    log(z)*(2906.463936705608 +
                    21474.23376628666 * (1. - sh) +
                    84464.70442803907 * pow(1. - sh, 2) +
                    246235.5920127741 * pow(1. - sh, 3) +
                    598321.9180693374 * pow(1. - sh, 4) +
                    log(muh)*(165.92592592592592 +
                    995.5555555555555 * (1. - sh) +
                    3484.4444444444443 * pow(1. - sh, 2) +
                    9291.851851851852 * pow(1. - sh, 3) +
                    20906.666666666668 * pow(1. - sh, 4))) +
                    (1615.4238683127571 + 9691.876543209877 * (1. - sh) +
                    33706.74567901235 * pow(1. - sh, 2) +
                    89710.5086419753 * pow(1. - sh, 3) +
                    201778.22222222222 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (13 <= maxpow) {
            if (sh < .900001)
                res += -0.000023919215838407757 * pow(3.141592653589793, 2) *
                pow(sh, -11)*(693. + 9450. * sh + 60305. * pow(sh, 2) +
                    238200. * pow(sh, 3) + 642234. * pow(sh, 4) +
                    1.173308e6 * pow(sh, 5) + 642234. * pow(sh, 6) +
                    238200. * pow(sh, 7) + 60305. * pow(sh, 8) +
                    9450. * pow(sh, 9) + 693. * pow(sh, 10)) * pow(z, 6.5);
            else
                res += (-725.9420808415176 - 4355.652485049105 * (1. - sh) -
                    15789.240258303007 * pow(1. - sh, 2) -
                    44463.95245154296 * pow(1. - sh, 3) -
                    106907.93465535706 * pow(1. - sh, 4)) * pow(z, 6.5);
        }

        if (14 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (-587.9873015873015 * pow(sh, -7) +
                    512. * Lsh * pow(sh, -7)) -
                    31.342520734235343 * pow(-1 + sh, -3) * pow(sh, -5) +
                    26.074074074074073 * Li3sh * pow(-1 + sh, -3) * pow(sh, -5) -
                    8.691358024691358 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -5) - 0.7111111111111111 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-204. + 654. * sh + 3621. * pow(sh, 2) -
                    9390. * pow(sh, 3) + 8928. * pow(sh, 4) -
                    4384. * pow(sh, 5) + 1190. * pow(sh, 6) -
                    170. * pow(sh, 7) + 10. * pow(sh, 8)) -
                    0.011287477954144622 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 2)*
                    (23244. - 145995. * sh - 135165. * pow(sh, 2) +
                    2.214474e6 * pow(sh, 3) - 5.812671e6 * pow(sh, 4) +
                    7.761562e6 * pow(sh, 5) - 6.239858e6 * pow(sh, 6) +
                    3.192422e6 * pow(sh, 7) - 1.048133e6 * pow(sh, 8) +
                    214001. * pow(sh, 9) - 24740. * pow(sh, 10) +
                    1237. * pow(sh, 11)) -
                    0.11851851851851852 * Li2sh * pow(-1 + sh, -8) * pow(sh, -7)*
                    (-1080. + 8600. * sh - 29988. * pow(sh, 2) +
                    59752. * pow(sh, 3) - 74250. * pow(sh, 4) +
                    58630. * pow(sh, 5) - 28380. * pow(sh, 6) +
                    7472. * pow(sh, 7) - 698. * pow(sh, 8) - 10. * pow(sh, 11) +
                    pow(sh, 12) + pow(sh, 13)) +
                    2.1333333333333333 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 2)*(60. - 1390. * sh + 3920. * pow(sh, 2) +
                    11563. * pow(sh, 3) - 80966. * pow(sh, 4) +
                    191832. * pow(sh, 5) - 258720. * pow(sh, 6) +
                    224115. * pow(sh, 7) - 130416. * pow(sh, 8) +
                    51582. * pow(sh, 9) - 13684. * pow(sh, 10) +
                    2330. * pow(sh, 11) - 230. * pow(sh, 12) + 10. * pow(sh, 13))
                    - Lsh * (26.074074074074073 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -5) + 0.7111111111111111 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-204. + 654. * sh + 3621. * pow(sh, 2) -
                    9390. * pow(sh, 3) + 8928. * pow(sh, 4) -
                    4384. * pow(sh, 5) + 1190. * pow(sh, 6) -
                    170. * pow(sh, 7) + 10. * pow(sh, 8)) +
                    2.239578959155679e-6 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (3900. + 100. * sh - 116036. * pow(sh, 2) -
                    329570. * pow(sh, 3) + 93490. * pow(sh, 4) +
                    (4.740596068e9 - 5.71536e7 * Lshb) * pow(sh, 5) +
                    4. * (-9.479986241e9 + 1.13778e8 * Lshb) * pow(sh, 6) +
                    2. * (6.6407275091e10 - 7.9348248e8 * Lshb +
                    4.851e6 * pow(3.141592653589793, 2)) * pow(sh, 7) +
                    10. * (-2.6593392899e10 + 3.16207584e8 * Lshb -
                    4.851e6 * pow(3.141592653589793, 2)) * pow(sh, 8) +
                    10. * (3.3290343127e10 - 3.92931e8 * Lshb +
                    9.702e6 * pow(3.141592653589793, 2)) * pow(sh, 9) +
                    (-2.66790821833e11 + 3.1026996e9 * Lshb -
                    9.702e7 * pow(3.141592653589793, 2)) * pow(sh, 10)\
            + (1.33671533459e11 - 1.5018696e9 * Lshb +
                    4.851e7 * pow(3.141592653589793, 2)) * pow(sh, 11)\
            + (-3.8283679243e10 + 3.9541824e8 * Lshb -
                    9.702e6 * pow(3.141592653589793, 2)) * pow(sh, 12)\
            + (4.796104102e9 - 3.693816e7 * Lshb) *
                    pow(sh, 13) + 1.055215e6 * pow(sh, 14) -
                    172235. * pow(sh, 15) -
                    735. * (307. + 720. * Lshb) * pow(sh, 16) +
                    1176. * (23. + 45. * Lshb) * pow(sh, 17) +
                    294. * (11. + 180. * Lshb) * pow(sh, 18))) -
                    0.00047031158142269255 * pow(Lsh, 2) * pow(-1 + sh, -9) *
                    pow(sh, -12)*(-60. - 340. * sh - 312. * pow(sh, 2) +
                    1872. * pow(sh, 3) + 4980. * pow(sh, 4) +
                    1.1658504e7 * pow(sh, 5) - 1.04832846e8 * pow(sh, 6) +
                    11. * (3.8074319e7 + 2520. * Lshb) * pow(sh, 7) -
                    6. * (1.62766363e8 + 27720. * Lshb) * pow(sh, 8) +
                    3. * (4.88268437e8 + 138600. * Lshb) * pow(sh, 9) -
                    (1.465559189e9 + 554400. * Lshb) * pow(sh, 10) +
                    (9.78147321e8 + 415800. * Lshb) * pow(sh, 11) -
                    30. * (1.3999939e7 + 5544. * Lshb) * pow(sh, 12) +
                    2. * (5.2652911e7 + 13860. * Lshb) * pow(sh, 13) -
                    1.1751384e7 * pow(sh, 14) - 1260. * pow(sh, 16) +
                    1386. * pow(sh, 17) - 126. * pow(sh, 19)) -
                    0.00047031158142269255 * pow(lz, 2) * pow(sh, -12)*
                    (15. + 220. * sh + 1518. * pow(sh, 2) + 6534. * pow(sh, 3) +
                    19503. * pow(sh, 4) - 1.1615304e7 * pow(sh, 5) -
                    20790. * pow(sh, 6) - 6546. * pow(sh, 7) -
                    24741. * pow(sh, 8) - 29490. * pow(sh, 9) -
                    19183. * pow(sh, 10) - 15. * pow(sh, 11) -
                    42336. * pow(sh, 12) - 50652. * pow(sh, 13) -
                    42336. * pow(sh, 14) - 522396. * pow(sh, 15) -
                    514080. * pow(sh, 16) + 5.330178e6 * pow(sh, 17) -
                    8.247204e6 * pow(sh, 18) + 6.008688e6 * pow(sh, 19) -
                    2.443392e6 * pow(sh, 20) + 570780. * pow(sh, 21) -
                    71820. * pow(sh, 22) + 3780. * pow(sh, 23)) -
                    lz * (-512. * lmu * pow(sh, -7) -
                    13.037037037037036 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -5) + 1.4222222222222223 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-204. + 654. * sh + 3621. * pow(sh, 2) -
                    9390. * pow(sh, 3) + 8928. * pow(sh, 4) -
                    4384. * pow(sh, 5) + 1190. * pow(sh, 6) -
                    170. * pow(sh, 7) + 10. * pow(sh, 8)) -
                    0.0009406231628453851 * Lsh * pow(-1 + sh, -8) *
                    pow(sh, -12)*(30. + 200. * sh + 356. * pow(sh, 2) -
                    580. * pow(sh, 3) - 3070. * pow(sh, 4) -
                    1.1660764e7 * pow(sh, 5) + 9.3173522e7 * pow(sh, 6) -
                    3.25763741e8 * pow(sh, 7) +
                    6.51103141e8 * pow(sh, 8) - 8.1359378e8 * pow(sh, 9) +
                    6.50748419e8 * pow(sh, 10) -
                    3.25285222e8 * pow(sh, 11) +
                    9.2859728e7 * pow(sh, 12) -
                    1.1567032e7 * pow(sh, 13) - 2380. * pow(sh, 14) -
                    2065. * pow(sh, 15) - 945. * pow(sh, 16) +
                    462. * pow(sh, 17) + 21. * pow(sh, 18)) +
                    6.78660290653236e-8 * pow(-1 + sh, -7) * pow(sh, -12)*
                    (64350. + 66000. * sh - 1.848594e6 * pow(sh, 2) -
                    7.286499e6 * pow(sh, 3) - 5.743914e6 * pow(sh, 4) +
                    1.564114497e11 * pow(sh, 5) -
                    1.092996615942e12 * pow(sh, 6) +
                    3.274039012563e12 * pow(sh, 7) -
                    5.447084215617e12 * pow(sh, 8) +
                    5.433819864693e12 * pow(sh, 9) -
                    3.247981504196e12 * pow(sh, 10) +
                    1.075526023436e12 * pow(sh, 11) -
                    1.50436790331e11 * pow(sh, 12) -
                    5.482108499e9 * pow(sh, 13) +
                    1.2697937753e10 * pow(sh, 14) -
                    1.820498844e10 * pow(sh, 15) +
                    4.184087512e9 * pow(sh, 16) +
                    6.5568484406e10 * pow(sh, 17) -
                    9.5193663855e10 * pow(sh, 18) -
                    3.83610629052e11 * pow(sh, 19) +
                    1.851933873636e12 * pow(sh, 20) -
                    3.850977196836e12 * pow(sh, 21) +
                    4.997388254166e12 * pow(sh, 22) -
                    4.45400972478e12 * pow(sh, 23) +
                    2.82695858676e12 * pow(sh, 24) -
                    1.2912095196e12 * pow(sh, 25) +
                    4.2141221892e11 * pow(sh, 26) -
                    9.582123474e10 * pow(sh, 27) +
                    1.44039357e10 * pow(sh, 28) -
                    1.28490516e9 * pow(sh, 29) + 5.143446e7 * pow(sh, 30)))
                    - 4.896538893601991e-12 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (2.074545e8 - 4.76982e8 * sh -
                    3.223561968e9 * pow(sh, 2) +
                    1.2229671465e10 * pow(sh, 3) +
                    5.5118379195e10 * pow(sh, 4) -
                    5.39918795738718e14 * pow(sh, 5) +
                    4.299200276151924e15 * pow(sh, 6) -
                    1.497521829460536e16 * pow(sh, 7) +
                    2.979736241687578e16 * pow(sh, 8) -
                    3.705409524476913e16 * pow(sh, 9) +
                    2.9516698533084984e16 * pow(sh, 10) -
                    1.4749822777601014e16 * pow(sh, 11) +
                    4.277878063797251e15 * pow(sh, 12) -
                    6.52624973981284e14 * pow(sh, 13) +
                    2.5170701729432e14 * pow(sh, 14) -
                    4.0013657985217e14 * pow(sh, 15) +
                    1.47801666642455e14 * pow(sh, 16) +
                    1.2877818678578e15 * pow(sh, 17) -
                    2.076397177767913e15 * pow(sh, 18) -
                    8.385630050032431e15 * pow(sh, 19) +
                    4.538622316201646e16 * pow(sh, 20) -
                    1.061838620189715e17 * pow(sh, 21) +
                    1.575009771316346e17 * pow(sh, 22) -
                    1.6342684496066314e17 * pow(sh, 23) +
                    1.2333678370646925e17 * pow(sh, 24) -
                    6.8698738259084936e16 * pow(sh, 25) +
                    2.8233898574272776e16 * pow(sh, 26) -
                    8.447633225048556e15 * pow(sh, 27) +
                    1.786675943700648e15 * pow(sh, 28) -
                    2.5272282124782e14 * pow(sh, 29) +
                    2.141343983394e13 * pow(sh, 30) -
                    8.2047522942e11 * pow(sh, 31) +
                    3.20166e7 * pow(3.141592653589793, 2)*
                    (-90. - 600. * sh - 1068. * pow(sh, 2) +
                    1740. * pow(sh, 3) + 9210. * pow(sh, 4) +
                    3.5821452e7 * pow(sh, 5) - 2.86356066e8 * pow(sh, 6) +
                    1.001798639e9 * pow(sh, 7) -
                    2.003828431e9 * pow(sh, 8) +
                    2.50626266e9 * pow(sh, 9) -
                    2.006862017e9 * pow(sh, 10) +
                    1.004429086e9 * pow(sh, 11) -
                    2.8716356e8 * pow(sh, 12) + 3.622858e7 * pow(sh, 13) -
                    1.140968e6 * pow(sh, 14) + 600307. * pow(sh, 15) +
                    5.766227e6 * pow(sh, 16) - 8.667286e6 * pow(sh, 17) -
                    7.4435635e7 * pow(sh, 18) +
                    4.29448764e8 * pow(sh, 19) -
                    1.174957056e9 * pow(sh, 20) +
                    2.075532984e9 * pow(sh, 21) -
                    2.59118244e9 * pow(sh, 22) +
                    2.377353888e9 * pow(sh, 23) -
                    1.631212128e9 * pow(sh, 24) +
                    8.40926772e8 * pow(sh, 25) -
                    3.23868888e8 * pow(sh, 26) +
                    9.1648368e7 * pow(sh, 27) -
                    1.8464544e7 * pow(sh, 28) + 2.50236e6 * pow(sh, 29) -
                    204120. * pow(sh, 30) + 7560. * pow(sh, 31)))) * pow(z, 7);
            else
                res += pow(z, 7)*(-51610.88930322329 -
                    347049.77916686254 * (1. - sh) -
                    1.3506484596566306e6 * pow(1. - sh, 2) -
                    3.942197589163436e6 * pow(1. - sh, 3) -
                    9.550309146362534e6 * pow(1. - sh, 4) +
                    log(muh)*(587.9873015873015 +
                    4627.9111111111115 * (1. - sh) +
                    20303.644444444446 * pow(1. - sh, 2) +
                    65689.6 * pow(1. - sh, 3) +
                    174976. * pow(1. - sh, 4)) +
                    log(z)*(10201.948065363957 +
                    86007.6529570384 * (1. - sh) +
                    379663.80341596896 * pow(1. - sh, 2) +
                    1.2326804892307315e6 * pow(1. - sh, 3) +
                    3.309516784057691e6 * pow(1. - sh, 4) +
                    log(muh)*(512. + 3584. * (1. - sh) +
                    14336. * pow(1. - sh, 2) +
                    43008. * pow(1. - sh, 3) +
                    107520. * pow(1. - sh, 4))) +
                    (5506.910758377425 + 38490.637037037035 * (1. - sh) +
                    152831.80246913582 * pow(1. - sh, 2) +
                    457767.65432098764 * pow(1. - sh, 3) +
                    1.1442307160493827e6 * pow(1. - sh, 4)) *
                    pow(log(z), 2));
        }

        if (15 <= maxpow) {
            if (sh < .900001)
                res += -4.047867295730543e-6 * pow(3.141592653589793, 2) * pow(sh, -13)*
                (3003. + 47124. * sh + 349398. * pow(sh, 2) +
                    1.62554e6 * pow(sh, 3) + 5.297685e6 * pow(sh, 4) +
                    1.265412e7 * pow(sh, 5) + 2.15477e7 * pow(sh, 6) +
                    1.265412e7 * pow(sh, 7) + 5.297685e6 * pow(sh, 8) +
                    1.62554e6 * pow(sh, 9) + 349398. * pow(sh, 10) +
                    47124. * pow(sh, 11) + 3003. * pow(sh, 12)) * pow(z, 7.5);
            else
                res += (-2457.0347351559058 - 17199.24314609134 * (1. - sh) -
                    71008.30384600567 * pow(1. - sh, 2) -
                    224081.5678462186 * pow(1. - sh, 3) -
                    596572.421257881 * pow(1. - sh, 4)) * pow(z, 7.5);
        }

        if (16 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (-1940.6814814814816 * pow(sh, -8) +
                    1642.6666666666667 * Lsh * pow(sh, -8)) -
                    87.3113077596556 * pow(-1 + sh, -3) * pow(sh, -6) +
                    72.63492063492063 * Li3sh * pow(-1 + sh, -3) * pow(sh, -6) -
                    24.211640211640212 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -6) + 1.3037037037037038 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-42. + 1287. * sh - 1614. * pow(sh, 2) -
                    19017. * pow(sh, 3) + 50556. * pow(sh, 4) -
                    55330. * pow(sh, 5) + 33315. * pow(sh, 6) -
                    11945. * pow(sh, 7) + 2550. * pow(sh, 8) -
                    300. * pow(sh, 9) + 15. * pow(sh, 10)) +
                    0.00047031158142269255 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 2)*
                    (228522. - 7.741593e6 * sh + 3.0723729e7 * pow(sh, 2) +
                    6.0003996e7 * pow(sh, 3) - 5.8092981e8 * pow(sh, 4) +
                    1.504380659e9 * pow(sh, 5) - 2.124842634e9 * pow(sh, 6) +
                    1.888618168e9 * pow(sh, 7) - 1.114436468e9 * pow(sh, 8) +
                    4.4384322e8 * pow(sh, 9) - 1.18087858e8 * pow(sh, 10) +
                    2.0123511e7 * pow(sh, 11) - 1.986441e6 * pow(sh, 12) +
                    86367. * pow(sh, 13)) -
                    3.911111111111111 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 3)*
                    (-700. + 7875. * sh - 14966. * pow(sh, 2) -
                    79023. * pow(sh, 3) + 455850. * pow(sh, 4) -
                    1.077135e6 * pow(sh, 5) + 1.523775e6 * pow(sh, 6) -
                    1.432728e6 * pow(sh, 7) + 934836. * pow(sh, 8) -
                    430150. * pow(sh, 9) + 139230. * pow(sh, 10) -
                    31025. * pow(sh, 11) + 4530. * pow(sh, 12) -
                    390. * pow(sh, 13) + 15. * pow(sh, 14)) -
                    0.0028218694885361554 * Li2sh * pow(-1 + sh, -9) * pow(sh, -8)*
                    (145530. - 1.30482e6 * sh + 5.20032e6 * pow(sh, 2) -
                    1.208298e7 * pow(sh, 3) + 1.801254e7 * pow(sh, 4) -
                    1.78178e7 * pow(sh, 5) + 1.163162e7 * pow(sh, 6) -
                    4.77477e6 * pow(sh, 7) + 1.082136e6 * pow(sh, 8) -
                    94842. * pow(sh, 9) - 420. * pow(sh, 13) +
                    70. * pow(sh, 14) + 35. * pow(sh, 15)) -
                    Lsh * (72.63492063492063 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -6) - 1.3037037037037038 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-42. + 1287. * sh - 1614. * pow(sh, 2) -
                    19017. * pow(sh, 3) + 50556. * pow(sh, 4) -
                    55330. * pow(sh, 5) + 33315. * pow(sh, 6) -
                    11945. * pow(sh, 7) + 2550. * pow(sh, 8) -
                    300. * pow(sh, 9) + 15. * pow(sh, 10)) +
                    7.998496282698853e-8 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (-70875. - 6750. * sh + 2.654475e6 * pow(sh, 2) +
                    9.126108e6 * pow(sh, 3) + 678627. * pow(sh, 4) -
                    4.643019e7 * pow(sh, 5) +
                    25. * (-1.8964236617e10 + 2.05371936e8 * Lshb) *
                    pow(sh, 6) - 180. *
                    (-2.3705023777e10 + 2.5574472e8 * Lshb) * pow(sh, 7)\
            + 3. * (-5.691283317731e12 + 6.11557632e10 * Lshb -
                    2.52252e8 * pow(3.141592653589793, 2)) * pow(sh, 8)\
            + 6. * (6.644381363023e12 - 7.10479224e10 * Lshb +
                    7.56756e8 * pow(3.141592653589793, 2)) * pow(sh, 9)\
            + 225. * (-2.66023942651e11 +
                    2.824366272e9 * Lshb -
                    5.04504e7 * pow(3.141592653589793, 2)) * pow(sh, 10)
                    + 120. * (4.99371243863e11 - 5.2384332e9 * Lshb +
                    1.26126e8 * pow(3.141592653589793, 2)) * pow(sh, 11)
                    + 225. * (-1.77796507943e11 +
                    1.823838016e9 * Lshb -
                    5.04504e7 * pow(3.141592653589793, 2)) * pow(sh, 12)
                    + 2106. * (8.153537761e9 - 7.99876e7 * Lshb +
                    2.156e6 * pow(3.141592653589793, 2)) * pow(sh, 13)\
            + (-4.299863603271e12 + 3.817775808e10 * Lshb -
                    7.56756e8 * pow(3.141592653589793, 2)) * pow(sh, 14)
                    - 140. * (-3.417060133e9 + 2.3900184e7 * Lshb) *
                    pow(sh, 15) + 4.710132e7 * pow(sh, 16) +
                    3.484152e7 * pow(sh, 17) - 7.916076e6 * pow(sh, 18) -
                    6048. * (923. + 2450. * Lshb) * pow(sh, 19) +
                    12600. * (59. + 196. * Lshb) * pow(sh, 20) +
                    4200. * (13. + 294. * Lshb) * pow(sh, 21))) +
                    0.00006718736877467037 * pow(Lsh, 2) * pow(-1 + sh, -10) *
                    pow(sh, -14)*(-315. - 2115. * sh - 3255. * pow(sh, 2) +
                    9681. * pow(sh, 3) + 37863. * pow(sh, 4) +
                    21231. * pow(sh, 5) + 2.843603e8 * pow(sh, 6) -
                    2.8424249e9 * pow(sh, 7) +
                    6. * (2.129867959e9 + 90090. * Lshb) * pow(sh, 8) -
                    42. * (8.10842339e8 + 90090. * Lshb) * pow(sh, 9) +
                    84. * (7.09285376e8 + 135135. * Lshb) * pow(sh, 10) -
                    1260. * (5.6749267e7 + 15015. * Lshb) * pow(sh, 11) +
                    630. * (9.4632631e7 + 30030. * Lshb) * pow(sh, 12) -
                    378. * (9.0217367e7 + 30030. * Lshb) * pow(sh, 13) +
                    42. * (3.04968821e8 + 90090. * Lshb) * pow(sh, 14) -
                    2. * (1.426541293e9 + 270270. * Lshb) * pow(sh, 15) +
                    2.8627046e8 * pow(sh, 16) + 8820. * pow(sh, 19) -
                    10290. * pow(sh, 20) + 735. * pow(sh, 21) +
                    735. * pow(sh, 22)) +
                    0.00001679684219366759 * pow(lz, 2) * pow(sh, -14)*
                    (-315. - 5265. * sh - 41730. * pow(sh, 2) -
                    208494. * pow(sh, 3) - 734877. * pow(sh, 4) -
                    1.926639e6 * pow(sh, 5) + 1.1339384e9 * pow(sh, 6) +
                    2.16216e6 * pow(sh, 7) + 48987. * pow(sh, 8) +
                    1.669041e6 * pow(sh, 9) + 2.629962e6 * pow(sh, 10) +
                    2.41431e6 * pow(sh, 11) + 1.436625e6 * pow(sh, 12) +
                    315. * pow(sh, 13) + 3.764376e6 * pow(sh, 14) +
                    4.230072e6 * pow(sh, 15) + 5.006232e6 * pow(sh, 16) -
                    7.37352e6 * pow(sh, 17) + 1.0643094e8 * pow(sh, 18) +
                    1.95359472e8 * pow(sh, 19) -
                    1.425010356e9 * pow(sh, 20) +
                    2.406212424e9 * pow(sh, 21) -
                    2.05080876e9 * pow(sh, 22) + 1.03141962e9 * pow(sh, 23) -
                    3.2026302e8 * pow(sh, 24) + 6.054048e7 * pow(sh, 25) -
                    6.40332e6 * pow(sh, 26) + 291060. * pow(sh, 27)) -
                    lz * (-1642.6666666666667 * lmu * pow(sh, -8) -
                    36.317460317460316 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -6) - 2.6074074074074076 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-42. + 1287. * sh - 1614. * pow(sh, 2) -
                    19017. * pow(sh, 3) + 50556. * pow(sh, 4) -
                    55330. * pow(sh, 5) + 33315. * pow(sh, 6) -
                    11945. * pow(sh, 7) + 2550. * pow(sh, 8) -
                    300. * pow(sh, 9) + 15. * pow(sh, 10)) -
                    0.00006718736877467037 * Lsh * pow(-1 + sh, -9) *
                    pow(sh, -14)*(-315. - 2430. * sh - 5685. * pow(sh, 2) +
                    3996. * pow(sh, 3) + 41859. * pow(sh, 4) +
                    63090. * pow(sh, 5) + 5.68853935e8 * pow(sh, 6) -
                    5.11611966e9 * pow(sh, 7) +
                    2.0446767111e10 * pow(sh, 8) -
                    4.7676829206e10 * pow(sh, 9) +
                    7.1479964025e10 * pow(sh, 10) -
                    7.145286696e10 * pow(sh, 11) +
                    4.7617276155e10 * pow(sh, 12) -
                    2.039566545e10 * pow(sh, 13) +
                    5.092669737e9 * pow(sh, 14) -
                    5.64250624e8 * pow(sh, 15) + 37800. * pow(sh, 16) -
                    47460. * pow(sh, 17) - 29232. * pow(sh, 18) -
                    9828. * pow(sh, 19) + 6930. * pow(sh, 20) +
                    210. * pow(sh, 21)) +
                    2.796677021922676e-10 * pow(-1 + sh, -8) * pow(sh, -14)*
                    (-1.0135125e7 - 1.1100375e7 * sh +
                    3.6848955e8 * pow(sh, 2) +
                    1.673522994e9 * pow(sh, 3) +
                    1.770566655e9 * pow(sh, 4) -
                    4.868950515e9 * pow(sh, 5) -
                    1.355916766061e14 * pow(sh, 6) +
                    1.08320914263562e15 * pow(sh, 7) -
                    3.786163163932292e15 * pow(sh, 8) +
                    7.56111391441978e15 * pow(sh, 9) -
                    9.4338729874103e15 * pow(sh, 10) +
                    7.52783212419654e15 * pow(sh, 11) -
                    3.74950772533818e15 * pow(sh, 12) +
                    1.064521016851092e15 * pow(sh, 13) -
                    1.32239959812912e14 * pow(sh, 14) +
                    4.822522515092e12 * pow(sh, 15) -
                    1.3702469432263e13 * pow(sh, 16) +
                    2.0211432885167e13 * pow(sh, 17) -
                    1.5340657706842e13 * pow(sh, 18) +
                    3.8517131981282e13 * pow(sh, 19) -
                    1.98231128437323e14 * pow(sh, 20) +
                    2.48611036890867e14 * pow(sh, 21) +
                    1.312843416208632e15 * pow(sh, 22) -
                    6.858549767677608e15 * pow(sh, 23) +
                    1.6510967898168744e16 * pow(sh, 24) -
                    2.57336419311972e16 * pow(sh, 25) +
                    2.851348331813982e16 * pow(sh, 26) -
                    2.336070503975208e16 * pow(sh, 27) +
                    1.439716999494774e16 * pow(sh, 28) -
                    6.70336841266092e15 * pow(sh, 29) +
                    2.34397396677444e15 * pow(sh, 30) -
                    6.0527470649646e14 * pow(sh, 31) +
                    1.1182510300962e14 * pow(sh, 32) -
                    1.396347000048e13 * pow(sh, 33) +
                    1.054350297e12 * pow(sh, 34) -
                    3.631041414e10 * pow(sh, 35))) +
                    7.760786496621921e-16 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (7.34806697625e11 - 1.86465740175e12 * sh -
                    1.3539275231625e13 * pow(sh, 2) +
                    6.7027116030732e13 * pow(sh, 3) +
                    3.63276406618983e14 * pow(sh, 4) +
                    7.707518005473e13 * pow(sh, 5) -
                    1.517387130121548e19 * pow(sh, 6) +
                    1.361134491880303e20 * pow(sh, 7) -
                    5.426853793481742e20 * pow(sh, 8) +
                    1.262085401071148e21 * pow(sh, 9) -
                    1.886986812950732e21 * pow(sh, 10) +
                    1.8816744004909767e21 * pow(sh, 11) -
                    1.2525799935976913e21 * pow(sh, 12) +
                    5.37888683654858e20 * pow(sh, 13) -
                    1.3573327538305124e20 * pow(sh, 14) +
                    1.3896509010095016e19 * pow(sh, 15) +
                    5.883932779473471e18 * pow(sh, 16) -
                    1.0545119614382879e19 * pow(sh, 17) +
                    1.1056449646096937e19 * pow(sh, 18) -
                    2.3434959475666616e19 * pow(sh, 19) +
                    1.0419598368525897e20 * pow(sh, 20) -
                    1.688591180885733e20 * pow(sh, 21) -
                    5.308738122339353e20 * pow(sh, 22) +
                    3.5306726064196524e21 * pow(sh, 23) -
                    9.689077766441178e21 * pow(sh, 24) +
                    1.7097533811227756e22 * pow(sh, 25) -
                    2.1588630869532427e22 * pow(sh, 26) +
                    2.038422378040867e22 * pow(sh, 27) -
                    1.4690695476739364e22 * pow(sh, 28) +
                    8.14476034656345e21 * pow(sh, 29) -
                    3.4697517653715583e21 * pow(sh, 30) +
                    1.1250567404926722e21 * pow(sh, 31) -
                    2.7233981875541377e20 * pow(sh, 32) +
                    4.759269487750347e19 * pow(sh, 33) -
                    5.663805036845516e18 * pow(sh, 34) +
                    4.101841359381566e17 * pow(sh, 35) -
                    1.362249094884678e16 * pow(sh, 36) +
                    4.32864432e10 * pow(3.141592653589793, 2)*
                    (-315. - 2430. * sh - 5685. * pow(sh, 2) +
                    3996. * pow(sh, 3) + 41859. * pow(sh, 4) +
                    63090. * pow(sh, 5) + 5.81369515e8 * pow(sh, 6) -
                    5.23068642e9 * pow(sh, 7) +
                    2.0914846601e10 * pow(sh, 8) -
                    4.8797229546e10 * pow(sh, 9) +
                    7.3211460495e10 * pow(sh, 10) -
                    7.324423592e10 * pow(sh, 11) +
                    4.8857255585e10 * pow(sh, 12) -
                    2.094858111e10 * pow(sh, 13) +
                    5.235387183e9 * pow(sh, 14) -
                    5.73585856e8 * pow(sh, 15) -
                    2.302929e7 * pow(sh, 16) + 4.790626e7 * pow(sh, 17) -
                    1.24781262e8 * pow(sh, 18) +
                    4.35359256e8 * pow(sh, 19) -
                    5.45760408e8 * pow(sh, 20) -
                    3.99911175e9 * pow(sh, 21) +
                    2.559251793e10 * pow(sh, 22) -
                    7.87509723e10 * pow(sh, 23) +
                    1.60158041736e11 * pow(sh, 24) -
                    2.35861111332e11 * pow(sh, 25) +
                    2.6202440418e11 * pow(sh, 26) -
                    2.2419142284e11 * pow(sh, 27) +
                    1.491808626e11 * pow(sh, 28) -
                    7.7359627884e10 * pow(sh, 29) +
                    3.1118686368e10 * pow(sh, 30) -
                    9.59731542e9 * pow(sh, 31) +
                    2.22259884e9 * pow(sh, 32) -
                    3.733653e8 * pow(sh, 33) + 4.288284e7 * pow(sh, 34) -
                    3.00762e6 * pow(sh, 35) + 97020. * pow(sh, 36)))) *
                pow(z, 8);
            else
                res += pow(z, 8)*(-177282.7451111828 -
                    1.362845028834542e6 * (1. - sh) -
                    5.9880687949730605e6 * pow(1. - sh, 2) -
                    1.9481491807919256e7 * pow(1. - sh, 3) -
                    5.2053685182060525e7 * pow(1. - sh, 4) +
                    log(muh)*(1940.6814814814816 +
                    17168.118518518517 * (1. - sh) +
                    83827.2 * pow(1. - sh, 2) +
                    299136. * pow(1. - sh, 3) +
                    871904. * pow(1. - sh, 4)) +
                    log(z)*(36437.04027695534 +
                    345607.09636221116 * (1. - sh) +
                    1.691397924301905e6 * pow(1. - sh, 2) +
                    6.051670084075397e6 * pow(1. - sh, 3) +
                    1.778888064751204e7 * pow(1. - sh, 4) +
                    log(muh)*(1642.6666666666667 +
                    13141.333333333334 * (1. - sh) +
                    59136. * pow(1. - sh, 2) +
                    197120. * pow(1. - sh, 3) +
                    542080. * pow(1. - sh, 4))) +
                    (19228.65843621399 + 153417.80082304525 * (1. - sh) +
                    684734.1037037037 * pow(1. - sh, 2) +
                    2.279762479012346e6 * pow(1. - sh, 3) +
                    6.2693611104056435e6 * pow(1. - sh, 4)) *
                    pow(log(z), 2));
        }

        if (17 <= maxpow) {
            if (sh < .900001)
                res += -1.4445330349469783e-6 * pow(3.141592653589793, 2) * pow(sh, -15)*
                (6435. + 114114. * sh + 962577. * pow(sh, 2) +
                    5.137524e6 * pow(sh, 3) + 1.9445755e7 * pow(sh, 4) +
                    5.526435e7 * pow(sh, 5) + 1.20557265e8 * pow(sh, 6) +
                    1.9446652e8 * pow(sh, 7) + 1.20557265e8 * pow(sh, 8) +
                    5.526435e7 * pow(sh, 9) + 1.9445755e7 * pow(sh, 10) +
                    5.137524e6 * pow(sh, 11) + 962577. * pow(sh, 12) +
                    114114. * pow(sh, 13) + 6435. * pow(sh, 14)) * pow(z, 8.5);
            else
                res += (-8517.720415207139 - 68141.76332165711 * (1. - sh) -
                    315581.54138342454 * pow(1. - sh, 2) -
                    1.1026189077485641e6 * pow(1. - sh, 3) -
                    3.2181012443704475e6 * pow(1. - sh, 4)) * pow(z, 8.5);
        }

        if (18 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (-6542.252322163433 * pow(sh, -9) +
                    5423.407407407408 * Lsh * pow(sh, -9)) -
                    254.65798096566218 * pow(-1 + sh, -3) * pow(sh, -7) +
                    211.85185185185185 * Li3sh * pow(-1 + sh, -3) * pow(sh, -7) -
                    70.61728395061728 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -7) - 2.6901822457378013 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(552. - 6504. * sh + 954. * pow(sh, 2) +
                    96534. * pow(sh, 3) - 256765. * pow(sh, 4) +
                    311884. * pow(sh, 5) - 219753. * pow(sh, 6) +
                    97149. * pow(sh, 7) - 27453. * pow(sh, 8) +
                    4830. * pow(sh, 9) - 483. * pow(sh, 10) + 21. * pow(sh, 11))\
      - 0.00010451368476059834 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 3)*
                    (-2.9602032e7 + 4.3918554e8 * sh -
                    1.183665042e9 * pow(sh, 2) - 4.124801388e9 * pow(sh, 3) +
                    2.9786749451e10 * pow(sh, 4) -
                    7.6073083277e10 * pow(sh, 5) +
                    1.12343648214e11 * pow(sh, 6) -
                    1.08358670795e11 * pow(sh, 7) +
                    7.1769426953e10 * pow(sh, 8) -
                    3.3301199019e10 * pow(sh, 9) +
                    1.0824913791e10 * pow(sh, 10) -
                    2.416552923e9 * pow(sh, 11) +
                    3.53029242e8 * pow(sh, 12) - 3.0393246e7 * pow(sh, 13) +
                    1.168971e6 * pow(sh, 14)) +
                    8.070546737213403 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 3)*
                    (-112. + 5446. * sh - 40068. * pow(sh, 2) +
                    45402. * pow(sh, 3) + 481386. * pow(sh, 4) -
                    2.416545e6 * pow(sh, 5) + 5.68308e6 * pow(sh, 6) -
                    8.356089e6 * pow(sh, 7) + 8.410689e6 * pow(sh, 8) -
                    6.034798e6 * pow(sh, 9) + 3.142636e6 * pow(sh, 10) -
                    1.191618e6 * pow(sh, 11) + 325686. * pow(sh, 12) -
                    62481. * pow(sh, 13) + 7980. * pow(sh, 14) -
                    609. * pow(sh, 15) + 21. * pow(sh, 16)) -
                    0.004703115814226925 * Li2sh * pow(-1 + sh, -10) * pow(sh, -9)*
                    (-288288. + 2.873871e6 * sh - 1.2889503e7 * pow(sh, 2) +
                    3.423222e7 * pow(sh, 3) - 5.956146e7 * pow(sh, 4) +
                    7.0825482e7 * pow(sh, 5) - 5.8121154e7 * pow(sh, 6) +
                    3.2324292e7 * pow(sh, 7) - 1.153152e7 * pow(sh, 8) +
                    2.327611e6 * pow(sh, 9) - 186043. * pow(sh, 10) -
                    252. * pow(sh, 15) + 54. * pow(sh, 16) + 18. * pow(sh, 17))\
      - Lsh * (211.85185185185185 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -7) + 2.6901822457378013 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(552. - 6504. * sh + 954. * pow(sh, 2) +
                    96534. * pow(sh, 3) - 256765. * pow(sh, 4) +
                    311884. * pow(sh, 5) - 219753. * pow(sh, 6) +
                    97149. * pow(sh, 7) - 27453. * pow(sh, 8) +
                    4830. * pow(sh, 9) - 483. * pow(sh, 10) +
                    21. * pow(sh, 11)) +
                    1.5552631660803325e-7 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (24990. + 3675. * sh - 1.155555e6 * pow(sh, 2) -
                    4.697175e6 * pow(sh, 3) - 2.300739e6 * pow(sh, 4) +
                    2.4304707e7 * pow(sh, 5) + 4.9414911e7 * pow(sh, 6) +
                    (8.82608902003e11 - 8.71782912e9 * Lshb) *
                    pow(sh, 7) + (-8.826874533745e12 +
                    8.690585904e10 * Lshb) * pow(sh, 8) +
                    15. * (2.648605733525e12 - 2.5985238048e10 * Lshb +
                    7.56756e7 * pow(3.141592653589793, 2)) * pow(sh, 9)\
            + 3. * (-3.5329412670653e13 +
                    3.450607776e11 * Lshb -
                    2.648646e9 * pow(3.141592653589793, 2)) *
                    pow(sh, 10) +
                    105. * (1.767535730921e12 - 1.715370048e10 * Lshb +
                    2.270268e8 * pow(3.141592653589793, 2)) *
                    pow(sh, 11) +
                    21. * (-1.0613371381061e13 +
                    1.0198869408e11 * Lshb -
                    1.89189e9 * pow(3.141592653589793, 2)) * pow(sh, 12)
                    + 189. * (9.83624804999e11 - 9.29938464e9 * Lshb +
                    2.1021e8 * pow(3.141592653589793, 2)) * pow(sh, 13)\
            + 15. * (-7.089591334283e12 +
                    6.5165772672e10 * Lshb -
                    1.5891876e9 * pow(3.141592653589793, 2)) *
                    pow(sh, 14) +
                    33. * (1.209854560067e12 - 1.05670656e10 * Lshb +
                    2.40786e8 * pow(3.141592653589793, 2)) * pow(sh, 15)
                    + 2. * (-4.441328248151e12 +
                    3.519347832e10 * Lshb -
                    5.67567e8 * pow(3.141592653589793, 2)) * pow(sh, 16)
                    + (8.88980806162e11 - 5.62594032e9 * Lshb) *
                    pow(sh, 17) - 3.8377206e7 * pow(sh, 18) +
                    4.2700014e7 * pow(sh, 19) +
                    1.8171216e7 * pow(sh, 20) - 5.847282e6 * pow(sh, 21) -
                    1890. * (1387. + 4032. * Lshb) * pow(sh, 22) +
                    2430. * (149. + 672. * Lshb) * pow(sh, 23) +
                    1215. * (15. + 448. * Lshb) * pow(sh, 24))) -
                    0.00009798157946306095 * pow(Lsh, 2) * pow(-1 + sh, -11) *
                    pow(sh, -16)*(-168. - 1302. * sh - 2760. * pow(sh, 2) +
                    4440. * pow(sh, 3) + 27552. * pow(sh, 4) +
                    26796. * pow(sh, 5) - 59136. * pow(sh, 6) +
                    6.91904744e8 * pow(sh, 7) - 7.607607766e9 * pow(sh, 8) +
                    (3.8011106171e10 + 1.08108e6 * Lshb) * pow(sh, 9) -
                    36. * (3.165700357e9 + 240240. * Lshb) * pow(sh, 10) +
                    720. * (3.16454927e8 + 42042. * Lshb) * pow(sh, 11) -
                    504. * (6.32852603e8 + 120120. * Lshb) * pow(sh, 12) +
                    84. * (3.797894797e9 + 900900. * Lshb) * pow(sh, 13) -
                    192. * (1.187472428e9 + 315315. * Lshb) * pow(sh, 14) +
                    120. * (9.50840131e8 + 252252. * Lshb) * pow(sh, 15) -
                    104. * (3.66207253e8 + 83160. * Lshb) * pow(sh, 16) +
                    (7.631953801e9 + 1.08108e6 * Lshb) * pow(sh, 17) -
                    6.95689448e8 * pow(sh, 18) - 6048. * pow(sh, 22) +
                    7344. * pow(sh, 23) - 864. * pow(sh, 24) - 432. * pow(sh, 25)
                    ) + 0.00004899078973153047 * pow(lz, 2) * pow(sh, -16)*
                    (-84. - 1575. * sh - 14085. * pow(sh, 2) -
                    79950. * pow(sh, 3) - 323154. * pow(sh, 4) -
                    987129. * pow(sh, 5) - 2.347059e6 * pow(sh, 6) +
                    1.379703232e9 * pow(sh, 7) + 2.7027e6 * pow(sh, 8) -
                    473685. * pow(sh, 9) + 1.243629e6 * pow(sh, 10) +
                    2.698722e6 * pow(sh, 11) + 2.985906e6 * pow(sh, 12) +
                    2.433285e6 * pow(sh, 13) + 1.388619e6 * pow(sh, 14) +
                    84. * pow(sh, 15) + 4.25568e6 * pow(sh, 16) +
                    4.612608e6 * pow(sh, 17) + 5.189184e6 * pow(sh, 18) +
                    7.605312e6 * pow(sh, 19) - 6.1281792e7 * pow(sh, 20) +
                    2.75438592e8 * pow(sh, 21) + 8.71398528e8 * pow(sh, 22) -
                    5.028236928e9 * pow(sh, 23) +
                    8.99602704e9 * pow(sh, 24) -
                    8.653636992e9 * pow(sh, 25) +
                    5.137333344e9 * pow(sh, 26) -
                    1.978438176e9 * pow(sh, 27) +
                    4.97379168e8 * pow(sh, 28) - 7.8990912e7 * pow(sh, 29) +
                    7.2072e6 * pow(sh, 30) - 288288. * pow(sh, 31)) -
                    lz * (-5423.407407407408 * lmu * pow(sh, -9) -
                    105.92592592592592 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -7) + 5.380364491475603 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(552. - 6504. * sh + 954. * pow(sh, 2) +
                    96534. * pow(sh, 3) - 256765. * pow(sh, 4) +
                    311884. * pow(sh, 5) - 219753. * pow(sh, 6) +
                    97149. * pow(sh, 7) - 27453. * pow(sh, 8) +
                    4830. * pow(sh, 9) - 483. * pow(sh, 10) +
                    21. * pow(sh, 11)) +
                    0.0001959631589261219 * Lsh * pow(-1 + sh, -10) *
                    pow(sh, -16)*(-84. - 735. * sh - 2115. * pow(sh, 2) +
                    105. * pow(sh, 3) + 13881. * pow(sh, 4) +
                    27279. * pow(sh, 5) - 2289. * pow(sh, 6) +
                    6.91956971e8 * pow(sh, 7) -
                    6.915895655e9 * pow(sh, 8) +
                    3.1099607139e10 * pow(sh, 9) -
                    8.2880063541e10 * pow(sh, 10) +
                    1.44964071231e11 * pow(sh, 11) -
                    1.73879170521e11 * pow(sh, 12) +
                    1.44837476805e11 * pow(sh, 13) -
                    8.2722854787e10 * pow(sh, 14) +
                    3.0998246241e10 * pow(sh, 15) -
                    6.879851159e9 * pow(sh, 16) +
                    6.86365796e8 * pow(sh, 17) - 75600. * pow(sh, 18) -
                    9072. * pow(sh, 19) + 22680. * pow(sh, 20) +
                    9828. * pow(sh, 21) + 2268. * pow(sh, 22) -
                    2484. * pow(sh, 23) - 54. * pow(sh, 24)) +
                    5.43798309818298e-10 * pow(-1 + sh, -9) * pow(sh, -16)*
                    (3.57357e6 + 4.099095e6 * sh -
                    1.6114527e8 * pow(sh, 2) - 8.32841295e8 * pow(sh, 3) -
                    1.161846972e9 * pow(sh, 4) +
                    2.313726129e9 * pow(sh, 5) +
                    9.380058402e9 * pow(sh, 6) +
                    2.52441684058135e14 * pow(sh, 7) -
                    2.26944762991947e15 * pow(sh, 8) +
                    9.067251405053984e15 * pow(sh, 9) -
                    2.113009526738253e16 * pow(sh, 10) +
                    3.1647467902192624e16 * pow(sh, 11) -
                    3.158667323807502e16 * pow(sh, 12) +
                    2.1002634158609704e16 * pow(sh, 13) -
                    8.966860615674702e15 * pow(sh, 14) +
                    2.228333766410625e15 * pow(sh, 15) -
                    2.43656770617994e14 * pow(sh, 16) -
                    9.520266140208e12 * pow(sh, 17) +
                    3.1476144603672e13 * pow(sh, 18) -
                    6.08108801358e13 * pow(sh, 19) +
                    8.0522179628688e13 * pow(sh, 20) -
                    7.1735262216768e13 * pow(sh, 21) -
                    1.85972284144884e14 * pow(sh, 22) +
                    1.24257330785952e15 * pow(sh, 23) -
                    1.516348491395922e15 * pow(sh, 24) -
                    9.623404446386016e15 * pow(sh, 25) +
                    5.409785863372176e16 * pow(sh, 26) -
                    1.4651551524606797e17 * pow(sh, 27) +
                    2.639914855668742e17 * pow(sh, 28) -
                    3.46785263569046e17 * pow(sh, 29) +
                    3.4581010205224454e17 * pow(sh, 30) -
                    2.67102371124581e17 * pow(sh, 31) +
                    1.612804363486636e17 * pow(sh, 32) -
                    7.625393556018638e16 * pow(sh, 33) +
                    2.809203040360517e16 * pow(sh, 34) -
                    7.968174811781184e15 * pow(sh, 35) +
                    1.704011763662208e15 * pow(sh, 36) -
                    2.65362784294608e14 * pow(sh, 37) +
                    2.836102317048e13 * pow(sh, 38) -
                    1.857724700832e12 * pow(sh, 39) +
                    5.6166718608e10 * pow(sh, 40))) -
                    2.263562728181394e-15 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (1.522039519e11 - 4.26276275425e11 * sh -
                    3.315607505925e12 * pow(sh, 2) +
                    1.9935815474575e13 * pow(sh, 3) +
                    1.24680380503679e14 * pow(sh, 4) +
                    9.4734104241777e13 * pow(sh, 5) -
                    6.72219759402191e14 * pow(sh, 6) -
                    2.148676883608435e19 * pow(sh, 7) +
                    2.1433741656451708e20 * pow(sh, 8) -
                    9.621528485908101e20 * pow(sh, 9) +
                    2.559493442861416e21 * pow(sh, 10) -
                    4.468559626678942e21 * pow(sh, 11) +
                    5.35099530515921e21 * pow(sh, 12) -
                    4.4525844044562044e21 * pow(sh, 13) +
                    2.544142477915097e21 * pow(sh, 14) -
                    9.568948351796755e20 * pow(sh, 15) +
                    2.1500361682429e20 * pow(sh, 16) -
                    2.422139078794151e19 * pow(sh, 17) +
                    8.145618788181729e18 * pow(sh, 18) -
                    1.8132101139625396e19 * pow(sh, 19) +
                    2.789986937416512e19 * pow(sh, 20) -
                    2.916708794791665e19 * pow(sh, 21) -
                    4.506612585214779e19 * pow(sh, 22) +
                    3.9814881989842764e20 * pow(sh, 23) -
                    7.61642854944141e20 * pow(sh, 24) -
                    1.912231127650318e21 * pow(sh, 25) +
                    1.5547276029752026e22 * pow(sh, 26) -
                    4.875241535562659e22 * pow(sh, 27) +
                    9.909337425361018e22 * pow(sh, 28) -
                    1.4647795672750128e23 * pow(sh, 29) +
                    1.651330016200192e23 * pow(sh, 30) -
                    1.453924699389752e23 * pow(sh, 31) +
                    1.011735575962528e23 * pow(sh, 32) -
                    5.58883301567305e22 * pow(sh, 33) +
                    2.447160559972393e22 * pow(sh, 34) -
                    8.433457866753118e21 * pow(sh, 35) +
                    2.2566304052798968e21 * pow(sh, 36) -
                    4.585243554016694e20 * pow(sh, 37) +
                    6.826335499960051e19 * pow(sh, 38) -
                    7.011890262150629e18 * pow(sh, 39) +
                    4.434709029248097e17 * pow(sh, 40) -
                    1.2998152420597344e16 * pow(sh, 41) +
                    4.32864432e10 * pow(3.141592653589793, 2)*
                    (-84. - 735. * sh - 2115. * pow(sh, 2) +
                    105. * pow(sh, 3) + 13881. * pow(sh, 4) +
                    27279. * pow(sh, 5) - 2289. * pow(sh, 6) +
                    7.06083083e8 * pow(sh, 7) -
                    7.059427043e9 * pow(sh, 8) +
                    3.1757931649e10 * pow(sh, 9) -
                    8.4675129727e10 * pow(sh, 10) +
                    1.48186623501e11 * pow(sh, 11) -
                    1.77858935891e11 * pow(sh, 12) +
                    1.48260913367e11 * pow(sh, 13) -
                    8.4747202497e10 * pow(sh, 14) +
                    3.1784695387e10 * pow(sh, 15) -
                    7.061392333e9 * pow(sh, 16) +
                    7.13289054e8 * pow(sh, 17) -
                    3.2675014e7 * pow(sh, 18) + 7.242013e7 * pow(sh, 19) -
                    7.6735758e7 * pow(sh, 20) -
                    2.40223726e8 * pow(sh, 21) +
                    1.627847962e9 * pow(sh, 22) -
                    2.273776974e9 * pow(sh, 23) -
                    1.712105386e10 * pow(sh, 24) +
                    1.18341944808e11 * pow(sh, 25) -
                    3.9995878208e11 * pow(sh, 26) +
                    9.10773328608e11 * pow(sh, 27) -
                    1.531097366656e12 * pow(sh, 28) +
                    1.98076916752e12 * pow(sh, 29) -
                    2.016366553344e12 * pow(sh, 30) +
                    1.634962897568e12 * pow(sh, 31) -
                    1.06202452928e12 * pow(sh, 32) +
                    5.53053223008e11 * pow(sh, 33) -
                    2.30009473408e11 * pow(sh, 34) +
                    7.5735678304e10 * pow(sh, 35) -
                    1.945628256e10 * pow(sh, 36) +
                    3.810741792e9 * pow(sh, 37) -
                    5.48735616e8 * pow(sh, 38) +
                    5.4678624e7 * pow(sh, 39) - 3.36336e6 * pow(sh, 40) +
                    96096. * pow(sh, 41)))) * pow(z, 9);
            else
                res += pow(z, 9)*(-622069.3836274818 -
                    5.380712316126128e6 * (1. - sh) -
                    2.6348101173329648e7 * pow(1. - sh, 2) -
                    9.453816935977913e7 * pow(1. - sh, 3) -
                    2.761541131481308e8 * pow(1. - sh, 4) +
                    log(muh)*(6542.252322163433 +
                    64303.678306878304 * (1. - sh) +
                    345923.7248677249 * pow(1. - sh, 2) +
                    1.349738102292769e6 * pow(1. - sh, 3) +
                    4.272929862433863e6 * pow(1. - sh, 4)) +
                    log(z)*(131849.69275238464 +
                    1.3908505037480777e6 * (1. - sh) +
                    7.472361309110008e6 * pow(1. - sh, 2) +
                    2.920814956913386e7 * pow(1. - sh, 3) +
                    9.329175253624554e7 * pow(1. - sh, 4) +
                    log(muh)*(5423.407407407408 +
                    48810.666666666664 * (1. - sh) +
                    244053.33333333334 * pow(1. - sh, 2) +
                    894862.2222222222 * pow(1. - sh, 3) +
                    2.6845866666666665e6 * pow(1. - sh, 4))) +
                    (68317.8044287674 + 612595.3262786596 * (1. - sh) +
                    3.035726507936508e6 * pow(1. - sh, 2) +
                    1.1122724390358612e7 * pow(1. - sh, 3) +
                    3.3373027717813052e7 * pow(1. - sh, 4)) *
                    pow(log(z), 2));
        }

        if (19 <= maxpow) {
            if (sh < .900001)
                res += -6.708357747431788e-8 * pow(3.141592653589793, 2) * pow(sh, -17)*
                (109395. + 2.16216e6 * sh + 2.0430696e7 * pow(sh, 2) +
                    1.22866128e8 * pow(sh, 3) + 5.27900436e8 * pow(sh, 4) +
                    1.72236568e9 * pow(sh, 5) + 4.41295356e9 * pow(sh, 6) +
                    8.96714376e9 * pow(sh, 7) + 1.385377093e10 * pow(sh, 8) +
                    8.96714376e9 * pow(sh, 9) + 4.41295356e9 * pow(sh, 10) +
                    1.72236568e9 * pow(sh, 11) + 5.27900436e8 * pow(sh, 12) +
                    1.22866128e8 * pow(sh, 13) + 2.0430696e7 * pow(sh, 14) +
                    2.16216e6 * pow(sh, 15) + 109395. * pow(sh, 16)) * pow(z, 9.5);
            else
                res += (-30062.542641907552 - 270562.883777168 * (1. - sh) -
                    1.388889470056129e6 * pow(1. - sh, 2) -
                    5.321070047617637e6 * pow(1. - sh, 3) -
                    1.6887633329091568e7 * pow(1. - sh, 4)) * pow(z, 9.5);
        }

        if (20 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (-22436.0126984127 * pow(sh, -10) +
                    18304. * Lsh * pow(sh, -10)) -
                    769.6330091406679 * pow(-1 + sh, -3) * pow(sh, -8) +
                    640.2633744855967 * Li3sh * pow(-1 + sh, -3) * pow(sh, -8) -
                    213.42112482853224 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -8) + 6.052910052910053 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(72. - 4364. * sh + 28750. * pow(sh, 2) +
                    23168. * pow(sh, 3) - 476659. * pow(sh, 4) +
                    1.255353e6 * pow(sh, 5) - 1.649661e6 * pow(sh, 6) +
                    1.316274e6 * pow(sh, 7) - 686175. * pow(sh, 8) +
                    239883. * pow(sh, 9) - 55951. * pow(sh, 10) +
                    8372. * pow(sh, 11) - 728. * pow(sh, 12) + 28. * pow(sh, 13))
                    + 0.0009406231628453851 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 3)*
                    (-1.003446e6 + 6.399262e7 * sh -
                    5.88476654e8 * pow(sh, 2) + 1.052685443e9 * pow(sh, 3) +
                    6.558619027e9 * pow(sh, 4) -
                    3.9015984112e10 * pow(sh, 5) +
                    9.831642973e10 * pow(sh, 6) -
                    1.5050270954e11 * pow(sh, 7) +
                    1.55340604554e11 * pow(sh, 8) -
                    1.13220265218e11 * pow(sh, 9) +
                    5.9521934912e10 * pow(sh, 10) -
                    2.2692174847e10 * pow(sh, 11) +
                    6.219574195e9 * pow(sh, 12) -
                    1.194652762e9 * pow(sh, 13) + 1.5263422e8 * pow(sh, 14) -
                    1.1648401e7 * pow(sh, 15) + 401669. * pow(sh, 16)) -
                    18.158730158730158 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 4)*(1638. - 34902. * sh + 187614. * pow(sh, 2) -
                    73296. * pow(sh, 3) - 2.717613e6 * pow(sh, 4) +
                    1.2278721e7 * pow(sh, 5) - 2.8715127e7 * pow(sh, 6) +
                    4.3584072e7 * pow(sh, 7) - 4.6464222e7 * pow(sh, 8) +
                    3.6125334e7 * pow(sh, 9) - 2.0866662e7 * pow(sh, 10) +
                    9.012312e6 * pow(sh, 11) - 2.899701e6 * pow(sh, 12) +
                    684873. * pow(sh, 13) - 115255. * pow(sh, 14) +
                    13076. * pow(sh, 15) - 896. * pow(sh, 16) + 28. * pow(sh, 17)
                    ) - 0.0011757789535567313 * Li2sh * pow(-1 + sh, -11) *
                    pow(sh, -10)*(3.891888e6 - 4.2698656e7 * sh +
                    2.12860648e8 * pow(sh, 2) - 6.36197562e8 * pow(sh, 3) +
                    1.265813472e9 * pow(sh, 4) - 1.758542016e9 * pow(sh, 5) +
                    1.737624672e9 * pow(sh, 6) - 1.217575632e9 * pow(sh, 7) +
                    5.89815408e8 * pow(sh, 8) - 1.86234048e8 * pow(sh, 9) +
                    3.3715396e7 * pow(sh, 10) - 2.523664e6 * pow(sh, 11) -
                    1008. * pow(sh, 17) + 252. * pow(sh, 18) + 63. * pow(sh, 19))
                    - Lsh * (640.2633744855967 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -8) - 6.052910052910053 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(72. - 4364. * sh + 28750. * pow(sh, 2) +
                    23168. * pow(sh, 3) - 476659. * pow(sh, 4) +
                    1.255353e6 * pow(sh, 5) - 1.649661e6 * pow(sh, 6) +
                    1.316274e6 * pow(sh, 7) - 686175. * pow(sh, 8) +
                    239883. * pow(sh, 9) - 55951. * pow(sh, 10) +
                    8372. * pow(sh, 11) - 728. * pow(sh, 12) +
                    28. * pow(sh, 13)) +
                    1.0368421107202216e-8 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (-268128. - 50176. * sh + 1.5037316e7 * pow(sh, 2) +
                    7.0758368e7 * pow(sh, 3) + 6.454424e7 * pow(sh, 4) -
                    3.47363296e8 * pow(sh, 5) -
                    9.86787592e8 * pow(sh, 6) - 3.5646688e7 * pow(sh, 7) +
                    448. * (-1.08098395051e11 + 9.8513415e8 * Lshb) *
                    pow(sh, 8) - 2464. *
                    (-2.16214325051e11 + 1.9651086e9 * Lshb) * pow(sh, 9)
                    + (-2.664090635973398e15 +
                    2.41383974832e13 * Lshb -
                    5.1459408e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 10) +
                    (7.994327088697714e15 - 7.21448035308e13 * Lshb +
                    4.11675264e11 * pow(3.141592653589793, 2)) *
                    pow(sh, 11) +
                    28. * (-5.71247555169563e14 +
                    5.1265445616e12 * Lshb -
                    5.1459408e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 12) +
                    112. * (2.00040160003213e14 -
                    1.7805237912e12 * Lshb +
                    2.5729704e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 13) +
                    14. * (-1.601332890109447e15 +
                    1.40747598432e13 * Lshb -
                    2.5729704e11 * pow(3.141592653589793, 2)) *
                    pow(sh, 14) +
                    112. * (1.43081208030667e14 -
                    1.2327953274e12 * Lshb +
                    2.5729704e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 15) +
                    28. * (-2.86396712598419e14 +
                    2.3887524024e12 * Lshb -
                    5.1459408e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 16) +
                    32. * (8.3604554894621e13 - 6.599669076e11 * Lshb +
                    1.2864852e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 17) +
                    (-5.35506196250843e14 + 3.8233259064e12 * Lshb -
                    5.1459408e10 * pow(3.141592653589793, 2)) *
                    pow(sh, 18) -
                    252. * (-1.93318721627e11 + 1.1356488e9 * Lshb) *
                    pow(sh, 19) - 3.861655812e9 * pow(sh, 20) -
                    5.0733144e7 * pow(sh, 21) +
                    8.74592334e8 * pow(sh, 22) +
                    2.56502232e8 * pow(sh, 23) -
                    1.152693e8 * pow(sh, 24) -
                    1800. * (20357. + 63504. * Lshb) * pow(sh, 25) +
                    11025. * (461. + 2592. * Lshb) * pow(sh, 26) +
                    11025. * (17. + 648. * Lshb) * pow(sh, 27))) -
                    0.000013064210595074793 * pow(Lsh, 2) * pow(-1 + sh, -12) *
                    pow(sh, -18)*(1008. + 8848. * sh + 23688. * pow(sh, 2) -
                    17352. * pow(sh, 3) - 212592. * pow(sh, 4) -
                    311184. * pow(sh, 5) + 400176. * pow(sh, 6) +
                    1.492176e6 * pow(sh, 7) - 1.8665467128e10 * pow(sh, 8) +
                    2.23865173224e11 * pow(sh, 9) -
                    3. * (4.10179236011e11 + 8.16816e6 * Lshb) * pow(sh, 10) +
                    1053. * (3.893290287e9 + 209440. * Lshb) * pow(sh, 11) -
                    234. * (3.9404650781e10 + 3.76992e6 * Lshb) *
                    pow(sh, 12) + 1848. *
                    (7.981764103e9 + 1.11384e6 * Lshb) * pow(sh, 13) -
                    5040. * (3.414494773e9 + 612612. * Lshb) * pow(sh, 14) +
                    3528. * (4.182077137e9 + 875160. * Lshb) * pow(sh, 15) -
                    1344. * (6.864759043e9 + 1.53153e6 * Lshb) * pow(sh, 16) +
                    1224. * (3.352868227e9 + 720720. * Lshb) * pow(sh, 17) -
                    18. * (6.8479648117e10 + 1.225224e7 * Lshb) *
                    pow(sh, 18) + (2.24483274986e11 + 2.450448e7 * Lshb) *
                    pow(sh, 19) - 1.8748455264e10 * pow(sh, 20) -
                    45360. * pow(sh, 25) + 56700. * pow(sh, 26) -
                    8505. * pow(sh, 27) - 2835. * pow(sh, 28)) +
                    0.000013064210595074793 * pow(lz, 2) * pow(sh, -18)*
                    (-252. - 5236. * sh - 52122. * pow(sh, 2) -
                    330990. * pow(sh, 3) - 1.50586e6 * pow(sh, 4) -
                    5.221788e6 * pow(sh, 5) - 1.4306214e7 * pow(sh, 6) -
                    3.1500898e7 * pow(sh, 7) + 1.8610077024e10 * pow(sh, 8) +
                    3.675672e7 * pow(sh, 9) - 1.1865305e7 * pow(sh, 10) +
                    7.819275e6 * pow(sh, 11) + 2.920308e7 * pow(sh, 12) +
                    3.763735e7 * pow(sh, 13) + 3.5618775e7 * pow(sh, 14) +
                    2.7424047e7 * pow(sh, 15) + 1.5311086e7 * pow(sh, 16) +
                    252. * pow(sh, 17) + 5.397678e7 * pow(sh, 18) +
                    5.722002e7 * pow(sh, 19) + 6.231654e7 * pow(sh, 20) +
                    6.996132e7 * pow(sh, 21) + 2.7057888e8 * pow(sh, 22) -
                    3.18810492e9 * pow(sh, 23) + 7.5729654e9 * pow(sh, 24) +
                    4.194296964e10 * pow(sh, 25) -
                    2.0547002619e11 * pow(sh, 26) +
                    3.8218629735e11 * pow(sh, 27) -
                    4.0430890071e11 * pow(sh, 28) +
                    2.7416659842e11 * pow(sh, 29) -
                    1.2521582073e11 * pow(sh, 30) +
                    3.911266359e10 * pow(sh, 31) -
                    8.26458633e9 * pow(sh, 32) + 1.13189076e9 * pow(sh, 33) -
                    9.081072e7 * pow(sh, 34) + 3.24324e6 * pow(sh, 35)) -
                    lz * (-18304. * lmu * pow(sh, -10) -
                    320.13168724279836 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -8) - 12.105820105820106 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(72. - 4364. * sh + 28750. * pow(sh, 2) +
                    23168. * pow(sh, 3) - 476659. * pow(sh, 4) +
                    1.255353e6 * pow(sh, 5) - 1.649661e6 * pow(sh, 6) +
                    1.316274e6 * pow(sh, 7) - 686175. * pow(sh, 8) +
                    239883. * pow(sh, 9) - 55951. * pow(sh, 10) +
                    8372. * pow(sh, 11) - 728. * pow(sh, 12) +
                    28. * pow(sh, 13)) -
                    0.000026128421190149586 * Lsh * pow(-1 + sh, -11) *
                    pow(sh, -18)*(-504. - 4928. * sh - 16772. * pow(sh, 2) -
                    8096. * pow(sh, 3) + 98200. * pow(sh, 4) +
                    253792. * pow(sh, 5) + 53704. * pow(sh, 6) -
                    692384. * pow(sh, 7) + 1.8664647232e10 * pow(sh, 8) -
                    2.05207139984e11 * pow(sh, 9) +
                    1.025430782207e12 * pow(sh, 10) -
                    3.074555676226e12 * pow(sh, 11) +
                    6.145992007736e12 * pow(sh, 12) -
                    8.60044812004e12 * pow(sh, 13) +
                    8.596678573448e12 * pow(sh, 14) -
                    6.137611319224e12 * pow(sh, 15) +
                    3.067041035912e12 * pow(sh, 16) -
                    1.021522277272e12 * pow(sh, 17) +
                    2.04049226678e11 * pow(sh, 18) -
                    1.8515048904e10 * pow(sh, 19) +
                    864864. * pow(sh, 20) + 769608. * pow(sh, 21) -
                    13608. * pow(sh, 22) - 222264. * pow(sh, 23) -
                    69120. * pow(sh, 24) - 9000. * pow(sh, 25) +
                    19215. * pow(sh, 26) + 315. * pow(sh, 27)) -
                    4.265084782888612e-12 * pow(-1 + sh, -10) * pow(sh, -18)*
                    (3.25909584e8 + 3.86898512e8 * sh -
                    1.7890959086e10 * pow(sh, 2) -
                    1.0389775539e11 * pow(sh, 3) -
                    1.8235127911e11 * pow(sh, 4) +
                    2.39868807178e11 * pow(sh, 5) +
                    1.439309125254e12 * pow(sh, 6) +
                    1.482637674518e12 * pow(sh, 7) +
                    1.1773533109183245e17 * pow(sh, 8) -
                    1.1762786134932733e18 * pow(sh, 9) +
                    5.287945685290232e18 * pow(sh, 10) -
                    1.408573123970191e19 * pow(sh, 11) +
                    2.461891448027823e19 * pow(sh, 12) -
                    2.949733724851667e19 * pow(sh, 13) +
                    2.4532821652619735e19 * pow(sh, 14) -
                    1.3981789937805554e19 * pow(sh, 15) +
                    5.223681256860368e18 * pow(sh, 16) -
                    1.1543710933218002e18 * pow(sh, 17) +
                    1.1493955705739667e17 * pow(sh, 18) -
                    4.556468500926695e15 * pow(sh, 19) +
                    1.7572146654042552e16 * pow(sh, 20) -
                    3.9615878221273704e16 * pow(sh, 21) +
                    5.638676809242492e16 * pow(sh, 22) -
                    4.406121643569693e16 * pow(sh, 23) +
                    3.2318412281568824e16 * pow(sh, 24) -
                    4.259492022110168e17 * pow(sh, 25) +
                    2.1201430825186813e18 * pow(sh, 26) -
                    2.4923037486423537e18 * pow(sh, 27) -
                    1.7838580318483542e19 * pow(sh, 28) +
                    1.0701104247446746e20 * pow(sh, 29) -
                    3.1929857696090705e20 * pow(sh, 30) +
                    6.474487284281146e20 * pow(sh, 31) -
                    9.760291519177703e20 * pow(sh, 32) +
                    1.1392452492311442e21 * pow(sh, 33) -
                    1.0520263768751638e21 * pow(sh, 34) +
                    7.775724274489533e20 * pow(sh, 35) -
                    4.624318941820542e20 * pow(sh, 36) +
                    2.213656928475123e20 * pow(sh, 37) -
                    8.494727327998501e19 * pow(sh, 38) +
                    2.5900145606169035e19 * pow(sh, 39) -
                    6.181939718636802e18 * pow(sh, 40) +
                    1.1286121824774998e18 * pow(sh, 41) -
                    1.5195925385464826e17 * pow(sh, 42) +
                    1.420123992415128e16 * pow(sh, 43) -
                    8.2168151561496e14 * pow(sh, 44) +
                    2.214605244852e13 * pow(sh, 45))) -
                    6.962130651845887e-19 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (-3.16414088198208e14 + 9.74539823921664e14 * sh +
                    8.087033764735926e15 * pow(sh, 2) -
                    5.684694862939435e16 * pow(sh, 3) -
                    4.0319420043801754e17 * pow(sh, 4) -
                    4.882604186351892e17 * pow(sh, 5) +
                    1.9325128069129482e18 * pow(sh, 6) +
                    6.292691026868566e18 * pow(sh, 7) +
                    2.792081386627729e23 * pow(sh, 8) -
                    3.0653776012724437e24 * pow(sh, 9) +
                    1.5296980754272814e25 * pow(sh, 10) -
                    4.580270398519267e25 * pow(sh, 11) +
                    9.143594067412906e25 * pow(sh, 12) -
                    1.2779495928946286e26 * pow(sh, 13) +
                    1.2762486136562552e26 * pow(sh, 14) -
                    9.110246500944438e25 * pow(sh, 15) +
                    4.558305919883703e25 * pow(sh, 16) -
                    1.5244656041943856e25 * pow(sh, 17) +
                    3.073171046299431e24 * pow(sh, 18) -
                    2.6184927906686532e23 * pow(sh, 19) -
                    1.0487308963151102e23 * pow(sh, 20) +
                    2.7045906540143195e23 * pow(sh, 21) -
                    4.4609820546041925e23 * pow(sh, 22) +
                    4.3341866014896366e23 * pow(sh, 23) -
                    3.0284128932535685e23 * pow(sh, 24) +
                    2.8502065219122033e24 * pow(sh, 25) -
                    1.6744213714265902e25 * pow(sh, 26) +
                    3.4546092096924117e25 * pow(sh, 27) +
                    6.6958214497636675e25 * pow(sh, 28) -
                    6.719624033223081e26 * pow(sh, 29) +
                    2.3634332855143025e27 * pow(sh, 30) -
                    5.406861258181357e27 * pow(sh, 31) +
                    9.10419041097793e27 * pow(sh, 32) -
                    1.1865952156817548e28 * pow(sh, 33) +
                    1.2283961231268607e28 * pow(sh, 34) -
                    1.0245250602869844e28 * pow(sh, 35) +
                    6.935097181125567e27 * pow(sh, 36) -
                    3.819594455600949e27 * pow(sh, 37) +
                    1.7090015768187537e27 * pow(sh, 38) -
                    6.177750381749111e26 * pow(sh, 39) +
                    1.7862394817725466e26 * pow(sh, 40) -
                    4.0667139734465495e25 * pow(sh, 41) +
                    7.117942930727479e24 * pow(sh, 42) -
                    9.229373088621336e23 * pow(sh, 43) +
                    8.339200912205272e22 * pow(sh, 44) -
                    4.6814118287209613e21 * pow(sh, 45) +
                    1.2279937968685318e20 * pow(sh, 46) -
                    6.2548910424e12 * pow(3.141592653589793, 2)*
                    (-1512. - 14784. * sh - 50316. * pow(sh, 2) -
                    24288. * pow(sh, 3) + 294600. * pow(sh, 4) +
                    761376. * pow(sh, 5) + 161112. * pow(sh, 6) -
                    2.077152e6 * pow(sh, 7) +
                    5.7064210896e10 * pow(sh, 8) -
                    6.27572398992e11 * pow(sh, 9) +
                    3.137096776433e12 * pow(sh, 10) -
                    9.409743553774e12 * pow(sh, 11) +
                    1.8818560922504e13 * pow(sh, 12) -
                    2.6347616980552e13 * pow(sh, 13) +
                    2.6351485677944e13 * pow(sh, 14) -
                    1.8825939544384e13 * pow(sh, 15) +
                    9.414254480792e12 * pow(sh, 16) -
                    3.137901366712e12 * pow(sh, 17) +
                    6.27172370726e11 * pow(sh, 18) -
                    5.6235529592e10 * pow(sh, 19) -
                    3.03847082e9 * pow(sh, 20) +
                    7.83321994e9 * pow(sh, 21) -
                    1.36334135e10 * pow(sh, 22) +
                    2.612527414e10 * pow(sh, 23) -
                    1.2043334018e11 * pow(sh, 24) +
                    5.11152445252e11 * pow(sh, 25) -
                    7.00772118731e11 * pow(sh, 26) -
                    5.082162807869e12 * pow(sh, 27) +
                    3.7496386828908e13 * pow(sh, 28) -
                    1.3686666259266e14 * pow(sh, 29) +
                    3.4205865415722e14 * pow(sh, 30) -
                    6.4118721989322e14 * pow(sh, 31) +
                    9.3979081997658e14 * pow(sh, 32) -
                    1.10202690808782e15 * pow(sh, 33) +
                    1.04788397968254e15 * pow(sh, 34) -
                    8.141721939351e14 * pow(sh, 35) +
                    5.1869434238622e14 * pow(sh, 36) -
                    2.7096438795426e14 * pow(sh, 37) +
                    1.1569642322238e14 * pow(sh, 38) -
                    4.010774591538e13 * pow(sh, 39) +
                    1.116674149734e13 * pow(sh, 40) -
                    2.4564705165e12 * pow(sh, 41) +
                    4.1666228604e11 * pow(sh, 42) -
                    5.249021778e10 * pow(sh, 43) +
                    4.61837376e9 * pow(sh, 44) -
                    2.5297272e8 * pow(sh, 45) + 6.48648e6 * pow(sh, 46)))) *
                pow(z, 10);
            else
                res += pow(z, 10)*(-2.2176369034656202e6 -
                    2.1313657032968003e7 * (1. - sh) -
                    1.1510510548217365e8 * pow(1. - sh, 2) -
                    4.5152247350887704e8 * pow(1. - sh, 3) -
                    1.4313252283712986e9 * pow(1. - sh, 4) +
                    log(muh)*(22436.0126984127 +
                    242664.12698412698 * (1. - sh) +
                    1.4261726984126985e6 * pow(1. - sh, 2) +
                    6.040264126984127e6 * pow(1. - sh, 3) +
                    2.0637578412698414e7 * pow(1. - sh, 4)) +
                    log(z)*(481985.82617224846 +
                    5.600617111968864e6 * (1. - sh) +
                    3.2763678189123973e7 * pow(1. - sh, 2) +
                    1.3890575176721412e8 * pow(1. - sh, 3) +
                    4.790156868849013e8 * pow(1. - sh, 4) +
                    log(muh)*(18304. + 183040. * (1. - sh) +
                    1.00672e6 * pow(1. - sh, 2) +
                    4.02688e6 * pow(1. - sh, 3) +
                    1.308736e7 * pow(1. - sh, 4))) +
                    (245966.3111111111 +
                    2.4484144197530863e6 * (1. - sh) +
                    1.3337867328395061e7 * pow(1. - sh, 2) +
                    5.3335035751205176e7 * pow(1. - sh, 3) +
                    1.733848092131687e8 * pow(1. - sh, 4)) * pow(log(z), 2)
                    );
        }
    }
    return res;
}

double F_1::F_19im(double muh, double z, double sh, int maxpow) 
{
    double lz = log(z);
    double lmu = log(muh);
    double Lsh = log(sh);
    double Lshb = log(1. - sh);
    double Li2sh = real(Li2(sh));
    double Li3sh = real(Li3(sh));


    double res = 0;

    if (sh < 0.4) {
        res = 3.67166 + 0.20685383727340204 * lmu - 0.103427 * Lsh +
                0.93084 * lz - 0.310281 * sh - 0.93084 * lz * sh - 16.2155 * z -
                5.58505 * lz * z - 30.7987 * sh * z - 1.86168 * Lsh * sh * z -
                16.75515 * lz * sh * z - 1.861685 * z * pow(lz, 2) -
                1.861685 * sh * z * pow(lz, 2) - 1.36524 * pow(sh, 2) -
                0.93084 * lz * pow(sh, 2) - 52.2081 * z * pow(sh, 2) -
                3.72337 * Lsh * z * pow(sh, 2) - 26.0636 * lz * z * pow(sh, 2) -
                1.861685 * z * pow(lz, 2) * pow(sh, 2) - 1.72206 * pow(sh, 3) -
                0.93084 * lz * pow(sh, 3) - 76.6479 * z * pow(sh, 3) -
                5.58505 * Lsh * z * pow(sh, 3) - 34.75145 * lz * z * pow(sh, 3) -
                1.861685 * z * pow(lz, 2) * pow(sh, 3) -
                0.00295505 * pow(sh, 3) * pow(z, -3) -
                0.0199466 * pow(sh, 2) * pow(z, -2) +
                0.00369382 * pow(sh, 3) * pow(z, -2) - 0.186168 * sh * pow(z, -1) +
                0.0620562 * pow(sh, 2) * pow(z, -1) +
                0.0871741 * pow(sh, 3) * pow(z, -1) + 26.7517 * pow(z, 2) -
                1.86168 * Lsh * pow(z, 2) - 7.44675 * lz * pow(z, 2) -
                3.72337 * Lsh * lz * pow(z, 2) + 66.1439 * sh * pow(z, 2) -
                7.44674 * Lsh * sh * pow(z, 2) - 33.5103 * lz * sh * pow(z, 2) -
                14.8935 * Lsh * lz * sh * pow(z, 2) -
                7.44675 * pow(lz, 2) * pow(z, 2) -
                20.478525 * sh * pow(lz, 2) * pow(z, 2) +
                108.713 * pow(sh, 2) * pow(z, 2) -
                22.3402 * Lsh * pow(sh, 2) * pow(z, 2) -
                81.914 * lz * pow(sh, 2) * pow(z, 2) -
                33.5103 * Lsh * lz * pow(sh, 2) * pow(z, 2) -
                39.0955 * pow(lz, 2) * pow(sh, 2) * pow(z, 2) +
                148.481 * pow(sh, 3) * pow(z, 2) -
                49.6449 * Lsh * pow(sh, 3) * pow(z, 2) -
                155.761 * lz * pow(sh, 3) * pow(z, 2) -
                59.574 * Lsh * lz * pow(sh, 3) * pow(z, 2) -
                63.29725 * pow(lz, 2) * pow(sh, 3) * pow(z, 2) -
                23.6892 * pow(z, 3) - 1.65483 * Lsh * pow(z, 3) +
                17.3757 * lz * pow(z, 3) + 4.96449 * Lsh * lz * pow(z, 3) -
                63.7828 * sh * pow(z, 3) - 3.72337 * Lsh * sh * pow(z, 3) +
                67.0205 * lz * sh * pow(z, 3) + 22.3402 * Lsh * lz * sh * pow(z, 3) -
                106.832 * pow(sh, 2) * pow(z, 3) +
                165.0695 * lz * pow(sh, 2) * pow(z, 3) +
                59.574 * Lsh * lz * pow(sh, 2) * pow(z, 3) -
                135.118 * pow(sh, 3) * pow(z, 3) +
                18.6168 * Lsh * pow(sh, 3) * pow(z, 3) +
                326.4155 * lz * pow(sh, 3) * pow(z, 3) +
                124.1125 * Lsh * lz * pow(sh, 3) * pow(z, 3);
    } else {
        if (0 <= maxpow) {
            if (sh < .900001)
                res += (-3.5165152336478345 * lmu -
                    0.05171345931835051 * pow(-1 + sh, -2)*
                    (130. - 269. * sh + 121. * pow(sh, 2)) +
                    0.10342691863670102 * Lsh * pow(-1 + sh, -3)*
                    (-8. + 33. * sh - 51. * pow(sh, 2) + 17. * pow(sh, 3))) *
                pow(z, 0);
            else
                res += (-5.636767065700205 - 1.3704066719362884 * (1. - sh) -
                    3.5165152336478345 * log(muh) -
                    0.5998761280928658 * pow(1. - sh, 2) -
                    0.36888934313756694 * pow(1. - sh, 3) -
                    0.26226111511449185 * pow(1. - sh, 4)) * pow(z, 0);
        }

        if (1 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (2 <= maxpow) {
            if (sh < .900001)
                res += (17.902805978847187 * sh * pow(-1 + sh, -3) -
                    14.893476283684944 * Li3sh * sh * pow(-1 + sh, -3) +
                    1.861684535460618 * Li2sh * (-7. + 5. * sh) *
                    pow(-1 + sh, -3) + 1.241123023640412 * sh * pow(Lsh, 3) *
                    pow(-1 + sh, -3) - 3.723369070921236 * pow(Lsh, 2) *
                    pow(-1 + sh, -2) - Lsh *
                    (-7.446738141842472 * Li2sh * sh * pow(-1 + sh, -3) +
                    1.861684535460618 * pow(-1 + sh, -3)*
                    (-5. + Lshb * (7. - 5. * sh) +
                    sh * (3. - 2. * pow(3.141592653589793, 2)) + pow(sh, 2)
                    )) - 0.310280755910103 * pow(-1 + sh, -3) *
                    pow(sh, -1)*(-306. +
                    sh * (912. - 11. * pow(3.141592653589793, 2)) +
                    5. * (-180. + pow(3.141592653589793, 2)) * pow(sh, 2) +
                    (294. + 4. * pow(3.141592653589793, 2)) * pow(sh, 3))) *
                pow(z, 1);
            else
                res += (-101.4595749819256 - 99.28872579089392 * (1. - sh) -
                    98.33919598335144 * pow(1. - sh, 2) -
                    97.78315475935152 * pow(1. - sh, 3) -
                    97.41019960703451 * pow(1. - sh, 4)) * pow(z, 1);
        }

        if (3 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (4 <= maxpow) {
            if (sh < .900001)
                res += (-1.861684535460618 * Li2sh * (3. + 2. * sh) * pow(-1 + sh, -3) +
                    1.861684535460618 * pow(Lsh, 2) * pow(-1 + sh, -2) +
                    22.340214425527417 * lmu * pow(sh, -2) -
                    lz * (-13.031791748224327 * Lsh * pow(-1 + sh, -3) -
                    0.930842267730309 * pow(-1 + sh, -2) * pow(sh, -2)*
                    (193. - 393. * sh + 186. * pow(sh, 2))) +
                    0.1551403779550515 * pow(-1 + sh, -3) * pow(sh, -2)*
                    (441. - 1368. * sh +
                    3. * (437. + 2. * pow(3.141592653589793, 2)) * pow(sh, 2) +
                    4. * (-111. + pow(3.141592653589793, 2)) * pow(sh, 3) +
                    24. * pow(sh, 4)) -
                    0.930842267730309 * Lsh * pow(-1 + sh, -4) * pow(sh, -2)*
                    (191. - 777. * sh + (1175. - 6. * Lshb) * pow(sh, 2) +
                    (-797. + 2. * Lshb) * pow(sh, 3) +
                    (202. + 4. * Lshb) * pow(sh, 4))) * pow(z, 2);
            else
                res += (-74.72594871501649 + 29.277574993084137 * (1. - sh) +
                    223.8210232757528 * pow(1. - sh, 2) +
                    478.4917845842381 * pow(1. - sh, 3) +
                    778.1470920996388 * pow(1. - sh, 4) +
                    log(muh)*(22.340214425527417 +
                    44.680428851054835 * (1. - sh) +
                    67.02064327658225 * pow(1. - sh, 2) +
                    89.36085770210967 * pow(1. - sh, 3) +
                    111.70107212763709 * pow(1. - sh, 4)) +
                    log(z)*(177.48059238057894 +
                    356.0471674068432 * (1. - sh) +
                    535.0481354913816 * pow(1. - sh, 2) +
                    714.2663001050572 * pow(1. - sh, 3) +
                    893.6085770210967 * pow(1. - sh, 4))) * pow(z, 2);
        }

        if (5 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (6 <= maxpow) {
            if (sh < .900001)
                res += (29.786952567369887 * lmu * pow(sh, -3) +
                    3.723369070921236 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -1) - 1.241123023640412 * Li2sh * pow(-1 + sh, -4) *
                    pow(sh, -1)*(3. + sh + 2. * pow(sh, 2)) -
                    0.10342691863670102 * Lsh * pow(-1 + sh, -5) * pow(sh, -4)*
                    (12. - 3754. * sh + 18707. * pow(sh, 2) -
                    (37645. + 36. * Lshb) * pow(sh, 3) +
                    6. * (6335. + 4. * Lshb) * pow(sh, 4) -
                    6. * (3213. + 2. * Lshb) * pow(sh, 5) +
                    24. * (163. + Lshb) * pow(sh, 6)) -
                    lz * (-1.241123023640412 * Lsh * pow(-1 + sh, -4) *
                    pow(sh, -1)*(3. + sh + 2. * pow(sh, 2)) +
                    0.10342691863670102 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (-6. + 3748. * sh - 11253. * pow(sh, 2) +
                    11385. * pow(sh, 3) - 3841. * pow(sh, 4) +
                    27. * pow(sh, 5) + 12. * pow(sh, 6))) +
                    0.0172378197727835 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (30. + 12740. * sh - 51314. * pow(sh, 2) +
                    36. * (2123. + pow(3.141592653589793, 2)) * pow(sh, 3) +
                    (-50297. + 12. * pow(3.141592653589793, 2)) *
                    pow(sh, 4) + 8. * (1474. +
                    3. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    381. * pow(sh, 6) + 24. * pow(sh, 7))) * pow(z, 3);
            else
                res += (211.9165849406685 + 1019.1512736698835 * (1. - sh) +
                    2614.8727490925203 * pow(1. - sh, 2) +
                    5126.049113728145 * pow(1. - sh, 3) +
                    8646.890723525932 * pow(1. - sh, 4) +
                    log(muh)*(29.786952567369887 +
                    89.36085770210967 * (1. - sh) +
                    178.72171540421934 * pow(1. - sh, 2) +
                    297.8695256736989 * pow(1. - sh, 3) +
                    446.80428851054836 * pow(1. - sh, 4)) +
                    log(z)*(378.2322414544156 +
                    1142.5157994121814 * (1. - sh) +
                    2290.864877035473 * pow(1. - sh, 2) +
                    3822.6086768805603 * pow(1. - sh, 3) +
                    5737.100041942259 * pow(1. - sh, 4))) * pow(z, 3);
        }

        if (7 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (8 <= maxpow) {
            if (sh < .900001)
                res += (67.02064327658225 * lmu * pow(sh, -4) +
                    6.2056151182020605 * Li2sh * pow(-1 + sh, -3) * pow(sh, -2) +
                    6.2056151182020605 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -2) - lz *
                    (6.2056151182020605 * Lsh * pow(-1 + sh, -3) * pow(sh, -2) +
                    0.10342691863670102 * pow(-1 + sh, -2) * pow(sh, -6)*
                    (3. + 19. * sh - 9836. * pow(sh, 2) +
                    19672. * pow(sh, 3) - 9987. * pow(sh, 4) +
                    39. * pow(sh, 5) + 30. * pow(sh, 6))) +
                    0.10342691863670102 * Lsh * pow(-1 + sh, -6) * pow(sh, -6)*
                    (6. + 14. * sh - 9909. * pow(sh, 2) + 59043. * pow(sh, 3) -
                    3. * (49203. + 20. * Lshb) * pow(sh, 4) +
                    3. * (65783. + 60. * Lshb) * pow(sh, 5) -
                    3. * (49547. + 60. * Lshb) * pow(sh, 6) +
                    (59839. + 60. * Lshb) * pow(sh, 7) - 10062. * pow(sh, 8)) -
                    0.00861890988639175 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (21. - 10. * sh + 97976. * pow(sh, 2) -
                    490846. * pow(sh, 3) +
                    (981523. + 120. * pow(3.141592653589793, 2)) *
                    pow(sh, 4) - 8. * (122341. +
                    30. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    2. * (242981. + 60. * pow(3.141592653589793, 2)) *
                    pow(sh, 6) - 94596. * pow(sh, 7) - 678. * pow(sh, 8) -
                    408. * pow(sh, 9) + 144. * pow(sh, 10))) * pow(z, 4);
            else
                res += (818.5206340908517 + 4293.785518767847 * (1. - sh) +
                    12756.23214766427 * pow(1. - sh, 2) +
                    28863.589912766278 * pow(1. - sh, 3) +
                    55512.63989848175 * pow(1. - sh, 4) +
                    log(muh)*(67.02064327658225 +
                    268.082573106329 * (1. - sh) +
                    670.2064327658226 * pow(1. - sh, 2) +
                    1340.4128655316451 * pow(1. - sh, 3) +
                    2345.722514680379 * pow(1. - sh, 4)) +
                    log(z)*(997.2423494950712 +
                    4001.6909089725987 * (1. - sh) +
                    10016.483362289946 * pow(1. - sh, 2) +
                    20040.827170396282 * pow(1. - sh, 3) +
                    35069.73361639894 * pow(1. - sh, 4))) * pow(z, 4);
        }

        if (9 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (10 <= maxpow) {
            if (sh < .900001)
                res += (178.72171540421934 * lmu * pow(sh, -5) +
                    13.031791748224327 * Li2sh * pow(-1 + sh, -3) * pow(sh, -3) +
                    13.031791748224327 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -3) - lz *
                    (13.031791748224327 * Lsh * pow(-1 + sh, -3) * pow(sh, -3) +
                    0.0103426918636701 * pow(-1 + sh, -2) * pow(sh, -8)*
                    (18. + 153. * sh + 543. * pow(sh, 2) -
                    302141. * pow(sh, 3) + 603346. * pow(sh, 4) -
                    304124. * pow(sh, 5) + 60. * pow(sh, 6) +
                    690. * pow(sh, 7) + 195. * pow(sh, 8))) -
                    0.0103426918636701 * Lsh * pow(-1 + sh, -7) * pow(sh, -8)*
                    (36. + 126. * sh - 84. * pow(sh, 2) - 303968. * pow(sh, 3) +
                    2.117159e6 * pow(sh, 4) -
                    180. * (35233. + 7. * Lshb) * pow(sh, 5) +
                    2. * (5.286917e6 + 2520. * Lshb) * pow(sh, 6) -
                    56. * (189131. + 135. * Lshb) * pow(sh, 7) +
                    24. * (265547. + 210. * Lshb) * pow(sh, 8) -
                    7. * (304727. + 180. * Lshb) * pow(sh, 9) +
                    305864. * pow(sh, 10)) -
                    0.00017237819772783502 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (-486. + 108. * sh + 8742. * pow(sh, 2) -
                    1.6340578e7 * pow(sh, 3) + 9.7955934e7 * pow(sh, 4) -
                    2.44785504e8 * pow(sh, 5) +
                    12600. * pow(3.141592653589793, 2) * pow(-1 + sh, 3) *
                    pow(sh, 5) + 3.26063492e8 * pow(sh, 6) -
                    2.44009482e8 * pow(sh, 7) + 9.7070643e7 * pow(sh, 8) -
                    1.5960394e7 * pow(sh, 9) + 92700. * pow(sh, 10) -
                    88650. * pow(sh, 11) + 4275. * pow(sh, 12) +
                    5400. * pow(sh, 13))) * pow(z, 5);
            else
                res += (2736.4139567610805 + 16812.602775356263 * (1. - sh) +
                    58181.13183757553 * pow(1. - sh, 2) +
                    151135.2971056933 * pow(1. - sh, 3) +
                    329016.24546199996 * pow(1. - sh, 4) +
                    log(muh)*(178.72171540421934 +
                    893.6085770210967 * (1. - sh) +
                    2680.8257310632903 * pow(1. - sh, 2) +
                    6255.260039147677 * pow(1. - sh, 3) +
                    12510.520078295354 * pow(1. - sh, 4)) +
                    log(z)*(3064.787823810179 +
                    15358.380282956916 * (1. - sh) +
                    46110.04743391064 * pow(1. - sh, 2) +
                    107597.09199613279 * pow(1. - sh, 3) +
                    215122.81941840626 * pow(1. - sh, 4))) * pow(z, 5);
        }

        if (11 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (12 <= maxpow) {
            if (sh < .900001)
                res += (521.2716699289731 * lmu * pow(sh, -6) +
                    31.276300195738386 * Li2sh * pow(-1 + sh, -3) * pow(sh, -4) +
                    31.276300195738386 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -4) - lz *
                    (31.276300195738386 * Lsh * pow(-1 + sh, -3) * pow(sh, -4) +
                    0.0020685383727340203 * pow(-1 + sh, -2) * pow(sh, -10)*
                    (60. + 636. * sh + 2976. * pow(sh, 2) +
                    7776. * pow(sh, 3) - 4.948624e6 * pow(sh, 4) +
                    9.874856e6 * pow(sh, 5) - 4.959625e6 * pow(sh, 6) -
                    4665. * pow(sh, 7) + 6585. * pow(sh, 8) +
                    4185. * pow(sh, 9) + 720. * pow(sh, 10))) -
                    0.0020685383727340203 * Lsh * pow(-1 + sh, -8) * pow(sh, -10)*
                    (-120. - 552. * sh - 120. * pow(sh, 2) + 3480. * pow(sh, 3) +
                    4.96582e6 * pow(sh, 4) - 3.962954e7 * pow(sh, 5) +
                    (1.38486043e8 + 15120. * Lshb) * pow(sh, 6) -
                    5. * (5.5369147e7 + 15120. * Lshb) * pow(sh, 7) +
                    160. * (2.163772e6 + 945. * Lshb) * pow(sh, 8) -
                    160. * (1.733072e6 + 945. * Lshb) * pow(sh, 9) +
                    10. * (1.3891091e7 + 7560. * Lshb) * pow(sh, 10) -
                    2. * (1.9896743e7 + 7560. * Lshb) * pow(sh, 11) +
                    4.99004e6 * pow(sh, 12)) -
                    0.000034475639545567 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (1320. - 96. * sh - 30636. * pow(sh, 2) -
                    70896. * pow(sh, 3) + 2.79790864e8 * pow(sh, 4) -
                    1.954972576e9 * pow(sh, 5) + 5.859826086e9 * pow(sh, 6) +
                    151200. * pow(3.141592653589793, 2) * pow(-1 + sh, 4) *
                    pow(sh, 6) - 9.758058674e9 * pow(sh, 7) +
                    9.746085686e9 * pow(sh, 8) - 5.835456624e9 * pow(sh, 9) +
                    1.937908841e9 * pow(sh, 10) - 2.7490172e8 * pow(sh, 11) -
                    545670. * pow(sh, 12) + 1.17158e6 * pow(sh, 13) -
                    783395. * pow(sh, 14) + 77910. * pow(sh, 15) +
                    33600. * pow(sh, 16))) * pow(z, 6);
            else
                res += (9385.786258697912 + 66570.34555920382 * (1. - sh) +
                    263383.6903024927 * pow(1. - sh, 2) +
                    772694.2159831354 * pow(1. - sh, 3) +
                    1.8782424783479243e6 * pow(1. - sh, 4) +
                    log(muh)*(521.2716699289731 +
                    3127.6300195738386 * (1. - sh) +
                    10946.705068508434 * pow(1. - sh, 2) +
                    29191.213516022493 * pow(1. - sh, 3) +
                    65680.23041105061 * pow(1. - sh, 4)) +
                    log(z)*(10043.374361135488 +
                    60362.48367588531 * (1. - sh) +
                    211373.05579784894 * pow(1. - sh, 2) +
                    563598.0400557054 * pow(1. - sh, 3) +
                    1.2674832355395108e6 * pow(1. - sh, 4))) * pow(z, 6);
        }

        if (13 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (14 <= maxpow) {
            if (sh < .900001)
                res += (1608.495438637974 * lmu * pow(sh, -7) +
                    81.9141195602672 * Li2sh * pow(-1 + sh, -3) * pow(sh, -5) +
                    81.9141195602672 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -5) - lz *
                    (81.9141195602672 * Lsh * pow(-1 + sh, -3) * pow(sh, -5) +
                    0.0029550548181914577 * pow(-1 + sh, -2) * pow(sh, -12)*
                    (30. + 380. * sh + 2186. * pow(sh, 2) +
                    7436. * pow(sh, 3) + 15906. * pow(sh, 4) -
                    1.1774748e7 * pow(sh, 5) + 2.3488224e7 * pow(sh, 6) -
                    1.1772349e7 * pow(sh, 7) - 16681. * pow(sh, 8) +
                    9569. * pow(sh, 9) + 8694. * pow(sh, 10) +
                    3234. * pow(sh, 11) + 399. * pow(sh, 12))) -
                    0.0029550548181914577 * Lsh * pow(-1 + sh, -9) * pow(sh, -12)*
                    (60. + 340. * sh + 312. * pow(sh, 2) - 1872. * pow(sh, 3) -
                    4980. * pow(sh, 4) - 1.1794584e7 * pow(sh, 5) +
                    1.06052526e8 * pow(sh, 6) -
                    11. * (3.8516327e7 + 2520. * Lshb) * pow(sh, 7) +
                    6. * (1.64650903e8 + 27720. * Lshb) * pow(sh, 8) -
                    3. * (4.93896521e8 + 138600. * Lshb) * pow(sh, 9) +
                    (1.482302069e9 + 554400. * Lshb) * pow(sh, 10) -
                    3. * (3.29703527e8 + 138600. * Lshb) * pow(sh, 11) +
                    6. * (7.0752587e7 + 27720. * Lshb) * pow(sh, 12) -
                    2. * (5.3167621e7 + 13860. * Lshb) * pow(sh, 13) +
                    1.1839332e7 * pow(sh, 14)) -
                    7.035844805217756e-6 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (-3900. - 100. * sh + 116036. * pow(sh, 2) +
                    329570. * pow(sh, 3) - 93490. * pow(sh, 4) -
                    4.806231988e9 * pow(sh, 5) +
                    3.8385624164e10 * pow(sh, 6) -
                    1.34210338702e11 * pow(sh, 7) +
                    1.9404e6 * pow(3.141592653589793, 2) * pow(-1 + sh, 5) *
                    pow(sh, 7) + 2.6818147667e11 * pow(sh, 8) -
                    3.3489192085e11 * pow(sh, 9) +
                    2.67551973133e11 * pow(sh, 10) -
                    1.33499331779e11 * pow(sh, 11) +
                    3.8005781539e10 * pow(sh, 12) -
                    4.717142506e9 * pow(sh, 13) + 8.064665e6 * pow(sh, 14) -
                    1.8561445e7 * pow(sh, 15) + 1.7389365e7 * pow(sh, 16) -
                    7.700448e6 * pow(sh, 17) + 658266. * pow(sh, 18) +
                    264600. * pow(sh, 19))) * pow(z, 7);
            else
                res += (32964.04475533845 + 265614.39905471785 * (1. - sh) +
                    1.1828276243428339e6 * pow(1. - sh, 2) +
                    3.866649964984975e6 * pow(1. - sh, 3) +
                    1.0377006787766315e7 * pow(1. - sh, 4) +
                    log(muh)*(1608.495438637974 +
                    11259.468070465819 * (1. - sh) +
                    45037.872281863274 * pow(1. - sh, 2) +
                    135113.61684558983 * pow(1. - sh, 3) +
                    337784.0421139746 * pow(1. - sh, 4)) +
                    log(z)*(34149.58569205566 +
                    239368.34385367524 * (1. - sh) +
                    957793.7506378699 * pow(1. - sh, 2) +
                    2.872774404811201e6 * pow(1. - sh, 3) +
                    7.177895380884164e6 * pow(1. - sh, 4))) * pow(z, 7);
        }

        if (15 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (16 <= maxpow) {
            if (sh < .900001)
                res += (5160.589532296834 * lmu * pow(sh, -8) +
                    228.18933306074433 * Li2sh * pow(-1 + sh, -3) * pow(sh, -6) +
                    228.18933306074433 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -6) - lz *
                    (228.18933306074433 * Lsh * pow(-1 + sh, -3) * pow(sh, -6) +
                    0.0002110753441565327 * pow(-1 + sh, -2) * pow(sh, -14)*
                    (315. + 4635. * sh + 31515. * pow(sh, 2) +
                    130299. * pow(sh, 3) + 359619. * pow(sh, 4) +
                    665379. * pow(sh, 5) - 5.74307971e8 * pow(sh, 6) +
                    1.145449229e9 * pow(sh, 7) -
                    5.73346648e8 * pow(sh, 8) - 941808. * pow(sh, 9) +
                    284172. * pow(sh, 10) + 360612. * pow(sh, 11) +
                    176862. * pow(sh, 12) + 48090. * pow(sh, 13) +
                    4620. * pow(sh, 14))) -
                    0.0004221506883130654 * Lsh * pow(-1 + sh, -10) * pow(sh, -14)*
                    (-315. - 2115. * sh - 3255. * pow(sh, 2) +
                    9681. * pow(sh, 3) + 37863. * pow(sh, 4) +
                    21231. * pow(sh, 5) + 2.8741643e8 * pow(sh, 6) -
                    2.87288225e9 * pow(sh, 7) +
                    6. * (2.152635949e9 + 90090. * Lshb) * pow(sh, 8) -
                    42. * (8.19483989e8 + 90090. * Lshb) * pow(sh, 9) +
                    84. * (7.16809256e8 + 135135. * Lshb) * pow(sh, 10) -
                    4620. * (1.5639938e7 + 4095. * Lshb) * pow(sh, 11) +
                    1050. * (5.7368567e7 + 18018. * Lshb) * pow(sh, 12) -
                    84. * (4.10079749e8 + 135135. * Lshb) * pow(sh, 13) +
                    84. * (1.53948637e8 + 45045. * Lshb) * pow(sh, 14) -
                    4. * (7.19449781e8 + 135135. * Lshb) * pow(sh, 15) +
                    2.88262142e8 * pow(sh, 16)) -
                    2.5128017161491987e-7 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (70875. + 6750. * sh - 2.654475e6 * pow(sh, 2) -
                    9.126108e6 * pow(sh, 3) - 678627. * pow(sh, 4) +
                    4.643019e7 * pow(sh, 5) + 4.80171685205e11 * pow(sh, 6) -
                    4.31617055958e12 * pow(sh, 7) +
                    1.7247170032713e13 * pow(sh, 8) +
                    1.513512e8 * pow(3.141592653589793, 2) * pow(-1 + sh, 6) *
                    pow(sh, 8) - 4.0207542010218e13 * pow(sh, 9) +
                    6.0256405965915e13 * pow(sh, 10) -
                    6.019185138228e13 * pow(sh, 11) +
                    4.0071063595575e13 * pow(sh, 12) -
                    1.7137898822466e13 * pow(sh, 13) +
                    4.270529322855e12 * pow(sh, 14) -
                    4.71606339008e11 * pow(sh, 15) -
                    1.14148692e9 * pow(sh, 16) + 2.22118512e9 * pow(sh, 17) -
                    2.487344244e9 * pow(sh, 18) +
                    1.56858156e9 * pow(sh, 19) - 5.01486552e8 * pow(sh, 20) +
                    3.056844e7 * pow(sh, 21) + 1.397088e7 * pow(sh, 22))) *
                pow(z, 8);
            else
                res += (117820.12630257728 + 1.064052936704897e6 * (1. - sh) +
                    5.267123900507657e6 * pow(1. - sh, 2) +
                    1.8980221399425097e7 * pow(1. - sh, 3) +
                    5.572450251051496e7 * pow(1. - sh, 4) +
                    log(muh)*(5160.589532296834 +
                    41284.71625837467 * (1. - sh) +
                    185781.22316268602 * pow(1. - sh, 2) +
                    619270.7438756201 * pow(1. - sh, 3) +
                    1.702994545657955e6 * pow(1. - sh, 4)) +
                    log(z)*(119002.39202187635 +
                    953068.8159722548 * (1. - sh) +
                    4.289809675723369e6 * pow(1. - sh, 2) +
                    1.4295562598631674e7 * pow(1. - sh, 3) +
                    3.9289141445572205e7 * pow(1. - sh, 4))) * pow(z, 8);
        }

        if (17 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (18 <= maxpow) {
            if (sh < .900001)
                res += (17038.136868535577 * lmu * pow(sh, -9) +
                    665.5522214271709 * Li2sh * pow(-1 + sh, -3) * pow(sh, -7) +
                    665.5522214271709 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -7) - lz *
                    (665.5522214271709 * Lsh * pow(-1 + sh, -3) * pow(sh, -7) +
                    0.0006156364204565536 * pow(-1 + sh, -2) * pow(sh, -16)*
                    (84. + 1407. * sh + 11019. * pow(sh, 2) +
                    53355. * pow(sh, 3) + 177339. * pow(sh, 4) +
                    420771. * pow(sh, 5) + 695955. * pow(sh, 6) -
                    6.98315357e8 * pow(sh, 7) +
                    1.392698929e9 * pow(sh, 8) -
                    6.96490484e8 * pow(sh, 9) - 1.2204e6 * pow(sh, 10) +
                    196344. * pow(sh, 11) + 374004. * pow(sh, 12) +
                    218268. * pow(sh, 13) + 79164. * pow(sh, 14) +
                    17172. * pow(sh, 15) + 1350. * pow(sh, 16))) -
                    0.0006156364204565536 * Lsh * pow(-1 + sh, -11) * pow(sh, -16)*
                    (168. + 1302. * sh + 2760. * pow(sh, 2) -
                    4440. * pow(sh, 3) - 27552. * pow(sh, 4) -
                    26796. * pow(sh, 5) + 59136. * pow(sh, 6) -
                    6.98823656e8 * pow(sh, 7) + 7.683499582e9 * pow(sh, 8) -
                    (3.8389427147e10 + 1.08108e6 * Lshb) * pow(sh, 9) +
                    36. * (3.197114839e9 + 240240. * Lshb) * pow(sh, 10) -
                    7920. * (2.9052853e7 + 3822. * Lshb) * pow(sh, 11) +
                    2520. * (1.27812301e8 + 24024. * Lshb) * pow(sh, 12) -
                    84. * (3.834736693e9 + 900900. * Lshb) * pow(sh, 13) +
                    240. * (9.59022487e8 + 252252. * Lshb) * pow(sh, 14) -
                    24. * (4.798056467e9 + 1.26126e6 * Lshb) * pow(sh, 15) +
                    208. * (1.84702757e8 + 41580. * Lshb) * pow(sh, 16) -
                    (7.692281497e9 + 1.08108e6 * Lshb) * pow(sh, 17) +
                    7.0015448e8 * pow(sh, 18)) -
                    4.886003336956775e-7 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (-24990. - 3675. * sh + 1.155555e6 * pow(sh, 2) +
                    4.697175e6 * pow(sh, 3) + 2.300739e6 * pow(sh, 4) -
                    2.4304707e7 * pow(sh, 5) - 4.9414911e7 * pow(sh, 6) -
                    8.93125212787e11 * pow(sh, 7) +
                    8.923013880433e12 * pow(sh, 8) -
                    4.0116829560699e13 * pow(sh, 9) +
                    2.270268e8 * pow(3.141592653589793, 2) * pow(-1 + sh, 7) *
                    pow(sh, 9) + 1.06887699006279e14 * pow(sh, 10) -
                    1.86895650533025e14 * pow(sh, 11) +
                    2.24067349455873e14 * pow(sh, 12) -
                    1.86515351192835e14 * pow(sh, 13) +
                    1.06425772402197e14 * pow(sh, 14) -
                    3.9828263213811e13 * pow(sh, 15) +
                    8.822814467806e12 * pow(sh, 16) -
                    8.77298288866e11 * pow(sh, 17) +
                    1.45210023e9 * pow(sh, 18) -
                    4.602427326e9 * pow(sh, 19) +
                    6.429483144e9 * pow(sh, 20) -
                    5.36052951e9 * pow(sh, 21) + 2.64447351e9 * pow(sh, 22) -
                    6.66882918e8 * pow(sh, 23) + 2.7794799e7 * pow(sh, 24) +
                    1.513512e7 * pow(sh, 25))) * pow(z, 9);
            else
                res += (426695.7585784732 + 4.271204351874848e6 * (1. - sh) +
                    2.32655866080789e7 * pow(1. - sh, 2) +
                    9.160929759130552e7 * pow(1. - sh, 3) +
                    2.9201125110288244e8 * pow(1. - sh, 4) +
                    log(muh)*(17038.136868535577 +
                    153343.2318168202 * (1. - sh) +
                    766716.159084101 * pow(1. - sh, 2) +
                    2.8112925833083703e6 * pow(1. - sh, 3) +
                    8.43387774992511e6 * pow(1. - sh, 4)) +
                    log(z)*(422113.76138518966 +
                    3.8025545371882077e6 * (1. - sh) +
                    1.9015929172070913e7 * pow(1. - sh, 2) +
                    6.970448898501809e7 * pow(1. - sh, 3) +
                    2.0898441977024493e8 * pow(1. - sh, 4))) * pow(z, 9);
        }

        if (19 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (20 <= maxpow) {
            if (sh < .900001)
                res += (57503.711931307575 * lmu * pow(sh, -10) +
                    2011.4467136465612 * Li2sh * pow(-1 + sh, -3) * pow(sh, -8) +
                    2011.4467136465612 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -8) - lz *
                    (2011.4467136465612 * Lsh * pow(-1 + sh, -3) * pow(sh, -8) +
                    0.00008208485606087382 * pow(-1 + sh, -2) * pow(sh, -18)*
                    (504. + 9464. * sh + 83804. * pow(sh, 2) +
                    463964. * pow(sh, 3) + 1.792004e6 * pow(sh, 4) +
                    5.082116e6 * pow(sh, 5) + 1.0736996e7 * pow(sh, 6) +
                    1.6220516e7 * pow(sh, 7) -
                    1.8827468068e10 * pow(sh, 8) +
                    3.7548741164e10 * pow(sh, 9) -
                    1.8766552383e10 * pow(sh, 10) -
                    3.3805539e7 * pow(sh, 11) + 2.425761e6 * pow(sh, 12) +
                    8.640081e6 * pow(sh, 13) + 5.776731e6 * pow(sh, 14) +
                    2.476035e6 * pow(sh, 15) + 730935. * pow(sh, 16) +
                    132615. * pow(sh, 17) + 8820. * pow(sh, 18))) +
                    0.00008208485606087382 * Lsh * pow(-1 + sh, -12) *
                    pow(sh, -18)*(1008. + 8848. * sh + 23688. * pow(sh, 2) -
                    17352. * pow(sh, 3) - 212592. * pow(sh, 4) -
                    311184. * pow(sh, 5) + 400176. * pow(sh, 6) +
                    1.492176e6 * pow(sh, 7) - 1.8840602088e10 * pow(sh, 8) +
                    2.25961747704e11 * pow(sh, 9) -
                    3. * (4.14012625571e11 + 8.16816e6 * Lshb) * pow(sh, 10) +
                    117. * (3.5366173433e10 + 1.88496e6 * Lshb) *
                    pow(sh, 11) - 36. *
                    (2.58507743869e11 + 2.450448e7 * Lshb) * pow(sh, 12) +
                    1848. * (8.055409123e9 + 1.11384e6 * Lshb) * pow(sh, 13) -
                    5040. * (3.445710547e9 + 612612. * Lshb) * pow(sh, 14) +
                    504. * (2.9538397129e10 + 6.12612e6 * Lshb) *
                    pow(sh, 15) - 2688. * (3.462637184e9 + 765765. * Lshb) *
                    pow(sh, 16) + 1224. * (3.381399457e9 + 720720. * Lshb) *
                    pow(sh, 17) - 18. *
                    (6.9029521727e10 + 1.225224e7 * Lshb) * pow(sh, 18) +
                    (2.26114032686e11 + 2.450448e7 * Lshb) * pow(sh, 19) -
                    1.8862020144e10 * pow(sh, 20)) -
                    3.257335557971183e-8 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (268128. + 50176. * sh - 1.5037316e7 * pow(sh, 2) -
                    7.0758368e7 * pow(sh, 3) - 6.454424e7 * pow(sh, 4) +
                    3.47363296e8 * pow(sh, 5) + 9.86787592e8 * pow(sh, 6) +
                    3.5646688e7 * pow(sh, 7) +
                    4.8969050829328e13 * pow(sh, 8) -
                    5.38246850652224e14 * pow(sh, 9) +
                    2.689062929610038e15 * pow(sh, 10) +
                    1.02918816e10 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 8) * pow(sh, 10) -
                    8.060902410374074e15 * pow(sh, 11) +
                    1.6109269666327124e16 * pow(sh, 12) -
                    2.2534391970484576e16 * pow(sh, 13) +
                    2.2513346650300896e16 * pow(sh, 14) -
                    1.6062787755766024e16 * pow(sh, 15) +
                    8.019705052502612e15 * pow(sh, 16) -
                    2.667905230770352e15 * pow(sh, 17) +
                    5.32021578063623e14 * pow(sh, 18) -
                    4.8123135181584e13 * pow(sh, 19) -
                    9.5864935068e10 * pow(sh, 20) +
                    2.69818915464e11 * pow(sh, 21) -
                    4.54966309854e11 * pow(sh, 22) +
                    4.78236408048e11 * pow(sh, 23) -
                    3.2126306742e11 * pow(sh, 24) +
                    1.3173020316e11 * pow(sh, 25) -
                    2.7741591765e10 * pow(sh, 26) +
                    8.0713269e8 * pow(sh, 27) + 5.189184e8 * pow(sh, 28))) *
                pow(z, 10);
            else
                res += (1.5612166947024823e6 + 1.7161599197470605e7 * (1. - sh) +
                    1.0201302929387844e8 * pow(1. - sh, 2) +
                    4.357191898792429e8 * pow(1. - sh, 3) +
                    1.4983564371913476e9 * pow(1. - sh, 4) +
                    log(muh)*(57503.711931307575 +
                    575037.1193130758 * (1. - sh) +
                    3.1627041562219164e6 * pow(1. - sh, 2) +
                    1.2650816624887666e7 * pow(1. - sh, 3) +
                    4.1115154030884914e7 * pow(1. - sh, 4)) +
                    log(z)*(1.517643412993728e6 +
                    1.5188579863273544e7 * (1. - sh) +
                    8.354722944715922e7 * pow(1. - sh, 2) +
                    3.340855718739629e8 * pow(1. - sh, 3) +
                    1.0851066958008096e9 * pow(1. - sh, 4))) * pow(z, 10);
        }
    }
    return res;
}

double F_1::DeltaF_19re(double muh, double z, double sh, int maxpow) 
{
    double lz = log(z);
    double lmu = log(muh);
    double Lsh = log(sh);


    double res = 0;

    if (sh < 0.4) {
        res = 0.09029982363315697 * (0.6666666666666666 + lmu - 0.5 * lz)*
                (105. + pow(sh, 3) * pow(z, -3) + 4.5 * pow(sh, 2) * pow(z, -2) +
                21. * sh * pow(z, -1));
    } else {
        if (0 <= maxpow)
            res += 0.;

        if (1 <= maxpow)
            res += 0.;

        if (2 <= maxpow)
            res += (-37.925925925925924 * pow(sh, -1) -
                56.888888888888886 * lmu * pow(sh, -1) +
                28.444444444444443 * lz * pow(sh, -1)) * pow(z, 1);

        if (3 <= maxpow)
            res += 0.;

        if (4 <= maxpow)
            res += (-75.85185185185185 * Lsh * pow(sh, -2) -
                113.77777777777777 * lmu * Lsh * pow(sh, -2) -
                56.888888888888886 * pow(lz, 2) * pow(sh, -2) -
                lz * (-75.85185185185185 * pow(sh, -2) -
                113.77777777777777 * lmu * pow(sh, -2) -
                56.888888888888886 * Lsh * pow(sh, -2))) * pow(z, 2);

        if (5 <= maxpow)
            res += 0.;

        if (6 <= maxpow)
            res += (151.7037037037037 * pow(sh, -3) -
                151.7037037037037 * Lsh * pow(sh, -3) -
                113.77777777777777 * pow(lz, 2) * pow(sh, -3) -
                lz * (-37.925925925925924 * pow(sh, -3) -
                227.55555555555554 * lmu * pow(sh, -3) -
                113.77777777777777 * Lsh * pow(sh, -3)) -
                lmu * (-227.55555555555554 * pow(sh, -3) +
                227.55555555555554 * Lsh * pow(sh, -3))) * pow(z, 3);

        if (7 <= maxpow)
            res += 0.;

        if (8 <= maxpow)
            res += (530.9629629629629 * pow(sh, -4) -
                455.1111111111111 * Lsh * pow(sh, -4) -
                341.3333333333333 * pow(lz, 2) * pow(sh, -4) -
                lz * (-56.888888888888886 * pow(sh, -4) -
                682.6666666666666 * lmu * pow(sh, -4) -
                341.3333333333333 * Lsh * pow(sh, -4)) -
                lmu * (-796.4444444444445 * pow(sh, -4) +
                682.6666666666666 * Lsh * pow(sh, -4))) * pow(z, 4);

        if (9 <= maxpow)
            res += 0.;

        if (10 <= maxpow)
            res += (1871.0123456790122 * pow(sh, -5) -
                1517.037037037037 * Lsh * pow(sh, -5) -
                1137.7777777777778 * pow(lz, 2) * pow(sh, -5) -
                lz * (-113.77777777777777 * pow(sh, -5) -
                2275.5555555555557 * lmu * pow(sh, -5) -
                1137.7777777777778 * Lsh * pow(sh, -5)) -
                lmu * (-2806.5185185185187 * pow(sh, -5) +
                2275.5555555555557 * Lsh * pow(sh, -5))) * pow(z, 5);

        if (11 <= maxpow)
            res += 0.;

        if (12 <= maxpow)
            res += (6738.172839506173 * pow(sh, -6) -
                5309.62962962963 * Lsh * pow(sh, -6) -
                3982.222222222222 * pow(lz, 2) * pow(sh, -6) -
                lz * (-256. * pow(sh, -6) -
                7964.444444444444 * lmu * pow(sh, -6) -
                3982.222222222222 * Lsh * pow(sh, -6)) -
                lmu * (-10107.25925925926 * pow(sh, -6) +
                7964.444444444444 * Lsh * pow(sh, -6))) * pow(z, 6);

        if (13 <= maxpow)
            res += 0.;

        if (14 <= maxpow)
            res += (24682.192592592593 * pow(sh, -7) -
                19114.666666666668 * Lsh * pow(sh, -7) -
                14336. * pow(lz, 2) * pow(sh, -7) -
                lz * (-603.0222222222222 * pow(sh, -7) -
                28672. * lmu * pow(sh, -7) - 14336. * Lsh * pow(sh, -7)) -
                lmu * (-37023.28888888889 * pow(sh, -7) +
                28672. * Lsh * pow(sh, -7))) * pow(z, 7);

        if (15 <= maxpow)
            res += 0.;

        if (16 <= maxpow)
            res += (91563.2987654321 * pow(sh, -8) -
                70087.11111111111 * Lsh * pow(sh, -8) -
                52565.333333333336 * pow(lz, 2) * pow(sh, -8) -
                lz * (-1414.637037037037 * pow(sh, -8) -
                105130.66666666667 * lmu * pow(sh, -8) -
                52565.333333333336 * Lsh * pow(sh, -8)) -
                lmu * (-137344.94814814813 * pow(sh, -8) +
                105130.66666666667 * Lsh * pow(sh, -8))) * pow(z, 8);

        if (17 <= maxpow)
            res += 0.;

        if (18 <= maxpow)
            res += (342952.95097001764 * pow(sh, -9) -
                260323.55555555556 * Lsh * pow(sh, -9) -
                195242.66666666666 * pow(lz, 2) * pow(sh, -9) -
                lz * (-3108.842328042328 * pow(sh, -9) -
                390485.3333333333 * lmu * pow(sh, -9) -
                195242.66666666666 * Lsh * pow(sh, -9)) -
                lmu * (-514429.42645502643 * pow(sh, -9) +
                390485.3333333333 * Lsh * pow(sh, -9))) * pow(z, 9);

        if (19 <= maxpow)
            res += 0.;

        if (20 <= maxpow)
            res += (1.2942086772486772e6 * pow(sh, -10) -
                976213.3333333334 * Lsh * pow(sh, -10) -
                732160. * pow(lz, 2) * pow(sh, -10) -
                lz * (-5556.825396825397 * pow(sh, -10) -
                1.46432e6 * lmu * pow(sh, -10) - 732160. * Lsh * pow(sh, -10))
                - lmu * (-1.9413130158730159e6 * pow(sh, -10) +
                1.46432e6 * Lsh * pow(sh, -10))) * pow(z, 10);

    }
    return res;
}

double F_1::DeltaF_19im(double muh, double z, double sh, int maxpow) 
{
    double lz = log(z);
    double lmu = log(muh);


    double res = 0;

    if (sh < 0.4) {
        res = 0.;
    } else {
        if (0 <= maxpow)
            res += 0.;

        if (1 <= maxpow)
            res += 0.;

        if (2 <= maxpow)
            res += 0.;

        if (3 <= maxpow)
            res += 0.;

        if (4 <= maxpow)
            res += (238.2956205389591 * pow(sh, -2) +
                357.4434308084387 * lmu * pow(sh, -2) -
                178.72171540421934 * lz * pow(sh, -2)) * pow(z, 2);

        if (5 <= maxpow)
            res += 0.;

        if (6 <= maxpow)
            res += (476.5912410779182 * pow(sh, -3) +
                714.8868616168774 * lmu * pow(sh, -3) -
                357.4434308084387 * lz * pow(sh, -3)) * pow(z, 3);

        if (7 <= maxpow)
            res += 0.;

        if (8 <= maxpow)
            res += (1429.7737232337547 * pow(sh, -4) +
                2144.660584850632 * lmu * pow(sh, -4) -
                1072.330292425316 * lz * pow(sh, -4)) * pow(z, 4);

        if (9 <= maxpow)
            res += 0.;

        if (10 <= maxpow)
            res += (4765.912410779182 * pow(sh, -5) +
                7148.868616168774 * lmu * pow(sh, -5) -
                3574.434308084387 * lz * pow(sh, -5)) * pow(z, 5);

        if (11 <= maxpow)
            res += 0.;

        if (12 <= maxpow)
            res += (16680.69343772714 * pow(sh, -6) +
                25021.04015659071 * lmu * pow(sh, -6) -
                12510.520078295354 * lz * pow(sh, -6)) * pow(z, 6);

        if (13 <= maxpow)
            res += 0.;

        if (14 <= maxpow)
            res += (60050.496375817704 * pow(sh, -7) +
                90075.74456372655 * lmu * pow(sh, -7) -
                45037.872281863274 * lz * pow(sh, -7)) * pow(z, 7);

        if (15 <= maxpow)
            res += 0.;

        if (16 <= maxpow)
            res += (220185.1533779982 * pow(sh, -8) +
                330277.73006699735 * lmu * pow(sh, -8) -
                165138.86503349867 * lz * pow(sh, -8)) * pow(z, 8);

        if (17 <= maxpow)
            res += 0.;

        if (18 <= maxpow)
            res += (817830.5696897077 * pow(sh, -9) +
                1.2267458545345615e6 * lmu * pow(sh, -9) -
                613372.9272672808 * lz * pow(sh, -9)) * pow(z, 9);

        if (19 <= maxpow)
            res += 0.;

        if (20 <= maxpow)
            res += (3.066864636336404e6 * pow(sh, -10) +
                4.600296954504606e6 * lmu * pow(sh, -10) -
                2.300148477252303e6 * lz * pow(sh, -10)) * pow(z, 10);

    }
    return res;
}
