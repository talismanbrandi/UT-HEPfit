/* 
 * Copyright (C) 2017 HEPfit Collaboration
 *
 *
 * For the licensing terms see doc/COPYING.
 */

/* Code derived from arXiv:0810.4077
 * authors: Christoph Greub, Volker Pilipp, Christof Sch√ºpbach
 */

#include "F_2.h"
#include "hpl.h"

F_2::F_2()
{}

F_2::~F_2()
{}

double F_2::F_27re(double muh, double z, double sh, int maxpow)
{
    double lz = log(z);
    double lmu = log(muh);
    double Lsh = log(sh);
    double Lshb = log(1. - sh);
    double Li2sh = real(Li2(sh));
    double Li3sh = real(Li3(sh));
    double Li3shb = real(Li3(1. - sh));
    double Li4sh = real(Li4(sh));
    double sqrtsh = sqrt(sh);
    double sqrt4sh = sqrt(4. - sh);
    double ash = asin(sqrtsh / 2.);
    double cl2 = Cl2(2. * ash);
    double cl3 = Cl3(2. * ash);


    double res = 0;

    if (sh < 0.4) {
        res = 6.85597 + 5.135802469135802 * lmu + 12.4502 * sh +
                0.0987654 * Lsh * sh + 1.333335 * lz * sh + 13.2214 * z +
                15.6523 * lz * z + 155.555 * sh * z - 6.22222 * Lsh * sh * z +
                10.20305 * lz * sh * z - 1.77778 * Lsh * lz * sh * z -
                0.88889 * z * pow(lz, 2) + 6.73755 * sh * z * pow(lz, 2) -
                0.29629625 * z * pow(lz, 3) - 0.29629625 * sh * z * pow(lz, 3) +
                0.148148125 * sh * z * pow(lz, 4) + 116.815 * pow(sh, 2) +
                0.0987654 * Lsh * pow(sh, 2) + 35.03385 * lz * pow(sh, 2) +
                542.972 * z * pow(sh, 2) - 14.2222 * Lsh * z * pow(sh, 2) -
                44.79855 * lz * z * pow(sh, 2) - 3.555555 * Lsh * lz * z * pow(sh, 2) +
                4.44445 * pow(lz, 2) * pow(sh, 2) +
                36.657 * z * pow(lz, 2) * pow(sh, 2) +
                0.29629625 * pow(lz, 3) * pow(sh, 2) -
                0.88888875 * z * pow(lz, 3) * pow(sh, 2) +
                0.444444375 * z * pow(lz, 4) * pow(sh, 2) + 251.971 * pow(sh, 3) +
                0.0987654 * Lsh * pow(sh, 3) + 90.6275 * lz * pow(sh, 3) +
                1136.13 * z * pow(sh, 3) - 23.1111 * Lsh * z * pow(sh, 3) -
                127.97 * lz * z * pow(sh, 3) - 5.33335 * Lsh * lz * z * pow(sh, 3) +
                9.333325 * pow(lz, 2) * pow(sh, 3) +
                86.6475 * z * pow(lz, 2) * pow(sh, 3) +
                0.88888875 * pow(lz, 3) * pow(sh, 3) -
                2.074075 * z * pow(lz, 3) * pow(sh, 3) +
                0.8888875 * z * pow(lz, 4) * pow(sh, 3) +
                0.000646678 * pow(sh, 3) * pow(z, -2) -
                0.0333333 * pow(sh, 2) * pow(z, -1) -
                5.68087 * pow(sh, 3) * pow(z, -1) -
                1.466665 * lz * pow(sh, 3) * pow(z, -1) -
                0.14814825 * pow(lz, 2) * pow(sh, 3) * pow(z, -1) +
                pow(sh, 3)*(23.3946 * pow(z, -0.5) - 959.179 * pow(z, 0.5)) -
                70.1839 * sh * pow(z, 0.5) - 421.103 * pow(sh, 2) * pow(z, 0.5) -
                11.6973 * pow(z, 1.5) - 11.182 * pow(z, 2) +
                13.9904 * lz * pow(z, 2) - 68.5374 * sh * pow(z, 2) +
                27.9808 * Lsh * sh * pow(z, 2) + 102.242 * lz * sh * pow(z, 2) -
                15.55555 * sh * pow(lz, 2) * pow(z, 2) -
                3.55555 * Lsh * sh * pow(lz, 2) * pow(z, 2) -
                0.29629625 * pow(lz, 3) * pow(z, 2) -
                1.777775 * sh * pow(lz, 3) * pow(z, 2) -
                143.29 * pow(sh, 2) * pow(z, 2) +
                83.9424 * Lsh * pow(sh, 2) * pow(z, 2) +
                248.3745 * lz * pow(sh, 2) * pow(z, 2) -
                7.1111 * Lsh * lz * pow(sh, 2) * pow(z, 2) -
                48.4445 * pow(lz, 2) * pow(sh, 2) * pow(z, 2) -
                10.666675 * Lsh * pow(lz, 2) * pow(sh, 2) * pow(z, 2) -
                4.44445 * pow(lz, 3) * pow(sh, 2) * pow(z, 2) -
                271.07 * pow(sh, 3) * pow(z, 2) +
                164.329 * Lsh * pow(sh, 3) * pow(z, 2) +
                435.5445 * lz * pow(sh, 3) * pow(z, 2) -
                24.8889 * Lsh * lz * pow(sh, 3) * pow(z, 2) -
                106.37025 * pow(lz, 2) * pow(sh, 3) * pow(z, 2) -
                21.333325 * Lsh * pow(lz, 2) * pow(sh, 3) * pow(z, 2) -
                8.2963 * pow(lz, 3) * pow(sh, 3) * pow(z, 2) + 7.26787 * pow(z, 3) -
                8.98765 * lz * pow(z, 3) - 70.5057 * sh * pow(z, 3) -
                40.4253 * Lsh * sh * pow(z, 3) - 56.869 * lz * sh * pow(z, 3) -
                3.555555 * Lsh * lz * sh * pow(z, 3) +
                6.222225 * pow(lz, 2) * pow(z, 3) +
                21.925925 * sh * pow(lz, 2) * pow(z, 3) +
                3.55555 * Lsh * sh * pow(lz, 2) * pow(z, 3) -
                228.849 * pow(sh, 2) * pow(z, 3) -
                165.257 * Lsh * pow(sh, 2) * pow(z, 3) -
                115.931 * lz * pow(sh, 2) * pow(z, 3) -
                7.1111 * Lsh * lz * pow(sh, 2) * pow(z, 3) +
                62.37025 * pow(lz, 2) * pow(sh, 2) * pow(z, 3) +
                14.222225 * Lsh * pow(lz, 2) * pow(sh, 2) * pow(z, 3) -
                464.161 * pow(sh, 3) * pow(z, 3) -
                416.697 * Lsh * pow(sh, 3) * pow(z, 3) -
                175.3475 * lz * pow(sh, 3) * pow(z, 3) -
                3.555555 * Lsh * lz * pow(sh, 3) * pow(z, 3) +
                144.14825 * pow(lz, 2) * pow(sh, 3) * pow(z, 3) +
                35.5555 * Lsh * pow(lz, 2) * pow(sh, 3) * pow(z, 3);
    } else {
        if (0 <= maxpow) {
            if (sh < .900001)
                res += (5.135802469135802 * lmu +
                    1.7777777777777777 * sh * pow(ash, 2) * pow(-1 + sh, -4) -
                    0.04938271604938271 * Lsh * sh *
                    (-29. + 18. * Lshb * (-1. + sh) + 47. * sh) * pow(-1 + sh, -2)\
      - 0.8888888888888888 * Li2sh * sh * pow(-1 + sh, -1) +
                    0.4444444444444444 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, 3) + 0.09876543209876543 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, -1)*
                    (-4. + 9. * sh - 15. * pow(sh, 2) + 4. * pow(sh, 3)) +
                    0.00823045267489712 * pow(-1 + sh, -4)*
                    (pow(-1 + sh, 2)*(785. - 1600. * sh + 833. * pow(sh, 2)) +
                    6. * sh * pow(3.141592653589793, 2)*
                    (-4. + 9. * sh - 9. * pow(sh, 2) + 3. * pow(sh, 3)))) *
                pow(z, 0);
            else
                res += (4.505947183821596 + 1.3035683102929574 * (1. - sh) +
                    5.135802469135802 * log(muh) +
                    0.39579451138872057 * pow(1. - sh, 2) +
                    0.18777843689890833 * pow(1. - sh, 3) +
                    0.10631777305882502 * pow(1. - sh, 4)) * pow(z, 0);
        }

        if (1 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (2 <= maxpow) {
            if (sh < .900001)
                res += (5.333333333333333 * ash * (1. + sh) * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) - 0.2962962962962963 * sh * pow(Lsh, 4) *
                    pow(-1 + sh, -3) + 1.7777777777777777 * Li2sh *
                    (-1. + 4. * sh) * pow(-1 + sh, -2) -
                    0.5925925925925926 * (-3. + sh) * pow(Lsh, 3) *
                    pow(-1 + sh, -2) - lz *
                    (16. * pow(Lsh, 2) * pow(9 - 9 * sh, -1) +
                    1.7777777777777777 * Lsh *
                    (2. + 2. * Lshb * (-1. + sh) + sh) * pow(-1 + sh, -2) +
                    3.5555555555555554 * Li2sh * pow(-1 + sh, -1) -
                    0.5925925925925926 * (9. + pow(3.141592653589793, 2)) *
                    pow(-1 + sh, -1)) -
                    1.7777777777777777 * Li3sh * pow(-1 + sh, -3)*
                    (1. + 5. * sh - 4. * pow(sh, 2)) +
                    2.1369900500615007 * pow(-1 + sh, -3)*
                    (-5. + 5. * sh + 2. * pow(sh, 2)) -
                    pow(Lsh, 2)*(3.5555555555555554 * Li2sh * sh *
                    pow(-1 + sh, -3) +
                    0.2962962962962963 * pow(-1 + sh, -3)*
                    (12. + 3. * Lshb * (-5. + 3. * sh) +
                    sh * (-15. + 2. * pow(3.141592653589793, 2)) +
                    6. * pow(sh, 2))) -
                    Lsh * (17.095920400492005 * sh * pow(-1 + sh, -3) -
                    14.222222222222221 * Li3sh * sh * pow(-1 + sh, -3) +
                    1.7777777777777777 * Li2sh * pow(-1 + sh, -3)*
                    (-3. - sh + 2. * pow(sh, 2)) -
                    0.2962962962962963 * pow(-1 + sh, -3)*
                    (12. + 21. * sh +
                    (-5. + 3. * sh) * pow(3.141592653589793, 2) -
                    33. * pow(sh, 2) +
                    6. * Lshb * (1. - 5. * sh + 4. * pow(sh, 2)))) +
                    10.666666666666666 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-1. - 3. * pow(sh, 2) + pow(sh, 3)) -
                    0.05925925925925926 * pow(-1 + sh, -4)*
                    (-4. * (-1. + sh) * sh * pow(3.141592653589793, 4) -
                    15. * (-1. + sh)*(10. - (17. + 24. * Li4sh) * sh +
                    7. * pow(sh, 2)) +
                    5. * pow(3.141592653589793, 2)*
                    (-6. + 16. * sh - 20. * pow(sh, 2) + 7. * pow(sh, 3)))) *
                pow(z, 1);
            else
                res += (9.093880269665448 + 0.4118591346297644 * (1. - sh) -
                    1.1764123627041028 * pow(1. - sh, 2) -
                    1.9623078784430308 * pow(1. - sh, 3) +
                    log(z)*(-2.6666666666666665 -
                    1.7777777777777777 * (1. - sh) -
                    1.4320987654320987 * pow(1. - sh, 2) -
                    1.2296296296296296 * pow(1. - sh, 3) -
                    1.0903703703703704 * pow(1. - sh, 4)) -
                    2.3203834816527733 * pow(1. - sh, 4)) * pow(z, 1);
        }

        if (3 <= maxpow) {
            if (sh < .900001)
                res += -1.1851851851851851 * (2. + sh) * pow(3.141592653589793, 2) *
                pow(sh, -1) * pow(z, 1.5);
            else
                res += (-35.09192675942883 - 23.39461783961922 * (1. - sh) -
                    23.39461783961922 * pow(1. - sh, 2) -
                    23.39461783961922 * pow(1. - sh, 3) -
                    23.39461783961922 * pow(1. - sh, 4)) * pow(z, 1.5);
        }

        if (4 <= maxpow) {
            if (sh < .900001)
                res += (1.7777777777777777 * Li3sh * (5. + 3. * sh) * pow(-1 + sh, -3) -
                    1.7777777777777777 * Li3shb * (1. + 6. * sh) *
                    pow(-1 + sh, -3) - 0.8888888888888888 * pow(Lsh, 3) *
                    pow(-1 + sh, -3) + 5.333333333333333 * ash * (-3. + sh) *
                    sqrt4sh * sqrtsh * pow(-1 + sh, -3) * pow(sh, 2) -
                    2.1369900500615007 * pow(-1 + sh, -4)*
                    (-5. + 8. * sh + 3. * pow(sh, 2)) -
                    1.7777777777777777 * Li2sh * pow(-1 + sh, -3) * pow(sh, -1)*
                    (3. - 10. * sh + 8. * pow(sh, 2)) +
                    5.333333333333333 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 2)*
                    (2. + 9. * sh - 6. * pow(sh, 2) + pow(sh, 3)) -
                    1.7777777777777777 * cl2 * sqrt4sh * sqrtsh * pow(-1 + sh, -3)*
                    (-4. - 3. * pow(sh, 2) + pow(sh, 3)) -
                    Lsh * (32. * sh * pow(ash, 2) * pow(-1 + sh, -4) +
                    1.7777777777777777 * Li2sh * (4. + sh) *
                    pow(-1 + sh, -3) +
                    1.7777777777777777 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3)*(-4. - 3. * pow(sh, 2) + pow(sh, 3)) +
                    0.14814814814814814 * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-18. + (57. + 36. * Lshb) * sh -
                    6. * (5. + 20. * Lshb + pow(3.141592653589793, 2)) *
                    pow(sh, 2) + (-93. + 96. * Lshb +
                    50. * pow(3.141592653589793, 2)) * pow(sh, 3))) +
                    0.4444444444444444 * pow(Lsh, 2) * pow(-1 + sh, -4) *
                    pow(sh, -2)*(-4. + 7. * sh + (5. + 6. * Lshb) * pow(sh, 2) -
                    (25. + 8. * Lshb) * pow(sh, 3) +
                    (11. + 2. * Lshb) * pow(sh, 4)) -
                    pow(lz, 2)*(-0.8888888888888888 * Lsh * (1. + 6. * sh) *
                    pow(-1 + sh, -3) +
                    0.4444444444444444 * pow(-1 + sh, -2) * pow(sh, -2)*
                    (1. - 2. * sh + 8. * pow(sh, 2) + 10. * pow(sh, 3) -
                    4. * pow(sh, 4) + pow(sh, 5))) -
                    lz * (64. * sh * pow(ash, 2) * pow(-1 + sh, -4) +
                    1.7777777777777777 * Li2sh * (1. + 6. * sh) *
                    pow(-1 + sh, -3) +
                    0.8888888888888888 * pow(Lsh, 2) * pow(-1 + sh, -2) +
                    3.5555555555555554 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3)*(-4. - 3. * pow(sh, 2) + pow(sh, 3)) +
                    0.8888888888888888 * Lsh * pow(-1 + sh, -3) * pow(sh, -2)*
                    (2. - 3. * sh + 2. * (1. + Lshb) * pow(sh, 2) +
                    3. * (-1. + 4. * Lshb) * pow(sh, 3)) -
                    0.14814814814814814 * pow(-1 + sh, -4) * pow(sh, -2)*
                    (2. * pow(3.141592653589793, 2) * pow(sh, 2)*
                    (-1. + sh + 6. * pow(sh, 2)) +
                    3. * pow(-1 + sh, 2)*
                    (3. - 8. * sh + 8. * pow(sh, 2) + 20. * pow(sh, 3) -
                    14. * pow(sh, 4) + 3. * pow(sh, 5)))) -
                    0.07407407407407407 * pow(-1 + sh, -4) * pow(sh, -2)*
                    (-432. * cl3 * pow(sh, 3) +
                    3. * pow(-1 + sh, 2)*
                    (7. - 64. * sh + 108. * pow(sh, 2) + 64. * pow(sh, 3) -
                    42. * pow(sh, 4) + 7. * pow(sh, 5)) +
                    2. * pow(3.141592653589793, 2)*
                    (-6. + 45. * sh - 133. * pow(sh, 2) + 157. * pow(sh, 3) -
                    59. * pow(sh, 4) + 12. * pow(sh, 5) - 12. * pow(sh, 6) +
                    2. * pow(sh, 7)))) * pow(z, 2);
            else
                res += pow(z, 2)*(3.8858229319704556 +
                    5.647852916167452 * (1. - sh) +
                    5.03115350102676 * pow(1. - sh, 2) +
                    6.6118231676761265 * pow(1. - sh, 3) +
                    log(z)*(-10.515810650303592 -
                    3.3659736724084177 * (1. - sh) -
                    7.052871337161167 * pow(1. - sh, 2) -
                    9.929763758132738 * pow(1. - sh, 3) -
                    12.684606769216838 * pow(1. - sh, 4)) +
                    9.708947367679775 * pow(1. - sh, 4) +
                    (-0.5925925925925926 -
                    0.6666666666666666 * (1. - sh) -
                    1.4222222222222223 * pow(1. - sh, 2) -
                    1.8074074074074074 * pow(1. - sh, 3) -
                    2.2222222222222223 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (5 <= maxpow) {
            if (sh < .900001)
                res += -0.1580246913580247 * pow(3.141592653589793, 2) * pow(sh, -3)*
                (3. + 14. * sh + 3. * pow(sh, 2)) * pow(z, 2.5);
            else
                res += (-31.192823786158957 - 62.385647572317914 * (1. - sh) -
                    98.25739492640072 * pow(1. - sh, 2) -
                    138.80806584840735 * pow(1. - sh, 3) -
                    184.03766033833784 * pow(1. - sh, 4)) * pow(z, 2.5);
        }

        if (6 <= maxpow) {
            if (sh < .900001)
                res += (-7.111111111111111 * Li3shb * sh * pow(-1 + sh, -4) +
                    3.5555555555555554 * Li3sh * pow(-1 + sh, -3) * pow(sh, -1) -
                    1.1851851851851851 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -1) + 4.273980100123001 * pow(-1 + sh, -4) *
                    pow(sh, -1)*(1. - sh + 2. * pow(sh, 2)) +
                    1.7777777777777777 * Li2sh * pow(-1 + sh, -4) * pow(sh, -2)*
                    (4. - 14. * sh + 18. * pow(sh, 2) - 11. * pow(sh, 3) +
                    pow(sh, 4)) + 1.1851851851851851 * cl2 * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (-9. - sh + 9. * pow(sh, 2) - 6. * pow(sh, 3) +
                    pow(sh, 4)) + 0.3950617283950617 * ash * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (27. - sh + 9. * pow(sh, 2) - 6. * pow(sh, 3) +
                    pow(sh, 4)) - 3.5555555555555554 * sh * pow(ash, 2) *
                    pow(-1 + sh, -4)*(-6. + 27. * sh - 30. * pow(sh, 3) +
                    27. * pow(sh, 4) - 9. * pow(sh, 5) + pow(sh, 6)) -
                    Lsh * (-21.333333333333332 * sh * pow(ash, 2) *
                    pow(-1 + sh, -4) +
                    3.5555555555555554 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -1) - 1.1851851851851851 * ash * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (-9. - sh + 9. * pow(sh, 2) - 6. * pow(sh, 3) +
                    pow(sh, 4)) - 0.04938271604938271 * pow(-1 + sh, -4) *
                    pow(sh, -4)*(-10. + 10. * sh +
                    6. * (23. + 24. * Lshb) * pow(sh, 2) -
                    2. * (67. + 252. * Lshb +
                    30. * pow(3.141592653589793, 2)) * pow(sh, 3) +
                    (-163. + 648. * Lshb +
                    60. * pow(3.141592653589793, 2)) * pow(sh, 4) -
                    12. * (-5. + 33. * Lshb +
                    6. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    9. * (-5. + 4. * Lshb) * pow(sh, 6))) -
                    0.14814814814814814 * pow(Lsh, 2) * pow(-1 + sh, -5) *
                    pow(sh, -4)*(-4. - 4. * sh + 47. * pow(sh, 2) +
                    (-47. + 12. * Lshb) * pow(sh, 3) -
                    2. * (13. + 12. * Lshb) * pow(sh, 4) +
                    4. * (19. + 3. * Lshb) * pow(sh, 5) - 36. * pow(sh, 6) +
                    6. * pow(sh, 7)) - pow(lz, 2)*
                    (-3.5555555555555554 * Lsh * sh * pow(-1 + sh, -4) -
                    0.14814814814814814 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (1. + 3. * sh - 18. * pow(sh, 2) + 25. * pow(sh, 3) -
                    36. * pow(sh, 4) + 26. * pow(sh, 5) - 27. * pow(sh, 6) -
                    22. * pow(sh, 7) + 38. * pow(sh, 8) - 16. * pow(sh, 9) +
                    2. * pow(sh, 10))) -
                    lz * (7.111111111111111 * Li2sh * sh * pow(-1 + sh, -4) -
                    42.666666666666664 * sh * pow(ash, 2) * pow(-1 + sh, -4) -
                    1.7777777777777777 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -1) - 2.3703703703703702 * ash * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (-9. - sh + 9. * pow(sh, 2) - 6. * pow(sh, 3) +
                    pow(sh, 4)) - 0.2962962962962963 * Lsh *
                    pow(-1 + sh, -4) * pow(sh, -4)*
                    (2. + 4. * sh - 27. * pow(sh, 2) + 22. * pow(sh, 3) +
                    14. * pow(sh, 4) - 12. * (1. + 2. * Lshb) * pow(sh, 5) +
                    9. * pow(sh, 6)) -
                    0.04938271604938271 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (-5. + 57. * pow(sh, 2) - 46. * pow(sh, 3) -
                    85. * pow(sh, 4) + 164. * pow(sh, 5) - 73. * pow(sh, 6) +
                    102. * pow(sh, 7) - 40. * pow(sh, 8) - 4. * pow(sh, 9) +
                    2. * pow(sh, 10))) +
                    0.00823045267489712 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (-19. + 46. * sh + 1365. * pow(sh, 2) - 4435. * pow(sh, 3) +
                    3757. * pow(sh, 4) + (610. - 2592. * cl3) * pow(sh, 5) -
                    3103. * pow(sh, 6) + 2113. * pow(sh, 7) +
                    594. * pow(sh, 8) - 1548. * pow(sh, 9) +
                    714. * pow(sh, 10) - 94. * pow(sh, 11) +
                    6. * pow(3.141592653589793, 2)*
                    (6. + 12. * sh - 195. * pow(sh, 2) + 442. * pow(sh, 3) -
                    434. * pow(sh, 4) + 124. * pow(sh, 5) +
                    137. * pow(sh, 6) - 16. * pow(sh, 7) -
                    120. * pow(sh, 8) + 108. * pow(sh, 9) -
                    36. * pow(sh, 10) + 4. * pow(sh, 11)))) * pow(z, 3);
            else
                res += pow(z, 3)*(-12.335307775922313 +
                    30.140289422045853 * (1. - sh) +
                    46.569840149902745 * pow(1. - sh, 2) +
                    80.11596831781813 * pow(1. - sh, 3) +
                    log(z)*(-16.636559572212125 +
                    1.4762567309815953 * (1. - sh) -
                    23.052042837781816 * pow(1. - sh, 2) -
                    49.522893482074544 * pow(1. - sh, 3) -
                    78.97537511261919 * pow(1. - sh, 4)) +
                    147.9535188895975 * pow(1. - sh, 4) +
                    (1.3333333333333333 -
                    0.26666666666666666 * (1. - sh) -
                    5.807407407407408 * pow(1. - sh, 2) -
                    10.137566137566138 * pow(1. - sh, 3) -
                    16.084656084656086 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (7 <= maxpow) {
            if (sh < .900001)
                res += -0.013544973544973546 * pow(3.141592653589793, 2) * pow(sh, -5)*
                (15. + 108. * sh + 314. * pow(sh, 2) + 108. * pow(sh, 3) +
                    15. * pow(sh, 4)) * pow(z, 3.5);
            else
                res += (-74.8627770867815 - 224.58833126034452 * (1. - sh) -
                    471.6354956467235 * pow(1. - sh, 2) -
                    838.4631033719528 * pow(1. - sh, 3) -
                    1349.5352405197486 * pow(1. - sh, 4)) * pow(z, 3.5);
        }

        if (8 <= maxpow) {
            if (sh < .900001)
                res += (-7.123300166871669 * pow(-1 + sh, -3) * pow(sh, -2) +
                    5.925925925925926 * Li3sh * pow(-1 + sh, -3) * pow(sh, -2) -
                    1.9753086419753085 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -2) - 1.7777777777777777 * cl2 * sh * sqrt4sh * sqrtsh *
                    (8. + 6. * sh - 6. * pow(sh, 2) + pow(sh, 3)) +
                    0.2962962962962963 * Li2sh * pow(-1 + sh, -5) * pow(sh, -3)*
                    (-50. + 230. * sh - 420. * pow(sh, 2) + 380. * pow(sh, 3) -
                    146. * pow(sh, 4) + 15. * pow(sh, 5)) -
                    0.2962962962962963 * ash * sh * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3)*(16. + 72. * sh + 18. * pow(sh, 2) -
                    203. * pow(sh, 3) + 189. * pow(sh, 4) - 63. * pow(sh, 5) +
                    7. * pow(sh, 6)) + 5.333333333333333 * pow(ash, 2) *
                    pow(-1 + sh, -4) * pow(sh, 2)*
                    (36. - 60. * sh + 99. * pow(sh, 3) - 112. * pow(sh, 4) +
                    54. * pow(sh, 5) - 12. * pow(sh, 6) + pow(sh, 7)) -
                    Lsh * (5.925925925925926 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -2) + 1.7777777777777777 * ash * sh * sqrt4sh *
                    sqrtsh * (8. + 6. * sh - 6. * pow(sh, 2) + pow(sh, 3)) -
                    0.00823045267489712 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (21. - 10. * sh - 307. * pow(sh, 2) -
                    (283. + 1800. * Lshb) * pow(sh, 3) +
                    5. * (437. + 1656. * Lshb +
                    120. * pow(3.141592653589793, 2)) * pow(sh, 4) -
                    2. * (1081. + 7560. * Lshb +
                    600. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    (253. + 13680. * Lshb +
                    600. * pow(3.141592653589793, 2)) * pow(sh, 6) +
                    (861. - 5256. * Lshb) * pow(sh, 7) +
                    6. * (49. + 90. * Lshb) * pow(sh, 8) - 78. * pow(sh, 9)))\
      - 0.04938271604938271 * pow(Lsh, 2) * pow(-1 + sh, -6) *
                    pow(sh, -6)*(6. + 14. * sh - 30. * pow(sh, 2) -
                    255. * pow(sh, 3) + 729. * pow(sh, 4) +
                    60. * Lshb * pow(-1 + sh, 3) * pow(sh, 4) -
                    585. * pow(sh, 5) - 165. * pow(sh, 6) + 541. * pow(sh, 7) -
                    270. * pow(sh, 8) + 45. * pow(sh, 9)) -
                    0.024691358024691357 * pow(lz, 2) * pow(sh, -6)*
                    (3. + 25. * sh + 90. * pow(sh, 2) - 60. * pow(sh, 3) +
                    5. * pow(sh, 4) - 3. * pow(sh, 5) - 144. * pow(sh, 6) -
                    252. * pow(sh, 7) + 72. * pow(sh, 8) + 288. * pow(sh, 9) -
                    144. * pow(sh, 10) + 18. * pow(sh, 11)) -
                    lz * (-2.962962962962963 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -2) + 3.5555555555555554 * ash * sh * sqrt4sh *
                    sqrtsh * (8. + 6. * sh - 6. * pow(sh, 2) + pow(sh, 3)) -
                    0.09876543209876543 * Lsh * pow(-1 + sh, -5) * pow(sh, -6)*
                    (-3. - 10. * sh + 5. * pow(sh, 2) + 185. * pow(sh, 3) -
                    425. * pow(sh, 4) + 343. * pow(sh, 5) -
                    125. * pow(sh, 6) + 3. * pow(sh, 7) - 15. * pow(sh, 8) +
                    15. * pow(sh, 9)) -
                    0.0008230452674897119 * pow(-1 + sh, -4) * pow(sh, -6)*
                    (105. + 55. * sh - 1480. * pow(sh, 2) + 90. * pow(sh, 3) +
                    10470. * pow(sh, 4) - 25782. * pow(sh, 5) +
                    43242. * pow(sh, 6) - 52678. * pow(sh, 7) +
                    52987. * pow(sh, 8) - 14283. * pow(sh, 9) -
                    23976. * pow(sh, 10) + 3240. * pow(sh, 11) +
                    28080. * pow(sh, 12) - 22680. * pow(sh, 13) +
                    6480. * pow(sh, 14) - 630. * pow(sh, 15))) -
                    0.000013717421124828532 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (-2775. + 5550. * sh + 34425. * pow(sh, 2) +
                    1.48905e6 * pow(sh, 3) - 7.4002e6 * pow(sh, 4) +
                    1.4083748e7 * pow(sh, 5) - 1.4200216e7 * pow(sh, 6) +
                    9.34426e6 * pow(sh, 7) - 5.568515e6 * pow(sh, 8) +
                    141850. * pow(sh, 9) + 4.948647e6 * pow(sh, 10) -
                    27324. * pow(sh, 11) - 8.9613e6 * pow(sh, 12) +
                    9.8388e6 * pow(sh, 13) - 4.6764e6 * pow(sh, 14) +
                    1.03725e6 * pow(sh, 15) - 86850. * pow(sh, 16) +
                    1200. * pow(3.141592653589793, 2)*
                    (9. + 30. * sh - 15. * pow(sh, 2) - 1245. * pow(sh, 3) +
                    4325. * pow(sh, 4) - 6463. * pow(sh, 5) +
                    5357. * pow(sh, 6) - 2657. * pow(sh, 7) +
                    295. * pow(sh, 8) + 1405. * pow(sh, 9) -
                    1014. * pow(sh, 10) - 1782. * pow(sh, 11) +
                    3798. * pow(sh, 12) - 2988. * pow(sh, 13) +
                    1188. * pow(sh, 14) - 234. * pow(sh, 15) +
                    18. * pow(sh, 16)))) * pow(z, 4);
            else
                res += pow(z, 4)*(-24.99645604544183 +
                    176.89749924459056 * (1. - sh) +
                    310.586379087356 * pow(1. - sh, 2) +
                    603.5051355323303 * pow(1. - sh, 3) +
                    log(z)*(-36.21914373721251 +
                    37.13272398412609 * (1. - sh) -
                    85.48808015010837 * pow(1. - sh, 2) -
                    255.76022141568095 * pow(1. - sh, 3) -
                    462.83148077351 * pow(1. - sh, 4)) +
                    1307.9886664553635 * pow(1. - sh, 4) +
                    (2.5185185185185186 -
                    1.4814814814814814 * (1. - sh) -
                    30.666666666666668 * pow(1. - sh, 2) -
                    58.46913580246913 * pow(1. - sh, 3) -
                    107.30864197530865 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (9 <= maxpow) {
            if (sh < .900001)
                res += -0.0032249937011841773 * pow(3.141592653589793, 2) * pow(sh, -7)*
                (35. + 330. * sh + 1389. * pow(sh, 2) + 3212. * pow(sh, 3) +
                    1389. * pow(sh, 4) + 330. * pow(sh, 5) + 35. * pow(sh, 6)) *
                pow(z, 4.5);
            else
                res += (-213.8936488193757 - 855.5745952775028 * (1. - sh) -
                    2235.1886301624763 * pow(1. - sh, 2) -
                    4759.133686231109 * pow(1. - sh, 3) -
                    8947.24772070335 * pow(1. - sh, 4)) * pow(z, 4.5);
        }

        if (10 <= maxpow) {
            if (sh < .900001)
                res += (-14.958930350430506 * pow(-1 + sh, -3) * pow(sh, -3) +
                    12.444444444444445 * Li3sh * pow(-1 + sh, -3) * pow(sh, -3) -
                    4.148148148148148 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -3) + 3.5555555555555554 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-20. - 11. * sh + 24. * pow(sh, 2) -
                    9. * pow(sh, 3) + pow(sh, 4)) +
                    0.11851851851851852 * ash * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, 2)*(630. - 1853. * sh - 99. * pow(sh, 2) +
                    4458. * pow(sh, 3) - 5217. * pow(sh, 4) +
                    2538. * pow(sh, 5) - 564. * pow(sh, 6) + 47. * pow(sh, 7)) -
                    0.5925925925925926 * Li2sh * pow(-1 + sh, -6) * pow(sh, -4)*
                    (-63. + 355. * sh - 826. * pow(sh, 2) + 1008. * pow(sh, 3) -
                    665. * pow(sh, 4) + 213. * pow(sh, 5) - 7. * pow(sh, 7) +
                    pow(sh, 8)) - 10.666666666666666 * pow(ash, 2) *
                    pow(-1 + sh, -4) * pow(sh, 2)*
                    (10. - 90. * sh + 165. * pow(sh, 2) - 333. * pow(sh, 4) +
                    445. * pow(sh, 5) - 275. * pow(sh, 6) + 90. * pow(sh, 7) -
                    15. * pow(sh, 8) + pow(sh, 9)) -
                    Lsh * (12.444444444444445 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -3) - 3.5555555555555554 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-20. - 11. * sh + 24. * pow(sh, 2) -
                    9. * pow(sh, 3) + pow(sh, 4)) -
                    0.0004938271604938272 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (-162. + 36. * sh + 2914. * pow(sh, 2) +
                    5862. * pow(sh, 3) +
                    30. * (-767. + 2520. * Lshb) * pow(sh, 4) -
                    8. * (2131. + 53250. * Lshb +
                    2625. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    8. * (12113. + 123900. * Lshb +
                    7875. * pow(3.141592653589793, 2)) * pow(sh, 6) -
                    18. * (5693. + 67200. * Lshb +
                    3500. * pow(3.141592653589793, 2)) * pow(sh, 7) +
                    3. * (15101. + 266000. * Lshb +
                    7000. * pow(3.141592653589793, 2)) * pow(sh, 8) -
                    50. * (259. + 5112. * Lshb) * pow(sh, 9) +
                    9600. * pow(sh, 10) +
                    150. * (11. + 56. * Lshb) * pow(sh, 11) -
                    25. * (25. + 48. * Lshb) * pow(sh, 12))) -
                    0.014814814814814815 * pow(Lsh, 2) * pow(-1 + sh, -7) *
                    pow(sh, -8)*(-12. - 42. * sh + 28. * pow(sh, 2) +
                    308. * pow(sh, 3) + 1533. * pow(sh, 4) -
                    8318. * pow(sh, 5) +
                    420. * Lshb * pow(-1 + sh, 4) * pow(sh, 5) +
                    13422. * pow(sh, 6) - 8008. * pow(sh, 7) -
                    1788. * pow(sh, 8) + 4507. * pow(sh, 9) -
                    1540. * pow(sh, 10) - 140. * pow(sh, 11) +
                    160. * pow(sh, 12) - 20. * pow(sh, 13)) -
                    0.007407407407407408 * pow(lz, 2) * pow(sh, -8)*
                    (6. + 63. * sh + 301. * pow(sh, 2) + 840. * pow(sh, 3) -
                    630. * pow(sh, 4) + 99. * pow(sh, 5) - 153. * pow(sh, 6) -
                    6. * pow(sh, 7) - 1200. * pow(sh, 8) - 1440. * pow(sh, 9) -
                    3360. * pow(sh, 10) + 2400. * pow(sh, 11) +
                    5400. * pow(sh, 12) - 4800. * pow(sh, 13) +
                    1320. * pow(sh, 14) - 120. * pow(sh, 15)) -
                    lz * (-6.222222222222222 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -3) - 7.111111111111111 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-20. - 11. * sh + 24. * pow(sh, 2) -
                    9. * pow(sh, 3) + pow(sh, 4)) -
                    0.02962962962962963 * Lsh * pow(-1 + sh, -6) * pow(sh, -8)*
                    (6. + 27. * sh + 13. * pow(sh, 2) - 141. * pow(sh, 3) -
                    1380. * pow(sh, 4) + 5549. * pow(sh, 5) -
                    8207. * pow(sh, 6) + 6207. * pow(sh, 7) -
                    2809. * pow(sh, 8) + 1080. * pow(sh, 9) -
                    30. * pow(sh, 10) - 30. * pow(sh, 11) + 35. * pow(sh, 12))
                    + 0.00007054673721340387 * pow(-1 + sh, -5) *
                    pow(sh, -8)*(567. + 441. * sh - 9758. * pow(sh, 2) -
                    30275. * pow(sh, 3) + 166495. * pow(sh, 4) -
                    20923. * pow(sh, 5) - 866054. * pow(sh, 6) +
                    1.788427e6 * pow(sh, 7) - 1.255755e6 * pow(sh, 8) -
                    458890. * pow(sh, 9) + 1.258076e6 * pow(sh, 10) -
                    55832. * pow(sh, 11) + 524481. * pow(sh, 12) -
                    2.826e6 * pow(sh, 13) + 901320. * pow(sh, 14) +
                    5.25168e6 * pow(sh, 15) - 7.8771e6 * pow(sh, 16) +
                    5.0799e6 * pow(sh, 17) - 1.7073e6 * pow(sh, 18) +
                    290640. * pow(sh, 19) - 19740. * pow(sh, 20))) -
                    8.398421096833795e-8 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (161406. - 318843. * sh - 1.910657e6 * pow(sh, 2) +
                    738969. * pow(sh, 3) - 6.33135615e8 * pow(sh, 4) +
                    3.654733992e9 * pow(sh, 5) - 8.580730746e9 * pow(sh, 6) +
                    1.0387902666e10 * pow(sh, 7) -
                    6.272402572e9 * pow(sh, 8) + 4.35513965e8 * pow(sh, 9) +
                    2.310469467e9 * pow(sh, 10) -
                    2.213537811e9 * pow(sh, 11) +
                    4.191847021e9 * pow(sh, 12) -
                    8.659496442e9 * pow(sh, 13) +
                    5.00515056e9 * pow(sh, 14) +
                    1.057709688e10 * pow(sh, 15) -
                    2.294859924e10 * pow(sh, 16) +
                    2.03364504e10 * pow(sh, 17) -
                    1.00250472e10 * pow(sh, 18) +
                    2.83732932e9 * pow(sh, 19) - 4.2896364e8 * pow(sh, 20) +
                    2.674812e7 * pow(sh, 21) -
                    58800. * pow(3.141592653589793, 2)*
                    (18. + 81. * sh + 39. * pow(sh, 2) - 423. * pow(sh, 3) -
                    9810. * pow(sh, 4) + 47729. * pow(sh, 5) -
                    95467. * pow(sh, 6) + 103887. * pow(sh, 7) -
                    63289. * pow(sh, 8) + 15730. * pow(sh, 9) +
                    8388. * pow(sh, 10) - 21404. * pow(sh, 11) +
                    46029. * pow(sh, 12) - 50988. * pow(sh, 13) -
                    20160. * pow(sh, 14) + 133320. * pow(sh, 15) -
                    179760. * pow(sh, 16) + 130200. * pow(sh, 17) -
                    56400. * pow(sh, 18) + 14520. * pow(sh, 19) -
                    2040. * pow(sh, 20) + 120. * pow(sh, 21)))) * pow(z, 5);
            else
                res += pow(z, 5)*(-56.97595269013286 +
                    864.4668402137501 * (1. - sh) +
                    1722.9691178723424 * pow(1. - sh, 2) +
                    3775.432090316476 * pow(1. - sh, 3) +
                    log(z)*(-109.64319713305599 +
                    219.04552007798918 * (1. - sh) -
                    343.43648455706074 * pow(1. - sh, 2) -
                    1304.051993190421 * pow(1. - sh, 3) -
                    2520.1905777627526 * pow(1. - sh, 4)) +
                    9467.150417064422 * pow(1. - sh, 4) +
                    (9.481481481481481 - 1.7777777777777777 * (1. - sh) -
                    150. * pow(1. - sh, 2) -
                    309.9259259259259 * pow(1. - sh, 3) -
                    648.8888888888889 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (11 <= maxpow) {
            if (sh < .900001)
                res += -0.0002280298576594873 * pow(3.141592653589793, 2) * pow(sh, -9)*
                (315. + 3640. * sh + 19380. * pow(sh, 2) + 62088. * pow(sh, 3) +
                    124834. * pow(sh, 4) + 62088. * pow(sh, 5) +
                    19380. * pow(sh, 6) + 3640. * pow(sh, 7) + 315. * pow(sh, 8)) *
                pow(z, 5.5);
            else
                res += (-665.4469074380578 - 3327.234537190289 * (1. - sh) -
                    10380.971756033703 * pow(1. - sh, 2) -
                    25686.25062710903 * pow(1. - sh, 3) -
                    55072.86137879326 * pow(1. - sh, 4)) * pow(z, 5.5);
        }

        if (12 <= maxpow) {
            if (sh < .900001)
                res += (-35.90143284103321 * pow(-1 + sh, -3) * pow(sh, -4) +
                    29.866666666666667 * Li3sh * pow(-1 + sh, -3) * pow(sh, -4) -
                    9.955555555555556 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -4) - 4.148148148148148 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-8. + 102. * sh + 39. * pow(sh, 2) -
                    168. * pow(sh, 3) + 102. * pow(sh, 4) - 24. * pow(sh, 5) +
                    2. * pow(sh, 6)) - 0.03950617283950617 * ash * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3) * pow(sh, 2)*
                    (1236. - 20412. * sh + 48897. * pow(sh, 2) -
                    963. * pow(sh, 3) - 119097. * pow(sh, 4) +
                    165591. * pow(sh, 5) - 103846. * pow(sh, 6) +
                    34110. * pow(sh, 7) - 5685. * pow(sh, 8) + 379. * pow(sh, 9))
                    + 12.444444444444445 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 3)*(-90. + 560. * sh - 999. * pow(sh, 2) +
                    2278. * pow(sh, 4) - 3456. * pow(sh, 5) +
                    2565. * pow(sh, 6) - 1092. * pow(sh, 7) +
                    270. * pow(sh, 8) - 36. * pow(sh, 9) + 2. * pow(sh, 10)) -
                    0.02962962962962963 * Li2sh * pow(-1 + sh, -7) * pow(sh, -5)*
                    (3528. - 23478. * sh + 66420. * pow(sh, 2) -
                    102960. * pow(sh, 3) + 93240. * pow(sh, 4) -
                    47628. * pow(sh, 5) + 10808. * pow(sh, 6) -
                    135. * pow(sh, 9) + 30. * pow(sh, 10)) -
                    Lsh * (29.866666666666667 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -4) + 4.148148148148148 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-8. + 102. * sh + 39. * pow(sh, 2) -
                    168. * pow(sh, 3) + 102. * pow(sh, 4) -
                    24. * pow(sh, 5) + 2. * pow(sh, 6)) +
                    0.00009876543209876543 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (-440. + 32. * sh + 10212. * pow(sh, 2) +
                    23632. * pow(sh, 3) - 7888. * pow(sh, 4) +
                    168. * (-2921. + 6300. * Lshb) * pow(sh, 5) -
                    18. * (-60791. + 391300. * Lshb +
                    14000. * pow(3.141592653589793, 2)) * pow(sh, 6) +
                    6. * (-91207. + 3.321e6 * Lshb +
                    168000. * pow(3.141592653589793, 2)) * pow(sh, 7) -
                    216. * (3607. + 143000. * Lshb +
                    7000. * pow(3.141592653589793, 2)) * pow(sh, 8) +
                    6. * (202093. + 4.662e6 * Lshb +
                    168000. * pow(3.141592653589793, 2)) * pow(sh, 9) -
                    6. * (113557. + 2.3814e6 * Lshb +
                    42000. * pow(3.141592653589793, 2)) * pow(sh, 10) +
                    15. * (16441. + 216160. * Lshb) * pow(sh, 11) -
                    20060. * pow(sh, 12) - 42310. * pow(sh, 13) -
                    45. * (23. + 900. * Lshb) * pow(sh, 14) +
                    45. * (41. + 200. * Lshb) * pow(sh, 15))) -
                    0.002962962962962963 * pow(Lsh, 2) * pow(-1 + sh, -8) *
                    pow(sh, -10)*(40. + 184. * sh + 40. * pow(sh, 2) -
                    1160. * pow(sh, 3) - 2240. * pow(sh, 4) -
                    16100. * pow(sh, 5) + 134784. * pow(sh, 6) +
                    5040. * Lshb * pow(-1 + sh, 5) * pow(sh, 6) -
                    321315. * pow(sh, 7) + 355935. * pow(sh, 8) -
                    160960. * pow(sh, 9) - 34360. * pow(sh, 10) +
                    63842. * pow(sh, 11) - 18270. * pow(sh, 12) -
                    675. * pow(sh, 14) + 825. * pow(sh, 15) - 150. * pow(sh, 16))
                    - 0.002962962962962963 * pow(lz, 2) * pow(sh, -10)*
                    (10. + 126. * sh + 738. * pow(sh, 2) + 2646. * pow(sh, 3) +
                    6300. * pow(sh, 4) - 5040. * pow(sh, 5) +
                    1194. * pow(sh, 6) - 873. * pow(sh, 7) -
                    1791. * pow(sh, 8) - 10. * pow(sh, 9) -
                    8400. * pow(sh, 10) - 9100. * pow(sh, 11) -
                    11200. * pow(sh, 12) - 46900. * pow(sh, 13) +
                    47600. * pow(sh, 14) + 86450. * pow(sh, 15) -
                    116200. * pow(sh, 16) + 51100. * pow(sh, 17) -
                    9800. * pow(sh, 18) + 700. * pow(sh, 19)) -
                    lz * (-14.933333333333334 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -4) + 8.296296296296296 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-8. + 102. * sh + 39. * pow(sh, 2) -
                    168. * pow(sh, 3) + 102. * pow(sh, 4) -
                    24. * pow(sh, 5) + 2. * pow(sh, 6)) -
                    0.005925925925925926 * Lsh * pow(-1 + sh, -7) *
                    pow(sh, -10)*(-20. - 112. * sh - 132. * pow(sh, 2) +
                    448. * pow(sh, 3) + 1568. * pow(sh, 4) +
                    16548. * pow(sh, 5) - 99448. * pow(sh, 6) +
                    212137. * pow(sh, 7) - 240168. * pow(sh, 8) +
                    162112. * pow(sh, 9) - 68488. * pow(sh, 10) +
                    15610. * pow(sh, 11) - 980. * pow(sh, 12) +
                    20. * pow(sh, 13) - 105. * pow(sh, 14) +
                    135. * pow(sh, 15)) +
                    4.703115814226925e-6 * pow(-1 + sh, -6) * pow(sh, -10)*
                    (-4620. - 4284. * sh + 102942. * pow(sh, 2) +
                    351078. * pow(sh, 3) + 268254. * pow(sh, 4) -
                    1.062621e7 * pow(sh, 5) + 2.1816102e7 * pow(sh, 6) +
                    1.1713284e7 * pow(sh, 7) - 9.2176614e7 * pow(sh, 8) +
                    1.30993468e8 * pow(sh, 9) -
                    9.7705975e7 * pow(sh, 10) +
                    8.3020137e7 * pow(sh, 11) -
                    1.22513471e8 * pow(sh, 12) +
                    1.48849691e8 * pow(sh, 13) -
                    1.22190192e8 * pow(sh, 14) -
                    1.1648879e8 * pow(sh, 15) + 5.630639e8 * pow(sh, 16) -
                    4.247208e8 * pow(sh, 17) - 8.672076e8 * pow(sh, 18) +
                    2.255526e9 * pow(sh, 19) - 2.3724372e9 * pow(sh, 20) +
                    1.4385273e9 * pow(sh, 21) - 5.355966e8 * pow(sh, 22) +
                    1.205778e8 * pow(sh, 23) - 1.5036e7 * pow(sh, 24) +
                    795900. * pow(sh, 25))) +
                    3.732631598592798e-9 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (1.60524e6 - 3.372768e6 * sh - 2.1255318e7 * pow(sh, 2) +
                    5.1364152e7 * pow(sh, 3) + 1.37438532e8 * pow(sh, 4) -
                    4.2259525308e10 * pow(sh, 5) +
                    2.74794978024e11 * pow(sh, 6) -
                    7.61157740601e11 * pow(sh, 7) +
                    1.144773779814e12 * pow(sh, 8) -
                    9.93234387676e11 * pow(sh, 9) +
                    5.07224614904e11 * pow(sh, 10) -
                    2.38950893986e11 * pow(sh, 11) +
                    2.88773890244e11 * pow(sh, 12) -
                    3.74015495266e11 * pow(sh, 13) +
                    2.45587937594e11 * pow(sh, 14) +
                    5.02610946089e11 * pow(sh, 15) -
                    1.90653668497e12 * pow(sh, 16) +
                    2.1081380789e12 * pow(sh, 17) +
                    1.1357177076e12 * pow(sh, 18) -
                    6.24126592845e12 * pow(sh, 19) +
                    8.68889605815e12 * pow(sh, 20) -
                    6.88407273225e12 * pow(sh, 21) +
                    3.47059394955e12 * pow(sh, 22) -
                    1.1307208248e12 * pow(sh, 23) +
                    2.301705126e11 * pow(sh, 24) -
                    2.65567113e10 * pow(sh, 25) + 1.3226913e9 * pow(sh, 26) -
                    264600. * pow(3.141592653589793, 2)*
                    (60. + 336. * sh + 396. * pow(sh, 2) -
                    1344. * pow(sh, 3) - 4704. * pow(sh, 4) -
                    127764. * pow(sh, 5) + 807808. * pow(sh, 6) -
                    2.054287e6 * pow(sh, 7) + 2.890968e6 * pow(sh, 8) -
                    2.434312e6 * pow(sh, 9) + 1.206688e6 * pow(sh, 10) -
                    345954. * pow(sh, 11) + 158816. * pow(sh, 12) -
                    132224. * pow(sh, 13) - 435459. * pow(sh, 14) +
                    2.009791e6 * pow(sh, 15) - 3.32854e6 * pow(sh, 16) +
                    895300. * pow(sh, 17) + 6.5037e6 * pow(sh, 18) -
                    1.38369e7 * pow(sh, 19) + 1.50031e7 * pow(sh, 20) -
                    1.02879e7 * pow(sh, 21) + 4.6809e6 * pow(sh, 22) -
                    1.4084e6 * pow(sh, 23) + 268800. * pow(sh, 24) -
                    29400. * pow(sh, 25) + 1400. * pow(sh, 26)))) * pow(z, 6);
            else
                res += pow(z, 6)*(-148.4028349176458 +
                    3950.7161319928528 * (1. - sh) +
                    8850.818659636407 * pow(1. - sh, 2) +
                    21640.381586260777 * pow(1. - sh, 3) +
                    log(z)*(-362.06949684400286 +
                    1092.1268744485408 * (1. - sh) -
                    1419.5191669853152 * pow(1. - sh, 2) -
                    6512.814281606066 * pow(1. - sh, 3) -
                    12931.837463384778 * pow(1. - sh, 4)) +
                    61716.884755626575 * pow(1. - sh, 4) +
                    (36.888888888888886 + 6. * (1. - sh) -
                    722.9481481481481 * pow(1. - sh, 2) -
                    1587.2296296296297 * pow(1. - sh, 3) -
                    3724.4444444444443 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (13 <= maxpow) {
            if (sh < .900001)
                res += -0.00007175764751522327 * pow(3.141592653589793, 2) *
                pow(sh, -11)*(693. + 9450. * sh + 60305. * pow(sh, 2) +
                    238200. * pow(sh, 3) + 642234. * pow(sh, 4) +
                    1.173308e6 * pow(sh, 5) + 642234. * pow(sh, 6) +
                    238200. * pow(sh, 7) + 60305. * pow(sh, 8) +
                    9450. * pow(sh, 9) + 693. * pow(sh, 10)) * pow(z, 6.5);
            else
                res += (-2177.8262425245525 - 13066.957455147318 * (1. - sh) -
                    47367.72077490902 * pow(1. - sh, 2) -
                    133391.85735462885 * pow(1. - sh, 3) -
                    320723.8039660712 * pow(1. - sh, 4)) * pow(z, 6.5);
        }

        if (14 <= maxpow) {
            if (sh < .900001)
                res += (-94.02756220270605 * pow(-1 + sh, -3) * pow(sh, -5) +
                    78.22222222222223 * Li3sh * pow(-1 + sh, -3) * pow(sh, -5) -
                    26.074074074074073 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -5) + 2.1333333333333333 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(252. - 1383. * sh - 342. * pow(sh, 2) +
                    2808. * pow(sh, 3) - 2380. * pow(sh, 4) +
                    870. * pow(sh, 5) - 150. * pow(sh, 6) + 10. * pow(sh, 7)) +
                    0.033862433862433865 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 3)*
                    (-28035. + 242727. * sh - 521748. * pow(sh, 2) +
                    32319. * pow(sh, 3) + 1.309096e6 * pow(sh, 4) -
                    2.07882e6 * pow(sh, 5) + 1.572282e6 * pow(sh, 6) -
                    674165. * pow(sh, 7) + 166995. * pow(sh, 8) -
                    22266. * pow(sh, 9) + 1237. * pow(sh, 10)) -
                    0.35555555555555557 * Li2sh * pow(-1 + sh, -8) * pow(sh, -6)*
                    (-880. + 6748. * sh - 22484. * pow(sh, 2) +
                    42350. * pow(sh, 3) - 48950. * pow(sh, 4) +
                    34980. * pow(sh, 5) - 14476. * pow(sh, 6) +
                    2770. * pow(sh, 7) - 11. * pow(sh, 11) + 3. * pow(sh, 12)) -
                    6.4 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 3)*
                    (-70. + 1890. * sh - 9345. * pow(sh, 2) +
                    15946. * pow(sh, 3) - 39510. * pow(sh, 5) +
                    66255. * pow(sh, 6) - 56700. * pow(sh, 7) +
                    29358. * pow(sh, 8) - 9520. * pow(sh, 9) +
                    1890. * pow(sh, 10) - 210. * pow(sh, 11) + 10. * pow(sh, 12))
                    - 0.0014109347442680777 * pow(Lsh, 2) * pow(-1 + sh, -9) *
                    pow(sh, -12)*(-60. - 340. * sh - 312. * pow(sh, 2) +
                    1872. * pow(sh, 3) + 4980. * pow(sh, 4) +
                    1620. * pow(sh, 5) + 92970. * pow(sh, 6) -
                    934391. * pow(sh, 7) +
                    27720. * Lshb * pow(-1 + sh, 6) * pow(sh, 7) +
                    2.91171e6 * pow(sh, 8) - 4.537599e6 * pow(sh, 9) +
                    3.782335e6 * pow(sh, 10) - 1.339005e6 * pow(sh, 11) -
                    291378. * pow(sh, 12) + 408230. * pow(sh, 13) -
                    99792. * pow(sh, 14) - 1386. * pow(sh, 17) +
                    1764. * pow(sh, 18) - 378. * pow(sh, 19)) -
                    Lsh * (78.22222222222223 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -5) - 2.1333333333333333 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(252. - 1383. * sh - 342. * pow(sh, 2) +
                    2808. * pow(sh, 3) - 2380. * pow(sh, 4) +
                    870. * pow(sh, 5) - 150. * pow(sh, 6) + 10. * pow(sh, 7))\
         + 6.718736877467037e-6 * pow(-1 + sh, -9) * pow(sh, -12)*
                    (-3900. + 3800. * sh + 116136. * pow(sh, 2) +
                    213534. * pow(sh, 3) - 423060. * pow(sh, 4) -
                    1.26873e6 * pow(sh, 5) - 2.15436e7 * pow(sh, 6) +
                    1.26680142e8 * pow(sh, 7) -
                    9.702e6 * pow(3.141592653589793, 2) * pow(-1 + sh, 6) *
                    pow(sh, 7) - 2.855415e8 * pow(sh, 8) +
                    3.38516298e8 * pow(sh, 9) -
                    2.13687865e8 * pow(sh, 10) +
                    4.999881e7 * pow(sh, 11) + 1.8377766e7 * pow(sh, 12) +
                    52920. * Lshb * (-1. + sh) * pow(sh, 6)*
                    (-880. + 6748. * sh - 22484. * pow(sh, 2) +
                    42350. * pow(sh, 3) - 48950. * pow(sh, 4) +
                    34980. * pow(sh, 5) - 14476. * pow(sh, 6) +
                    2770. * pow(sh, 7) - 11. * pow(sh, 11) +
                    3. * pow(sh, 12)) - 1.1952947e7 * pow(sh, 13) -
                    421029. * pow(sh, 14) + 1.28772e6 * pow(sh, 15) +
                    235690. * pow(sh, 16) - 631953. * pow(sh, 17) +
                    26754. * pow(sh, 18) + 17934. * pow(sh, 19))) +
                    0.0014109347442680777 * pow(lz, 2) * pow(sh, -12)*
                    (-15. - 220. * sh - 1518. * pow(sh, 2) - 6534. * pow(sh, 3) -
                    19503. * pow(sh, 4) - 41580. * pow(sh, 5) +
                    34650. * pow(sh, 6) - 11094. * pow(sh, 7) +
                    2061. * pow(sh, 8) + 13740. * pow(sh, 9) +
                    12253. * pow(sh, 10) + 15. * pow(sh, 11) +
                    52920. * pow(sh, 12) + 55188. * pow(sh, 13) +
                    61992. * pow(sh, 14) + 49140. * pow(sh, 15) +
                    706860. * pow(sh, 16) - 807030. * pow(sh, 17) -
                    1.307124e6 * pow(sh, 18) + 2.391984e6 * pow(sh, 19) -
                    1.45908e6 * pow(sh, 20) + 434700. * pow(sh, 21) -
                    64260. * pow(sh, 22) + 3780. * pow(sh, 23)) -
                    lz * (-39.111111111111114 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -5) - 4.266666666666667 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(252. - 1383. * sh - 342. * pow(sh, 2) +
                    2808. * pow(sh, 3) - 2380. * pow(sh, 4) +
                    870. * pow(sh, 5) - 150. * pow(sh, 6) + 10. * pow(sh, 7))\
         - 0.0028218694885361554 * Lsh * pow(-1 + sh, -8) *
                    pow(sh, -12)*(30. + 200. * sh + 356. * pow(sh, 2) -
                    580. * pow(sh, 3) - 3070. * pow(sh, 4) -
                    3880. * pow(sh, 5) - 95410. * pow(sh, 6) +
                    738379. * pow(sh, 7) - 2.056331e6 * pow(sh, 8) +
                    3.10735e6 * pow(sh, 9) - 2.878135e6 * pow(sh, 10) +
                    1.70477e6 * pow(sh, 11) - 636256. * pow(sh, 12) +
                    132944. * pow(sh, 13) - 2380. * pow(sh, 14) -
                    2065. * pow(sh, 15) + 315. * pow(sh, 16) -
                    168. * pow(sh, 17) + 231. * pow(sh, 18)) -
                    2.035980871959708e-7 * pow(-1 + sh, -7) * pow(sh, -12)*
                    (-64350. - 66000. * sh + 1.848594e6 * pow(sh, 2) +
                    7.286499e6 * pow(sh, 3) + 5.743914e6 * pow(sh, 4) -
                    1.6732716e7 * pow(sh, 5) - 8.36674146e8 * pow(sh, 6) +
                    3.086059581e9 * pow(sh, 7) -
                    2.920757103e9 * pow(sh, 8) -
                    4.213007403e9 * pow(sh, 9) +
                    1.3030540952e10 * pow(sh, 10) -
                    1.3445244908e10 * pow(sh, 11) +
                    5.400217599e9 * pow(sh, 12) +
                    4.838723267e9 * pow(sh, 13) -
                    1.4220596345e10 * pow(sh, 14) +
                    1.7384453508e10 * pow(sh, 15) -
                    7.769749144e9 * pow(sh, 16) -
                    1.428417884e9 * pow(sh, 17) -
                    4.8744289353e10 * pow(sh, 18) +
                    1.85048020584e11 * pow(sh, 19) -
                    2.17589171184e11 * pow(sh, 20) -
                    1.46917624392e11 * pow(sh, 21) +
                    8.1335313675e11 * pow(sh, 22) -
                    1.2454621641e12 * pow(sh, 23) +
                    1.1155514832e12 * pow(sh, 24) -
                    6.5679027876e11 * pow(sh, 25) +
                    2.615261418e11 * pow(sh, 26) -
                    6.977252898e10 * pow(sh, 27) +
                    1.19369943e10 * pow(sh, 28) -
                    1.18203624e9 * pow(sh, 29) + 5.143446e7 * pow(sh, 30)))
                    + 1.4689616680805973e-11 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (-2.074545e8 + 4.76982e8 * sh +
                    3.223561968e9 * pow(sh, 2) -
                    1.2229671465e10 * pow(sh, 3) -
                    5.5118379195e10 * pow(sh, 4) +
                    5.758493697e10 * pow(sh, 5) +
                    3.34335296988e13 * pow(sh, 6) -
                    2.46183339844728e14 * pow(sh, 7) +
                    7.88493088730853e14 * pow(sh, 8) -
                    1.41978242154342e15 * pow(sh, 9) +
                    1.554606048182275e15 * pow(sh, 10) -
                    1.04527795567331e15 * pow(sh, 11) +
                    4.00804930228849e14 * pow(sh, 12) +
                    4.89753913432e12 * pow(sh, 13) -
                    2.6147112177326e14 * pow(sh, 14) +
                    4.2032307297505e14 * pow(sh, 15) -
                    3.35740716930395e14 * pow(sh, 16) +
                    2.57962579027846e14 * pow(sh, 17) -
                    1.575614131965377e15 * pow(sh, 18) +
                    5.472481687455111e15 * pow(sh, 19) -
                    8.337459144709044e15 * pow(sh, 20) +
                    1.620077584398966e15 * pow(sh, 21) +
                    1.7052028891101666e16 * pow(sh, 22) -
                    3.5835539060836744e16 * pow(sh, 23) +
                    4.028199224768888e16 * pow(sh, 24) -
                    2.974451143108045e16 * pow(sh, 25) +
                    1.5207708416925024e16 * pow(sh, 26) -
                    5.427604622626956e15 * pow(sh, 27) +
                    1.32696547935336e15 * pow(sh, 28) -
                    2.1153689203878e14 * pow(sh, 29) +
                    1.97724893751e13 * pow(sh, 30) -
                    8.2047522942e11 * pow(sh, 31) +
                    3.20166e7 * pow(3.141592653589793, 2)*
                    (90. + 600. * sh + 1068. * pow(sh, 2) -
                    1740. * pow(sh, 3) - 9210. * pow(sh, 4) -
                    11640. * pow(sh, 5) - 771330. * pow(sh, 6) +
                    5.877289e6 * pow(sh, 7) - 1.8209993e7 * pow(sh, 8) +
                    3.175429e7 * pow(sh, 9) - 3.4335085e7 * pow(sh, 10) +
                    2.335241e7 * pow(sh, 11) - 9.338992e6 * pow(sh, 12) +
                    1.311716e6 * pow(sh, 13) + 1.360208e6 * pow(sh, 14) -
                    2.228227e6 * pow(sh, 15) + 3.717793e6 * pow(sh, 16) -
                    1.4308436e7 * pow(sh, 17) +
                    4.9487425e7 * pow(sh, 18) -
                    9.6430764e7 * pow(sh, 19) +
                    7.2149616e7 * pow(sh, 20) +
                    1.14281496e8 * pow(sh, 21) -
                    4.10382504e8 * pow(sh, 22) +
                    6.13666368e8 * pow(sh, 23) -
                    5.83391592e8 * pow(sh, 24) +
                    3.84934788e8 * pow(sh, 25) -
                    1.80700632e8 * pow(sh, 26) +
                    6.0198768e7 * pow(sh, 27) - 1.389528e7 * pow(sh, 28) +
                    2.10924e6 * pow(sh, 29) - 189000. * pow(sh, 30) +
                    7560. * pow(sh, 31)))) * pow(z, 7);
            else
                res += pow(z, 7)*(-430.12069962932856 +
                    17443.091811249233 * (1. - sh) +
                    43453.89662587411 * pow(1. - sh, 2) +
                    117398.73976032245 * pow(1. - sh, 3) +
                    log(z)*(-1257.7516577920273 +
                    5061.433581940173 * (1. - sh) -
                    6031.581645793054 * pow(1. - sh, 2) -
                    32080.9522764348 * pow(1. - sh, 3) -
                    63495.86311123482 * pow(1. - sh, 4)) +
                    375562.95132859563 * pow(1. - sh, 4) +
                    (142.96296296296296 + 62.19259259259259 * (1. - sh) -
                    3445.866666666667 * pow(1. - sh, 2) -
                    7951.792592592593 * pow(1. - sh, 3) -
                    20635.85185185185 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (15 <= maxpow) {
            if (sh < .900001)
                res += -0.000012143601887191631 * pow(3.141592653589793, 2) *
                pow(sh, -13)*(3003. + 47124. * sh + 349398. * pow(sh, 2) +
                    1.62554e6 * pow(sh, 3) + 5.297685e6 * pow(sh, 4) +
                    1.265412e7 * pow(sh, 5) + 2.15477e7 * pow(sh, 6) +
                    1.265412e7 * pow(sh, 7) + 5.297685e6 * pow(sh, 8) +
                    1.62554e6 * pow(sh, 9) + 349398. * pow(sh, 10) +
                    47124. * pow(sh, 11) + 3003. * pow(sh, 12)) * pow(z, 7.5);
            else
                res += (-7371.104205467717 - 51597.729438274015 * (1. - sh) -
                    213024.91153801704 * pow(1. - sh, 2) -
                    672244.7035386559 * pow(1. - sh, 3) -
                    1.789717263773643e6 * pow(1. - sh, 4)) * pow(z, 7.5);
        }

        if (16 <= maxpow) {
            if (sh < .900001)
                res += (-261.9339232789668 * pow(-1 + sh, -3) * pow(sh, -6) +
                    217.9047619047619 * Li3sh * pow(-1 + sh, -3) * pow(sh, -6) -
                    72.63492063492063 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -6) - 11.733333333333333 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(16. - 564. * sh + 2004. * pow(sh, 2) +
                    294. * pow(sh, 3) - 4650. * pow(sh, 4) +
                    5035. * pow(sh, 5) - 2500. * pow(sh, 6) +
                    660. * pow(sh, 7) - 90. * pow(sh, 8) + 5. * pow(sh, 9)) -
                    0.004232804232804233 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 3)*
                    (-85472. + 3.302568e6 * sh - 2.0385756e7 * pow(sh, 2) +
                    4.0397342e7 * pow(sh, 3) - 3.614472e6 * pow(sh, 4) -
                    1.04197295e8 * pow(sh, 5) + 1.83802625e8 * pow(sh, 6) -
                    1.60798287e8 * pow(sh, 7) + 8.4097289e7 * pow(sh, 8) -
                    2.7378339e7 * pow(sh, 9) + 5.441121e6 * pow(sh, 10) -
                    604569. * pow(sh, 11) + 28789. * pow(sh, 12)) +
                    35.2 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 4)*
                    (280. - 3850. * sh + 16128. * pow(sh, 2) -
                    26340. * pow(sh, 3) + 69345. * pow(sh, 5) -
                    126120. * pow(sh, 6) + 121044. * pow(sh, 7) -
                    73080. * pow(sh, 8) + 29050. * pow(sh, 9) -
                    7600. * pow(sh, 10) + 1260. * pow(sh, 11) -
                    120. * pow(sh, 12) + 5. * pow(sh, 13)) -
                    0.008465608465608466 * Li2sh * pow(-1 + sh, -9) * pow(sh, -7)*
                    (115830. - 1.00518e6 * sh + 3.85476e6 * pow(sh, 2) -
                    8.55036e6 * pow(sh, 3) + 1.203202e7 * pow(sh, 4) -
                    1.104103e7 * pow(sh, 5) + 6.48648e6 * pow(sh, 6) -
                    2.24796e6 * pow(sh, 7) + 352374. * pow(sh, 8) -
                    455. * pow(sh, 13) + 140. * pow(sh, 14)) -
                    0.0006046863189720333 * pow(Lsh, 2) * pow(-1 + sh, -10) *
                    pow(sh, -14)*(105. + 705. * sh + 1085. * pow(sh, 2) -
                    3227. * pow(sh, 3) - 12621. * pow(sh, 4) -
                    7077. * pow(sh, 5) + 23415. * pow(sh, 6) -
                    716940. * pow(sh, 7) + 7.485607e6 * pow(sh, 8) +
                    180180. * Lshb * pow(-1 + sh, 7) * pow(sh, 8) -
                    2.8239694e7 * pow(sh, 9) + 5.5987932e7 * pow(sh, 10) -
                    6.48795e7 * pow(sh, 11) + 4.3001735e7 * pow(sh, 12) -
                    1.2259058e7 * pow(sh, 13) - 2.773834e6 * pow(sh, 14) +
                    3.038902e6 * pow(sh, 15) - 645645. * pow(sh, 16) -
                    3185. * pow(sh, 20) + 4165. * pow(sh, 21) -
                    980. * pow(sh, 22)) -
                    Lsh * (217.9047619047619 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -6) + 11.733333333333333 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(16. - 564. * sh + 2004. * pow(sh, 2) +
                    294. * pow(sh, 3) - 4650. * pow(sh, 4) +
                    5035. * pow(sh, 5) - 2500. * pow(sh, 6) +
                    660. * pow(sh, 7) - 90. * pow(sh, 8) + 5. * pow(sh, 9)) +
                    7.198646654428967e-7 * pow(-1 + sh, -10) * pow(sh, -14)*
                    (23625. - 21375. * sh - 887075. * pow(sh, 2) -
                    2.157211e6 * pow(sh, 3) + 2.815827e6 * pow(sh, 4) +
                    1.5702939e7 * pow(sh, 5) + 1.968855e6 * pow(sh, 6) +
                    6.76166505e8 * pow(sh, 7) -
                    5.205552799e9 * pow(sh, 8) -
                    2.52252e8 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 7) * pow(sh, 8) +
                    1.6194341023e10 * pow(sh, 9) -
                    2.8421717709e10 * pow(sh, 10) +
                    3.1333900255e10 * pow(sh, 11) -
                    2.2556366595e10 * pow(sh, 12) +
                    1.0744617653e10 * pow(sh, 13) -
                    3.487224951e9 * pow(sh, 14) +
                    11760. * Lshb * (-1. + sh) * pow(sh, 7)*
                    (115830. - 1.00518e6 * sh + 3.85476e6 * pow(sh, 2) -
                    8.55036e6 * pow(sh, 3) + 1.203202e7 * pow(sh, 4) -
                    1.104103e7 * pow(sh, 5) + 6.48648e6 * pow(sh, 6) -
                    2.24796e6 * pow(sh, 7) + 352374. * pow(sh, 8) -
                    455. * pow(sh, 13) + 140. * pow(sh, 14)) +
                    8.24604343e8 * pow(sh, 15) -
                    1.3509349e8 * pow(sh, 16) + 4.36884e6 * pow(sh, 17) +
                    1.4825832e7 * pow(sh, 18) + 986076. * pow(sh, 19) -
                    6.077568e6 * pow(sh, 20) + 658000. * pow(sh, 21) +
                    119000. * pow(sh, 22))) -
                    0.0001511715797430083 * pow(lz, 2) * pow(sh, -14)*
                    (105. + 1755. * sh + 13910. * pow(sh, 2) +
                    69498. * pow(sh, 3) + 244959. * pow(sh, 4) +
                    642213. * pow(sh, 5) + 1.26126e6 * pow(sh, 6) -
                    1.08108e6 * pow(sh, 7) + 433071. * pow(sh, 8) +
                    67773. * pow(sh, 9) - 377694. * pow(sh, 10) -
                    501530. * pow(sh, 11) - 344895. * pow(sh, 12) -
                    105. * pow(sh, 13) - 1.55232e6 * pow(sh, 14) -
                    1.591128e6 * pow(sh, 15) - 1.707552e6 * pow(sh, 16) -
                    1.9404e6 * pow(sh, 17) + 3.10464e6 * pow(sh, 18) -
                    5.588352e7 * pow(sh, 19) + 6.4731744e7 * pow(sh, 20) +
                    9.7485696e7 * pow(sh, 21) - 2.250864e8 * pow(sh, 22) +
                    1.751211e8 * pow(sh, 23) - 7.101864e7 * pow(sh, 24) +
                    1.610532e7 * pow(sh, 25) - 1.9404e6 * pow(sh, 26) +
                    97020. * pow(sh, 27)) -
                    lz * (-108.95238095238095 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -6) + 23.466666666666665 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(16. - 564. * sh + 2004. * pow(sh, 2) +
                    294. * pow(sh, 3) - 4650. * pow(sh, 4) +
                    5035. * pow(sh, 5) - 2500. * pow(sh, 6) +
                    660. * pow(sh, 7) - 90. * pow(sh, 8) + 5. * pow(sh, 9)) -
                    0.0006046863189720333 * Lsh * pow(-1 + sh, -9) *
                    pow(sh, -14)*(-105. - 810. * sh - 1895. * pow(sh, 2) +
                    1332. * pow(sh, 3) + 13953. * pow(sh, 4) +
                    21030. * pow(sh, 5) - 2385. * pow(sh, 6) +
                    1.39023e6 * pow(sh, 7) - 1.2340463e7 * pow(sh, 8) +
                    4.2069858e7 * pow(sh, 9) - 7.9546665e7 * pow(sh, 10) +
                    9.44649e7 * pow(sh, 11) - 7.3941065e7 * pow(sh, 12) +
                    3.83046e7 * pow(sh, 13) - 1.2446415e7 * pow(sh, 14) +
                    1.976646e6 * pow(sh, 15) + 12600. * pow(sh, 16) -
                    15820. * pow(sh, 17) - 9744. * pow(sh, 18) +
                    2604. * pow(sh, 19) - 630. * pow(sh, 20) +
                    910. * pow(sh, 21)) +
                    8.390031065768027e-10 * pow(-1 + sh, -8) * pow(sh, -14)*
                    (-1.0135125e7 - 1.1100375e7 * sh +
                    3.6848955e8 * pow(sh, 2) +
                    1.673522994e9 * pow(sh, 3) +
                    1.770566655e9 * pow(sh, 4) -
                    4.868950515e9 * pow(sh, 5) -
                    1.235310648e10 * pow(sh, 6) -
                    6.7286773554e11 * pow(sh, 7) +
                    3.536335413468e12 * pow(sh, 8) -
                    6.50817484746e12 * pow(sh, 9) +
                    2.54454845502e12 * pow(sh, 10) +
                    9.21737859458e12 * pow(sh, 11) -
                    1.734525157846e13 * pow(sh, 12) +
                    1.3825678158092e13 * pow(sh, 13) -
                    6.1111523809e12 * pow(sh, 14) +
                    5.967579184772e12 * pow(sh, 15) -
                    1.5549203270443e13 * pow(sh, 16) +
                    2.5319186594687e13 * pow(sh, 17) -
                    2.6298770135182e13 * pow(sh, 18) +
                    2.5191363944162e13 * pow(sh, 19) -
                    5.842005220263e12 * pow(sh, 20) -
                    1.75096058403693e14 * pow(sh, 21) +
                    6.63423072171552e14 * pow(sh, 22) -
                    1.020989867585688e15 * pow(sh, 23) +
                    8.1473828147712e13 * pow(sh, 24) +
                    2.68267039048008e15 * pow(sh, 25) -
                    5.80722293943792e15 * pow(sh, 26) +
                    7.01674940414448e15 * pow(sh, 27) -
                    5.70997655452224e15 * pow(sh, 28) +
                    3.30275638300608e15 * pow(sh, 29) -
                    1.37813214547008e15 * pow(sh, 30) +
                    4.1220913139406e14 * pow(sh, 31) -
                    8.614194412824e13 * pow(sh, 32) +
                    1.192739023476e13 * pow(sh, 33) -
                    9.8172946872e11 * pow(sh, 34) +
                    3.631041414e10 * pow(sh, 35))) -
                    2.3282359489865765e-15 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (-7.34806697625e11 + 1.86465740175e12 * sh +
                    1.3539275231625e13 * pow(sh, 2) -
                    6.7027116030732e13 * pow(sh, 3) -
                    3.63276406618983e14 * pow(sh, 4) -
                    7.707518005473e13 * pow(sh, 5) +
                    2.669628886797015e15 * pow(sh, 6) +
                    6.770358403959922e17 * pow(sh, 7) -
                    5.635158490072595e18 * pow(sh, 8) +
                    2.0599256704963682e19 * pow(sh, 9) -
                    4.3339042510046585e19 * pow(sh, 10) +
                    5.744182115659437e19 * pow(sh, 11) -
                    4.931522650068433e19 * pow(sh, 12) +
                    2.7187236012238836e19 * pow(sh, 13) -
                    9.574972725219654e18 * pow(sh, 14) +
                    3.9829978513193257e18 * pow(sh, 15) -
                    7.101765583473753e18 * pow(sh, 16) +
                    1.3106460108909054e19 * pow(sh, 17) -
                    1.6417164883861897e19 * pow(sh, 18) +
                    1.614980340692014e19 * pow(sh, 19) -
                    1.6686933598961236e18 * pow(sh, 20) -
                    1.0406361743628665e20 * pow(sh, 21) +
                    4.1780318877359584e20 * pow(sh, 22) -
                    7.917494561077571e20 * pow(sh, 23) +
                    5.495025478671567e20 * pow(sh, 24) +
                    9.680750952822325e20 * pow(sh, 25) -
                    3.329447282273382e21 * pow(sh, 26) +
                    5.025975451497482e21 * pow(sh, 27) -
                    4.956441109581607e21 * pow(sh, 28) +
                    3.485807792682049e21 * pow(sh, 29) -
                    1.7988128583543858e21 * pow(sh, 30) +
                    6.841200805238499e20 * pow(sh, 31) -
                    1.8949802366821115e20 * pow(sh, 32) +
                    3.71347919316412e19 * pow(sh, 33) -
                    4.870681746866896e18 * pow(sh, 34) +
                    3.8293915404046304e17 * pow(sh, 35) -
                    1.362249094884678e16 * pow(sh, 36) +
                    4.32864432e10 * pow(3.141592653589793, 2)*
                    (315. + 2430. * sh + 5685. * pow(sh, 2) -
                    3996. * pow(sh, 3) - 41859. * pow(sh, 4) -
                    63090. * pow(sh, 5) + 7155. * pow(sh, 6) -
                    1.119771e7 * pow(sh, 7) + 9.7239319e7 * pow(sh, 8) -
                    3.54595974e8 * pow(sh, 9) +
                    7.40399865e8 * pow(sh, 10) -
                    9.8372572e8 * pow(sh, 11) +
                    8.60053945e8 * pow(sh, 12) -
                    4.8766596e8 * pow(sh, 13) +
                    1.66863615e8 * pow(sh, 14) -
                    3.4122042e7 * pow(sh, 15) + 2.632797e7 * pow(sh, 16) -
                    5.075218e7 * pow(sh, 17) + 5.5929402e7 * pow(sh, 18) +
                    5.4364188e7 * pow(sh, 19) -
                    7.17712236e8 * pow(sh, 20) +
                    2.87081535e9 * pow(sh, 21) -
                    6.45842757e9 * pow(sh, 22) +
                    7.27388046e9 * pow(sh, 23) +
                    2.42462682e9 * pow(sh, 24) -
                    2.5172149464e10 * pow(sh, 25) +
                    5.057866044e10 * pow(sh, 26) -
                    6.234146226e10 * pow(sh, 27) +
                    5.421545514e10 * pow(sh, 28) -
                    3.47700276e10 * pow(sh, 29) +
                    1.6675099056e10 * pow(sh, 30) -
                    5.96740914e9 * pow(sh, 31) +
                    1.5692985e9 * pow(sh, 32) - 2.939706e8 * pow(sh, 33) +
                    3.706164e7 * pow(sh, 34) - 2.81358e6 * pow(sh, 35) +
                    97020. * pow(sh, 36)))) * pow(z, 8);
            else
                res += pow(z, 8)*(-1367.476272678532 +
                    75386.10953505589 * (1. - sh) +
                    206788.6029072873 * pow(1. - sh, 2) +
                    612243.1048388471 * pow(1. - sh, 3) +
                    log(z)*(-4510.122303044576 +
                    22547.161714277718 * (1. - sh) -
                    26241.580654085326 * pow(1. - sh, 2) -
                    156447.1717665157 * pow(1. - sh, 3) -
                    301356.1551343778 * pow(1. - sh, 4)) +
                    2.1731813355501974e6 * pow(1. - sh, 4) +
                    (551.1111111111111 + 358.4888888888889 * (1. - sh) -
                    16247.2 * pow(1. - sh, 2) -
                    39192.26666666667 * pow(1. - sh, 3) -
                    111361.85396825397 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (17 <= maxpow) {
            if (sh < .900001)
                res += -4.333599104840935e-6 * pow(3.141592653589793, 2) * pow(sh, -15)*
                (6435. + 114114. * sh + 962577. * pow(sh, 2) +
                    5.137524e6 * pow(sh, 3) + 1.9445755e7 * pow(sh, 4) +
                    5.526435e7 * pow(sh, 5) + 1.20557265e8 * pow(sh, 6) +
                    1.9446652e8 * pow(sh, 7) + 1.20557265e8 * pow(sh, 8) +
                    5.526435e7 * pow(sh, 9) + 1.9445755e7 * pow(sh, 10) +
                    5.137524e6 * pow(sh, 11) + 962577. * pow(sh, 12) +
                    114114. * pow(sh, 13) + 6435. * pow(sh, 14)) * pow(z, 8.5);
            else
                res += (-25553.161245621417 - 204425.28996497134 * (1. - sh) -
                    946744.6241502736 * pow(1. - sh, 2) -
                    3.307856723245693e6 * pow(1. - sh, 3) -
                    9.654303733111342e6 * pow(1. - sh, 4)) * pow(z, 8.5);
        }

        if (18 <= maxpow) {
            if (sh < .900001)
                res += (-763.9739428969865 * pow(-1 + sh, -3) * pow(sh, -7) +
                    635.5555555555555 * Li3sh * pow(-1 + sh, -3) * pow(sh, -7) -
                    211.85185185185185 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -7) + 24.211640211640212 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-216. + 3134. * sh - 8598. * pow(sh, 2) -
                    651. * pow(sh, 3) + 21696. * pow(sh, 4) -
                    28281. * pow(sh, 5) + 17655. * pow(sh, 6) -
                    6279. * pow(sh, 7) + 1302. * pow(sh, 8) -
                    147. * pow(sh, 9) + 7. * pow(sh, 10)) +
                    0.0009406231628453851 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 4)*
                    (1.1439036e7 - 2.01476662e8 * sh +
                    9.97505748e8 * pow(sh, 2) - 1.852234251e9 * pow(sh, 3) +
                    2.01151369e8 * pow(sh, 4) + 4.889181924e9 * pow(sh, 5) -
                    9.389910087e9 * pow(sh, 6) + 9.234375093e9 * pow(sh, 7) -
                    5.644419255e9 * pow(sh, 8) + 2.256993135e9 * pow(sh, 9) -
                    5.91888983e8 * pow(sh, 10) + 9.8193564e7 * pow(sh, 11) -
                    9.351768e6 * pow(sh, 12) + 389657. * pow(sh, 13)) -
                    72.63492063492063 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 4)*
                    (42. - 2268. * sh + 21546. * pow(sh, 2) -
                    79506. * pow(sh, 3) + 124821. * pow(sh, 4) -
                    344253. * pow(sh, 6) + 669627. * pow(sh, 7) -
                    706482. * pow(sh, 8) + 483252. * pow(sh, 9) -
                    225666. * pow(sh, 10) + 72738. * pow(sh, 11) -
                    15939. * pow(sh, 12) + 2268. * pow(sh, 13) -
                    189. * pow(sh, 14) + 7. * pow(sh, 15)) -
                    0.12698412698412698 * Li2sh * pow(-1 + sh, -10) * pow(sh, -8)*
                    (-25025. + 242385. * sh - 1.05138e6 * pow(sh, 2) +
                    2.68422e6 * pow(sh, 3) - 4.45263e6 * pow(sh, 4) +
                    4.98771e6 * pow(sh, 5) - 3.78378e6 * pow(sh, 6) +
                    1.88188e6 * pow(sh, 7) - 559845. * pow(sh, 8) +
                    77077. * pow(sh, 9) - 30. * pow(sh, 15) + 10. * pow(sh, 16))\
      - pow(Lsh, 2)*(317.77777777777777 * Lshb *
                    pow(-1 + sh, -3) * pow(sh, -7) -
                    0.0008818342151675485 * pow(-1 + sh, -11) * pow(sh, -16)*
                    (56. + 434. * sh + 920. * pow(sh, 2) -
                    1480. * pow(sh, 3) - 9184. * pow(sh, 4) -
                    8932. * pow(sh, 5) + 19712. * pow(sh, 6) +
                    36344. * pow(sh, 7) - 1.69477e6 * pow(sh, 8) +
                    1.8252907e7 * pow(sh, 9) - 7.946714e7 * pow(sh, 10) +
                    1.8952648e8 * pow(sh, 11) -
                    2.77202072e8 * pow(sh, 12) +
                    2.5518346e8 * pow(sh, 13) -
                    1.39581344e8 * pow(sh, 14) +
                    3.2774056e7 * pow(sh, 15) + 7.750744e6 * pow(sh, 16) -
                    6.868451e6 * pow(sh, 17) + 1.287e6 * pow(sh, 18) +
                    2160. * pow(sh, 23) - 2880. * pow(sh, 24) +
                    720. * pow(sh, 25))) -
                    Lsh * (635.5555555555555 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -7) - 24.211640211640212 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-216. + 3134. * sh - 8598. * pow(sh, 2) -
                    651. * pow(sh, 3) + 21696. * pow(sh, 4) -
                    28281. * pow(sh, 5) + 17655. * pow(sh, 6) -
                    6279. * pow(sh, 7) + 1302. * pow(sh, 8) -
                    147. * pow(sh, 9) + 7. * pow(sh, 10)) +
                    1.3997368494722993e-6 * pow(-1 + sh, -11) * pow(sh, -16)*
                    (-8330. + 7105. * sh + 386410. * pow(sh, 2) +
                    1.18054e6 * pow(sh, 3) - 798812. * pow(sh, 4) -
                    8.868482e6 * pow(sh, 5) - 8.370068e6 * pow(sh, 6) +
                    3.0826012e7 * pow(sh, 7) - 1.26704984e9 * pow(sh, 8) +
                    1.111592408e10 * pow(sh, 9) -
                    3.78378e8 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 8) * pow(sh, 9) -
                    4.2458337922e10 * pow(sh, 10) +
                    9.4156125152e10 * pow(sh, 11) -
                    1.3584221371e11 * pow(sh, 12) +
                    1.3440382928e11 * pow(sh, 13) -
                    9.3541794472e10 * pow(sh, 14) +
                    4.634995316e10 * pow(sh, 15) -
                    1.6372744375e10 * pow(sh, 16) +
                    90720. * Lshb * (-1. + sh) * pow(sh, 8)*
                    (-25025. + 242385. * sh - 1.05138e6 * pow(sh, 2) +
                    2.68422e6 * pow(sh, 3) - 4.45263e6 * pow(sh, 4) +
                    4.98771e6 * pow(sh, 5) - 3.78378e6 * pow(sh, 6) +
                    1.88188e6 * pow(sh, 7) - 559845. * pow(sh, 8) +
                    77077. * pow(sh, 9) - 30. * pow(sh, 15) +
                    10. * pow(sh, 16)) + 4.01052785e9 * pow(sh, 17) -
                    5.55450048e8 * pow(sh, 18) -
                    2.6939556e7 * pow(sh, 19) + 8.322174e6 * pow(sh, 20) +
                    8.304786e6 * pow(sh, 21) - 145404. * pow(sh, 22) -
                    3.19446e6 * pow(sh, 23) + 483165. * pow(sh, 24) +
                    45765. * pow(sh, 25))) -
                    0.0004409171075837742 * pow(lz, 2) * pow(sh, -16)*
                    (28. + 525. * sh + 4695. * pow(sh, 2) + 26650. * pow(sh, 3) +
                    107718. * pow(sh, 4) + 329043. * pow(sh, 5) +
                    782353. * pow(sh, 6) + 1.44144e6 * pow(sh, 7) -
                    1.26126e6 * pow(sh, 8) + 599831. * pow(sh, 9) +
                    230937. * pow(sh, 10) - 340854. * pow(sh, 11) -
                    604990. * pow(sh, 12) - 577095. * pow(sh, 13) -
                    354945. * pow(sh, 14) - 28. * pow(sh, 15) -
                    1.729728e6 * pow(sh, 16) - 1.757184e6 * pow(sh, 17) -
                    1.839552e6 * pow(sh, 18) - 2.004288e6 * pow(sh, 19) -
                    2.855424e6 * pow(sh, 20) + 2.6138112e7 * pow(sh, 21) -
                    1.80276096e8 * pow(sh, 22) + 2.04107904e8 * pow(sh, 23) +
                    2.91953376e8 * pow(sh, 24) - 8.04076416e8 * pow(sh, 25) +
                    7.54586976e8 * pow(sh, 26) - 3.86127456e8 * pow(sh, 27) +
                    1.18294176e8 * pow(sh, 28) - 2.1717696e7 * pow(sh, 29) +
                    2.210208e6 * pow(sh, 30) - 96096. * pow(sh, 31)) -
                    lz * (-317.77777777777777 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -7) - 48.423280423280424 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-216. + 3134. * sh - 8598. * pow(sh, 2) -
                    651. * pow(sh, 3) + 21696. * pow(sh, 4) -
                    28281. * pow(sh, 5) + 17655. * pow(sh, 6) -
                    6279. * pow(sh, 7) + 1302. * pow(sh, 8) -
                    147. * pow(sh, 9) + 7. * pow(sh, 10)) -
                    0.001763668430335097 * Lsh * pow(-1 + sh, -10) *
                    pow(sh, -16)*(28. + 245. * sh + 705. * pow(sh, 2) -
                    35. * pow(sh, 3) - 4627. * pow(sh, 4) -
                    9093. * pow(sh, 5) + 763. * pow(sh, 6) +
                    18935. * pow(sh, 7) - 1.594215e6 * pow(sh, 8) +
                    1.5443423e7 * pow(sh, 9) - 6.1656473e7 * pow(sh, 10) +
                    1.39716843e8 * pow(sh, 11) -
                    2.03006125e8 * pow(sh, 12) +
                    1.99413865e8 * pow(sh, 13) -
                    1.34518335e8 * pow(sh, 14) +
                    6.1151573e7 * pow(sh, 15) -
                    1.7326475e7 * pow(sh, 16) + 2.392884e6 * pow(sh, 17) +
                    25200. * pow(sh, 18) + 3024. * pow(sh, 19) -
                    7560. * pow(sh, 20) - 3276. * pow(sh, 21) +
                    1260. * pow(sh, 22) - 180. * pow(sh, 23) +
                    270. * pow(sh, 24)) +
                    4.894184788364682e-9 * pow(-1 + sh, -9) * pow(sh, -16)*
                    (1.19119e6 + 1.366365e6 * sh -
                    5.371509e7 * pow(sh, 2) - 2.77613765e8 * pow(sh, 3) -
                    3.87282324e8 * pow(sh, 4) +
                    7.71242043e8 * pow(sh, 5) +
                    3.126686134e9 * pow(sh, 6) +
                    1.074010509e9 * pow(sh, 7) +
                    3.93846095214e11 * pow(sh, 8) -
                    2.613136199245e12 * pow(sh, 9) +
                    6.74269843533e12 * pow(sh, 10) -
                    7.676937500739e12 * pow(sh, 11) +
                    1.9905569996e10 * pow(sh, 12) +
                    1.1323630699581e13 * pow(sh, 13) -
                    1.5234053867994e13 * pow(sh, 14) +
                    9.845078305115e12 * pow(sh, 15) -
                    2.700610570998e12 * pow(sh, 16) -
                    3.170609780136e12 * pow(sh, 17) +
                    1.1930111549088e13 * pow(sh, 18) -
                    2.3203039225488e13 * pow(sh, 19) +
                    2.8131676788624e13 * pow(sh, 20) -
                    1.8366269990976e13 * pow(sh, 21) -
                    5.86498925406e12 * pow(sh, 22) -
                    2.8811545081488e13 * pow(sh, 23) +
                    4.5661550453265e14 * pow(sh, 24) -
                    1.732122473878368e15 * pow(sh, 25) +
                    3.197952696667872e15 * pow(sh, 26) -
                    1.902641717625792e15 * pow(sh, 27) -
                    5.333806838035104e15 * pow(sh, 28) +
                    1.7146879255828608e16 * pow(sh, 29) -
                    2.675706192884525e16 * pow(sh, 30) +
                    2.8039050515059584e16 * pow(sh, 31) -
                    2.1385006944917616e16 * pow(sh, 32) +
                    1.2221439347413296e16 * pow(sh, 33) -
                    5.277310784521776e15 * pow(sh, 34) +
                    1.713784020076128e15 * pow(sh, 35) -
                    4.11671384988864e14 * pow(sh, 36) +
                    7.0855642249392e13 * pow(sh, 37) -
                    8.252635735344e12 * pow(sh, 38) +
                    5.81797087872e11 * pow(sh, 39) -
                    1.8722239536e10 * pow(sh, 40))) +
                    6.7906881845441814e-15 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (-1.522039519e11 + 4.26276275425e11 * sh +
                    3.315607505925e12 * pow(sh, 2) -
                    1.9935815474575e13 * pow(sh, 3) -
                    1.24680380503679e14 * pow(sh, 4) -
                    9.4734104241777e13 * pow(sh, 5) +
                    6.72219759402191e14 * pow(sh, 6) +
                    2.120473984303675e15 * pow(sh, 7) +
                    7.662945656754339e17 * pow(sh, 8) -
                    7.132526555906264e18 * pow(sh, 9) +
                    2.9416202534538686e19 * pow(sh, 10) -
                    7.102049557437948e19 * pow(sh, 11) +
                    1.107461387150374e20 * pow(sh, 12) -
                    1.1592296841795374e20 * pow(sh, 13) +
                    8.202599046107015e19 * pow(sh, 14) -
                    3.867573016059e19 * pow(sh, 15) +
                    1.1583790708091849e19 * pow(sh, 16) +
                    5.455110631455277e16 * pow(sh, 17) -
                    9.021690519674575e18 * pow(sh, 18) +
                    2.0989006324251304e19 * pow(sh, 19) -
                    3.024958551383288e19 * pow(sh, 20) +
                    2.6235194397528736e19 * pow(sh, 21) -
                    4.751003778396708e18 * pow(sh, 22) +
                    3.1013412939244257e19 * pow(sh, 23) -
                    4.4030880872708604e20 * pow(sh, 24) +
                    1.8521539756313275e21 * pow(sh, 25) -
                    4.09723866666257e21 * pow(sh, 26) +
                    4.4398535867110675e21 * pow(sh, 27) +
                    1.6558648776187506e21 * pow(sh, 28) -
                    1.5447456223820402e22 * pow(sh, 29) +
                    3.0926810843136838e22 * pow(sh, 30) -
                    3.877106240961276e22 * pow(sh, 31) +
                    3.495116951810053e22 * pow(sh, 32) -
                    2.3715466598184745e22 * pow(sh, 33) +
                    1.231700538915695e22 * pow(sh, 34) -
                    4.908204594473572e21 * pow(sh, 35) +
                    1.4885933408647808e21 * pow(sh, 36) -
                    3.372012167296045e20 * pow(sh, 37) +
                    5.517431714182939e19 * pow(sh, 38) -
                    6.150944761142205e18 * pow(sh, 39) +
                    4.174745980836151e17 * pow(sh, 40) -
                    1.2998152420597344e16 * pow(sh, 41) +
                    4.32864432e10 * pow(3.141592653589793, 2)*
                    (84. + 735. * sh + 2115. * pow(sh, 2) -
                    105. * pow(sh, 3) - 13881. * pow(sh, 4) -
                    27279. * pow(sh, 5) + 2289. * pow(sh, 6) +
                    56805. * pow(sh, 7) - 1.2530385e7 * pow(sh, 8) +
                    1.20589919e8 * pow(sh, 9) -
                    5.04052193e8 * pow(sh, 10) +
                    1.226945139e9 * pow(sh, 11) -
                    1.939059325e9 * pow(sh, 12) +
                    2.078426665e9 * pow(sh, 13) -
                    1.520105055e9 * pow(sh, 14) +
                    7.36103333e8 * pow(sh, 15) -
                    2.14713611e8 * pow(sh, 16) +
                    1.9961346e7 * pow(sh, 17) +
                    3.7191526e7 * pow(sh, 18) -
                    8.4336034e7 * pow(sh, 19) +
                    1.23678654e8 * pow(sh, 20) -
                    1.54538642e8 * pow(sh, 21) +
                    5.6921303e8 * pow(sh, 22) -
                    3.377351682e9 * pow(sh, 23) +
                    1.3338367312e10 * pow(sh, 24) -
                    3.3040152232e10 * pow(sh, 25) +
                    4.7430542016e10 * pow(sh, 26) -
                    1.4900494752e10 * pow(sh, 27) -
                    1.03195325376e11 * pow(sh, 28) +
                    2.85860573856e11 * pow(sh, 29) -
                    4.41409041216e11 * pow(sh, 30) +
                    4.79314177056e11 * pow(sh, 31) -
                    3.90721421376e11 * pow(sh, 32) +
                    2.45176465248e11 * pow(sh, 33) -
                    1.19414737728e11 * pow(sh, 34) +
                    4.5058851552e10 * pow(sh, 35) -
                    1.3033582848e10 * pow(sh, 36) +
                    2.831770656e9 * pow(sh, 37) -
                    4.46462016e8 * pow(sh, 38) +
                    4.8144096e7 * pow(sh, 39) - 3.171168e6 * pow(sh, 40) +
                    96096. * pow(sh, 41)))) * pow(z, 9);
            else
                res += pow(z, 9)*(-4690.616436608783 +
                    321124.035320987 * (1. - sh) +
                    961535.3725143364 * pow(1. - sh, 2) +
                    3.097773872353616e6 * pow(1. - sh, 3) +
                    log(z)*(-16520.037265205938 +
                    98045.98792298837 * (1. - sh) -
                    116206.46863444796 * pow(1. - sh, 2) -
                    756704.7491730026 * pow(1. - sh, 3) -
                    1.3920173353150578e6 * pow(1. - sh, 4)) +
                    1.2094091231182646e7 * pow(1. - sh, 4) +
                    (2118.6666666666665 + 1750. * (1. - sh) -
                    75789.11111111111 * pow(1. - sh, 2) -
                    190615.42857142858 * pow(1. - sh, 3) -
                    588434.7301587302 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (19 <= maxpow) {
            if (sh < .900001)
                res += -2.0125073242295363e-7 * pow(3.141592653589793, 2) * pow(sh, -17)*
                (109395. + 2.16216e6 * sh + 2.0430696e7 * pow(sh, 2) +
                    1.22866128e8 * pow(sh, 3) + 5.27900436e8 * pow(sh, 4) +
                    1.72236568e9 * pow(sh, 5) + 4.41295356e9 * pow(sh, 6) +
                    8.96714376e9 * pow(sh, 7) + 1.385377093e10 * pow(sh, 8) +
                    8.96714376e9 * pow(sh, 9) + 4.41295356e9 * pow(sh, 10) +
                    1.72236568e9 * pow(sh, 11) + 5.27900436e8 * pow(sh, 12) +
                    1.22866128e8 * pow(sh, 13) + 2.0430696e7 * pow(sh, 14) +
                    2.16216e6 * pow(sh, 15) + 109395. * pow(sh, 16)) * pow(z, 9.5);
            else
                res += (-90187.62792572267 - 811688.6513315039 * (1. - sh) -
                    4.166668410168387e6 * pow(1. - sh, 2) -
                    1.596321014285291e7 * pow(1. - sh, 3) -
                    5.066289998727471e7 * pow(1. - sh, 4)) * pow(z, 9.5);
        }

        if (20 <= maxpow) {
            if (sh < .900001)
                res += (-2308.8990274220037 * pow(-1 + sh, -3) * pow(sh, -8) +
                    1920.79012345679 * Li3sh * pow(-1 + sh, -3) * pow(sh, -8) -
                    640.2633744855967 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -8) - 18.158730158730158 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-80. + 5340. * sh - 47370. * pow(sh, 2) +
                    109970. * pow(sh, 3) + 2889. * pow(sh, 4) -
                    292716. * pow(sh, 5) + 440556. * pow(sh, 6) -
                    328734. * pow(sh, 7) + 146475. * pow(sh, 8) -
                    40768. * pow(sh, 9) + 6972. * pow(sh, 10) -
                    672. * pow(sh, 11) + 28. * pow(sh, 12)) -
                    0.0028218694885361554 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 4)*
                    (1.1035e6 - 7.72587e7 * sh + 8.84076615e8 * pow(sh, 2) -
                    3.732489695e9 * pow(sh, 3) + 6.571169658e9 * pow(sh, 4) -
                    8.05040586e8 * pow(sh, 5) -
                    1.7678698868e10 * pow(sh, 6) +
                    3.6419080572e10 * pow(sh, 7) -
                    3.9440395638e10 * pow(sh, 8) +
                    2.7362254298e10 * pow(sh, 9) -
                    1.2874702995e10 * pow(sh, 10) +
                    4.165441731e9 * pow(sh, 11) -
                    9.14198644e8 * pow(sh, 12) + 1.30140756e8 * pow(sh, 13) -
                    1.0845063e7 * pow(sh, 14) + 401669. * pow(sh, 15)) +
                    54.476190476190474 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 5)*(-1890. + 45864. * sh - 340200. * pow(sh, 2) +
                    1.13508e6 * pow(sh, 3) - 1.721265e6 * pow(sh, 4) +
                    4.925592e6 * pow(sh, 6) - 1.01388e7 * pow(sh, 7) +
                    1.158381e7 * pow(sh, 8) - 8.79228e6 * pow(sh, 9) +
                    4.68432e6 * pow(sh, 10) - 1.782648e6 * pow(sh, 11) +
                    482895. * pow(sh, 12) - 91000. * pow(sh, 13) +
                    11340. * pow(sh, 14) - 840. * pow(sh, 15) + 28. * pow(sh, 16)
                    ) - 0.003527336860670194 * Li2sh * pow(-1 + sh, -11) *
                    pow(sh, -9)*(2.994992e6 - 3.202199e7 * sh +
                    1.54990836e8 * pow(sh, 2) - 4.47615168e8 * pow(sh, 3) +
                    8.5514352e8 * pow(sh, 4) - 1.130787504e9 * pow(sh, 5) +
                    1.04997984e9 * pow(sh, 6) - 6.77511744e8 * pow(sh, 7) +
                    2.91603312e8 * pow(sh, 8) - 7.589582e7 * pow(sh, 9) +
                    9.069632e6 * pow(sh, 10) - 1071. * pow(sh, 17) +
                    378. * pow(sh, 18)) -
                    0.00003919263178522438 * pow(Lsh, 2) * pow(-1 + sh, -12) *
                    pow(sh, -18)*(1008. + 8848. * sh + 23688. * pow(sh, 2) -
                    17352. * pow(sh, 3) - 212592. * pow(sh, 4) -
                    311184. * pow(sh, 5) + 400176. * pow(sh, 6) +
                    1.492176e6 * pow(sh, 7) - 255024. * pow(sh, 8) -
                    1.29624264e8 * pow(sh, 9) + 1.494083496e9 * pow(sh, 10) +
                    2.450448e7 * Lshb * pow(-1 + sh, 9) * pow(sh, 10) -
                    7.309557639e9 * pow(sh, 11) +
                    2.0237476311e10 * pow(sh, 12) -
                    3.5492453304e10 * pow(sh, 13) +
                    4.1152337856e10 * pow(sh, 14) -
                    3.1358059992e10 * pow(sh, 15) +
                    1.4540248968e10 * pow(sh, 16) -
                    2.862291672e9 * pow(sh, 17) -
                    7.07775372e8 * pow(sh, 18) + 5.21810798e8 * pow(sh, 19) -
                    8.729721e7 * pow(sh, 20) - 48195. * pow(sh, 26) +
                    65205. * pow(sh, 27) - 17010. * pow(sh, 28)) -
                    Lsh * (1920.79012345679 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -8) + 18.158730158730158 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-80. + 5340. * sh - 47370. * pow(sh, 2) +
                    109970. * pow(sh, 3) + 2889. * pow(sh, 4) -
                    292716. * pow(sh, 5) + 440556. * pow(sh, 6) -
                    328734. * pow(sh, 7) + 146475. * pow(sh, 8) -
                    40768. * pow(sh, 9) + 6972. * pow(sh, 10) -
                    672. * pow(sh, 11) + 28. * pow(sh, 12)) +
                    3.110526332160665e-8 * pow(-1 + sh, -12) * pow(sh, -18)*
                    (268128. - 217952. * sh - 1.5087492e7 * pow(sh, 2) -
                    5.5721052e7 * pow(sh, 3) + 6.214128e6 * pow(sh, 4) +
                    4.11907536e8 * pow(sh, 5) +
                    6.39424296e8 * pow(sh, 6) -
                    9.51140904e8 * pow(sh, 7) -
                    4.300216704e9 * pow(sh, 8) +
                    2.10516991776e11 * pow(sh, 9) -
                    2.032987285082e12 * pow(sh, 10) -
                    5.1459408e10 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 9) * pow(sh, 10) +
                    9.023354904168e12 * pow(sh, 11) -
                    2.3780297815902e13 * pow(sh, 12) +
                    4.1583846173268e13 * pow(sh, 13) -
                    5.1006645964512e13 * pow(sh, 14) +
                    4.5153977310666e13 * pow(sh, 15) -
                    2.9201144245014e13 * pow(sh, 16) +
                    1.3766871963636e13 * pow(sh, 17) -
                    4.614035001354e12 * pow(sh, 18) +
                    113400. * Lshb * (-1. + sh) * pow(sh, 9)*
                    (2.994992e6 - 3.202199e7 * sh +
                    1.54990836e8 * pow(sh, 2) -
                    4.47615168e8 * pow(sh, 3) +
                    8.5514352e8 * pow(sh, 4) -
                    1.130787504e9 * pow(sh, 5) +
                    1.04997984e9 * pow(sh, 6) -
                    6.77511744e8 * pow(sh, 7) +
                    2.91603312e8 * pow(sh, 8) -
                    7.589582e7 * pow(sh, 9) +
                    9.069632e6 * pow(sh, 10) - 1071. * pow(sh, 17) +
                    378. * pow(sh, 18)) +
                    1.002872187451e12 * pow(sh, 19) -
                    9.8190802773e10 * pow(sh, 20) -
                    3.808374948e9 * pow(sh, 21) -
                    9.21449088e8 * pow(sh, 22) +
                    6.24678642e8 * pow(sh, 23) +
                    3.85332282e8 * pow(sh, 24) - 3.60261e7 * pow(sh, 25) -
                    1.46109825e8 * pow(sh, 26) + 2.65041e7 * pow(sh, 27) +
                    1.598625e6 * pow(sh, 28))) -
                    0.00003919263178522438 * pow(lz, 2) * pow(sh, -18)*
                    (252. + 5236. * sh + 52122. * pow(sh, 2) +
                    330990. * pow(sh, 3) + 1.50586e6 * pow(sh, 4) +
                    5.221788e6 * pow(sh, 5) + 1.4306214e7 * pow(sh, 6) +
                    3.1500898e7 * pow(sh, 7) + 5.513508e7 * pow(sh, 8) -
                    4.900896e7 * pow(sh, 9) + 2.668511e7 * pow(sh, 10) +
                    1.4613135e7 * pow(sh, 11) - 8.763045e6 * pow(sh, 12) -
                    2.218345e7 * pow(sh, 13) - 2.506596e7 * pow(sh, 14) -
                    2.0910477e7 * pow(sh, 15) - 1.2190381e7 * pow(sh, 16) -
                    252. * pow(sh, 17) - 6.48648e7 * pow(sh, 18) -
                    6.555978e7 * pow(sh, 19) - 6.764472e7 * pow(sh, 20) -
                    7.18146e7 * pow(sh, 21) - 7.87644e7 * pow(sh, 22) -
                    3.081078e8 * pow(sh, 23) + 4.33296864e9 * pow(sh, 24) -
                    2.046808764e10 * pow(sh, 25) +
                    2.24524872e10 * pow(sh, 26) +
                    3.088433205e10 * pow(sh, 27) -
                    9.73829142e10 * pow(sh, 28) +
                    1.059717087e11 * pow(sh, 29) -
                    6.5108043e10 * pow(sh, 30) +
                    2.507429925e10 * pow(sh, 31) -
                    6.1945884e9 * pow(sh, 32) + 9.567558e8 * pow(sh, 33) -
                    8.432424e7 * pow(sh, 34) + 3.24324e6 * pow(sh, 35)) -
                    lz * (-960.395061728395 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -8) + 36.317460317460316 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 4)*(-80. + 5340. * sh - 47370. * pow(sh, 2) +
                    109970. * pow(sh, 3) + 2889. * pow(sh, 4) -
                    292716. * pow(sh, 5) + 440556. * pow(sh, 6) -
                    328734. * pow(sh, 7) + 146475. * pow(sh, 8) -
                    40768. * pow(sh, 9) + 6972. * pow(sh, 10) -
                    672. * pow(sh, 11) + 28. * pow(sh, 12)) -
                    0.00007838526357044875 * Lsh * pow(-1 + sh, -11) *
                    pow(sh, -18)*(-504. - 4928. * sh - 16772. * pow(sh, 2) -
                    8096. * pow(sh, 3) + 98200. * pow(sh, 4) +
                    253792. * pow(sh, 5) + 53704. * pow(sh, 6) -
                    692384. * pow(sh, 7) - 564872. * pow(sh, 8) +
                    1.224454e8 * pow(sh, 9) -
                    1.288450948e9 * pow(sh, 10) +
                    5.852563529e9 * pow(sh, 11) -
                    1.5415053304e10 * pow(sh, 12) +
                    2.6502321608e10 * pow(sh, 13) -
                    3.144127168e10 * pow(sh, 14) +
                    2.6331569936e10 * pow(sh, 15) -
                    1.5529376128e10 * pow(sh, 16) +
                    6.238441328e9 * pow(sh, 17) -
                    1.555660876e9 * pow(sh, 18) +
                    1.7969985e8 * pow(sh, 19) + 864864. * pow(sh, 20) +
                    769608. * pow(sh, 21) - 13608. * pow(sh, 22) -
                    222264. * pow(sh, 23) - 69120. * pow(sh, 24) +
                    36360. * pow(sh, 25) - 3465. * pow(sh, 26) +
                    5355. * pow(sh, 27)) +
                    1.2795254348665836e-11 * pow(-1 + sh, -10) * pow(sh, -18)*
                    (-3.25909584e8 - 3.86898512e8 * sh +
                    1.7890959086e10 * pow(sh, 2) +
                    1.0389775539e11 * pow(sh, 3) +
                    1.8235127911e11 * pow(sh, 4) -
                    2.39868807178e11 * pow(sh, 5) -
                    1.439309125254e12 * pow(sh, 6) -
                    1.482637674518e12 * pow(sh, 7) +
                    3.70094717993e12 * pow(sh, 8) -
                    5.3120395014687e14 * pow(sh, 9) +
                    4.14643042172931e15 * pow(sh, 10) -
                    1.345200523191798e16 * pow(sh, 11) +
                    2.254936255887042e16 * pow(sh, 12) -
                    1.699263013683648e16 * pow(sh, 13) -
                    6.14963216664132e15 * pow(sh, 14) +
                    2.740944223315607e16 * pow(sh, 15) -
                    2.8637380687636936e16 * pow(sh, 16) +
                    1.5526446414793194e16 * pow(sh, 17) -
                    4.836946771691055e15 * pow(sh, 18) +
                    5.380798436415755e15 * pow(sh, 19) -
                    1.974903378165775e16 * pow(sh, 20) +
                    4.525406630722413e16 * pow(sh, 21) -
                    6.653785922015247e16 * pow(sh, 22) +
                    6.66839502419495e16 * pow(sh, 23) -
                    6.049729378013662e16 * pow(sh, 24) +
                    7.411696572018171e16 * pow(sh, 25) +
                    2.463627215549949e17 * pow(sh, 26) -
                    2.690872861043421e18 * pow(sh, 27) +
                    1.035946806297679e19 * pow(sh, 28) -
                    2.182665348950866e19 * pow(sh, 29) +
                    2.151768755011101e19 * pow(sh, 30) +
                    1.6939887428138682e19 * pow(sh, 31) -
                    1.0333267615804637e20 * pow(sh, 32) +
                    2.0555129789476546e20 * pow(sh, 33) -
                    2.6641684480745528e20 * pow(sh, 34) +
                    2.5331099541938533e20 * pow(sh, 35) -
                    1.8430954123554472e20 * pow(sh, 36) +
                    1.0440880163165341e20 * pow(sh, 37) -
                    4.6274661819032445e19 * pow(sh, 38) +
                    1.5988086524017488e19 * pow(sh, 39) -
                    4.2570217606020905e18 * pow(sh, 40) +
                    8.554234587216317e17 * pow(sh, 41) -
                    1.252838056241772e17 * pow(sh, 42) +
                    1.26021689978184e16 * pow(sh, 43) -
                    7.7738941071792e14 * pow(sh, 44) +
                    2.214605244852e13 * pow(sh, 45))) -
                    2.088639195553766e-18 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (-3.16414088198208e14 + 9.74539823921664e14 * sh +
                    8.087033764735926e15 * pow(sh, 2) -
                    5.684694862939435e16 * pow(sh, 3) -
                    4.0319420043801754e17 * pow(sh, 4) -
                    4.882604186351892e17 * pow(sh, 5) +
                    1.9325128069129482e18 * pow(sh, 6) +
                    6.292691026868566e18 * pow(sh, 7) +
                    6.880478820028293e18 * pow(sh, 8) +
                    8.434058124662613e21 * pow(sh, 9) -
                    8.666666875206849e22 * pow(sh, 10) +
                    3.988848694569122e23 * pow(sh, 11) -
                    1.0892247798831997e24 * pow(sh, 12) +
                    1.956951254970254e24 * pow(sh, 13) -
                    2.420742712936919e24 * pow(sh, 14) +
                    2.0958116597163414e24 * pow(sh, 15) -
                    1.2670164385119088e24 * pow(sh, 16) +
                    5.268571590407634e23 * pow(sh, 17) -
                    1.5075131737158982e23 * pow(sh, 18) +
                    5.5099869108338715e22 * pow(sh, 19) -
                    1.2335610340065616e23 * pow(sh, 20) +
                    3.125948051315389e23 * pow(sh, 21) -
                    5.329144661412522e23 * pow(sh, 22) +
                    6.337672351589234e23 * pow(sh, 23) -
                    6.415906398957901e23 * pow(sh, 24) +
                    7.960742052832872e23 * pow(sh, 25) +
                    1.0407339222184654e24 * pow(sh, 26) -
                    1.8365456331044262e25 * pow(sh, 27) +
                    8.185263022637105e25 * pow(sh, 28) -
                    2.0381593674174775e26 * pow(sh, 29) +
                    2.86653881719294e26 * pow(sh, 30) -
                    8.60180283451487e25 * pow(sh, 31) -
                    6.102598804051836e26 * pow(sh, 32) +
                    1.677905797647036e27 * pow(sh, 33) -
                    2.6085143775451684e27 * pow(sh, 34) +
                    2.8903964656452616e27 * pow(sh, 35) -
                    2.4393048290135273e27 * pow(sh, 36) +
                    1.610228894638015e27 * pow(sh, 37) -
                    8.401871973947814e26 * pow(sh, 38) +
                    3.469550828380025e26 * pow(sh, 39) -
                    1.1272782566287204e26 * pow(sh, 40) +
                    2.8443789274384395e25 * pow(sh, 41) -
                    5.451981703535345e24 * pow(sh, 42) +
                    7.659728477371017e23 * pow(sh, 43) -
                    7.427478422398451e22 * pow(sh, 44) +
                    4.435813069347255e21 * pow(sh, 45) -
                    1.2279937968685318e20 * pow(sh, 46) +
                    6.2548910424e12 * pow(3.141592653589793, 2)*
                    (1512. + 14784. * sh + 50316. * pow(sh, 2) +
                    24288. * pow(sh, 3) - 294600. * pow(sh, 4) -
                    761376. * pow(sh, 5) - 161112. * pow(sh, 6) +
                    2.077152e6 * pow(sh, 7) + 1.694616e6 * pow(sh, 8) -
                    9.4319148e8 * pow(sh, 9) +
                    9.967342612e9 * pow(sh, 10) -
                    4.6850139311e10 * pow(sh, 11) +
                    1.30210149496e11 * pow(sh, 12) -
                    2.38833139832e11 * pow(sh, 13) +
                    3.0372906844e11 * pow(sh, 14) -
                    2.72391022736e11 * pow(sh, 15) +
                    1.70802069088e11 * pow(sh, 16) -
                    7.1983905728e10 * pow(sh, 17) +
                    1.8589933516e10 * pow(sh, 18) -
                    2.99998765e9 * pow(sh, 19) +
                    3.44063258e9 * pow(sh, 20) -
                    8.9705161e9 * pow(sh, 21) +
                    1.535557394e10 * pow(sh, 22) -
                    1.759879618e10 * pow(sh, 23) +
                    1.0323785e9 * pow(sh, 24) +
                    1.54134820988e11 * pow(sh, 25) -
                    1.050042005659e12 * pow(sh, 26) +
                    4.280975184059e12 * pow(sh, 27) -
                    1.1452618278108e13 * pow(sh, 28) +
                    1.942055517402e13 * pow(sh, 29) -
                    1.455317517654e13 * pow(sh, 30) -
                    2.304660776418e13 * pow(sh, 31) +
                    9.97892002107e13 * pow(sh, 32) -
                    1.907859269745e14 * pow(sh, 33) +
                    2.504750279031e14 * pow(sh, 34) -
                    2.483138624967e14 * pow(sh, 35) +
                    1.926820640745e14 * pow(sh, 36) -
                    1.188407379159e14 * pow(sh, 37) +
                    5.85603387369e13 * pow(sh, 38) -
                    2.301507374166e13 * pow(sh, 39) +
                    7.15907863242e12 * pow(sh, 40) -
                    1.73763555966e12 * pow(sh, 41) +
                    3.216402189e11 * pow(sh, 42) -
                    4.378374e10 * pow(sh, 43) +
                    4.12540128e9 * pow(sh, 44) -
                    2.3999976e8 * pow(sh, 45) + 6.48648e6 * pow(sh, 46)))) *
                pow(z, 10);
            else
                res += pow(z, 10)*(-17049.22407154544 +
                    1.353794886924289e6 * (1. - sh) +
                    4.391392784391852e6 * pow(1. - sh, 2) +
                    1.5300364856715955e7 * pow(1. - sh, 3) +
                    log(z)*(-61419.777963609034 +
                    419629.83709526435 * (1. - sh) -
                    520544.42467293935 * pow(1. - sh, 2) -
                    3.6331088115191273e6 * pow(1. - sh, 3) -
                    6.288069761175393e6 * pow(1. - sh, 4)) +
                    6.5229455380236745e7 * pow(1. - sh, 4) +
                    (8139.7037037037035 + 7919.111111111111 * (1. - sh) -
                    349917.4222222222 * pow(1. - sh, 2) -
                    916483.2649029982 * pow(1. - sh, 3) -
                    3.054749884303351e6 * pow(1. - sh, 4)) * pow(log(z), 2)
                    );
        }
    }
    return res;
}

double F_2::F_27im(double muh, double z, double sh, int maxpow)
{
    double lz = log(z);
    double Lsh = log(sh);
    double Lshb = log(1. - sh);
    double Li2sh = real(Li2(sh));
    double Li3sh = real(Li3(sh));


    double res = 0;

    if (sh < 0.4) {
        res = 3.10281 - 8.37758 * sh - 2.792525 * lz * sh - 9.55118 * z -
                5.58505 * lz * z - 34.6839 * sh * z - 5.58505 * Lsh * sh * z -
                39.0954 * lz * sh * z - 5.58505 * z * pow(lz, 2) -
                5.58505 * sh * z * pow(lz, 2) - 9.54113 * pow(sh, 2) -
                2.792525 * lz * pow(sh, 2) - 88.6728 * z * pow(sh, 2) -
                11.1701 * Lsh * z * pow(sh, 2) - 67.0205 * lz * z * pow(sh, 2) -
                5.58505 * z * pow(lz, 2) * pow(sh, 2) - 9.82039 * pow(sh, 3) -
                2.792525 * lz * pow(sh, 3) - 154.918 * z * pow(sh, 3) -
                16.7552 * Lsh * z * pow(sh, 3) - 93.084 * lz * z * pow(sh, 3) -
                5.58505 * z * pow(lz, 2) * pow(sh, 3) -
                0.015514 * pow(sh, 3) * pow(z, -2) +
                0.15514 * pow(sh, 3) * pow(z, -1) + 18.3741 * pow(z, 2) +
                91.4251 * sh * pow(z, 2) - 33.5103 * lz * sh * pow(z, 2) -
                22.3402 * Lsh * lz * sh * pow(z, 2) -
                5.58505 * pow(lz, 2) * pow(z, 2) -
                27.92525 * sh * pow(lz, 2) * pow(z, 2) +
                196.813 * pow(sh, 2) * pow(z, 2) -
                22.3402 * Lsh * pow(sh, 2) * pow(z, 2) -
                117.286 * lz * pow(sh, 2) * pow(z, 2) -
                67.0205 * Lsh * lz * pow(sh, 2) * pow(z, 2) -
                67.02075 * pow(lz, 2) * pow(sh, 2) * pow(z, 2) +
                314.524 * pow(sh, 3) * pow(z, 2) -
                78.1908 * Lsh * pow(sh, 3) * pow(z, 2) -
                266.221 * lz * pow(sh, 3) * pow(z, 2) -
                134.0415 * Lsh * lz * pow(sh, 3) * pow(z, 2) -
                122.87125 * pow(lz, 2) * pow(sh, 3) * pow(z, 2) -
                17.3757 * pow(z, 3) + 7.44675 * lz * pow(z, 3) -
                94.1903 * sh * pow(z, 3) - 11.1701 * Lsh * sh * pow(z, 3) +
                74.4675 * lz * sh * pow(z, 3) + 22.3402 * Lsh * lz * sh * pow(z, 3) -
                209.21 * pow(sh, 2) * pow(z, 3) -
                22.3402 * Lsh * pow(sh, 2) * pow(z, 3) +
                242.019 * lz * pow(sh, 2) * pow(z, 3) +
                89.361 * Lsh * lz * pow(sh, 2) * pow(z, 3) -
                325.499 * pow(sh, 3) * pow(z, 3) -
                11.1701 * Lsh * pow(sh, 3) * pow(z, 3) +
                554.78 * lz * pow(sh, 3) * pow(z, 3) +
                223.402 * Lsh * lz * pow(sh, 3) * pow(z, 3);
    } else {
        if (0 <= maxpow) {
            if (sh < .900001)
                res += (-2.792526803190927 * Lsh * sh * (-1. + 2. * sh) * pow(-1 + sh, -3) +
                    0.1551403779550515 * pow(-1 + sh, -2)*
                    (20. - 49. * sh + 47. * pow(sh, 2))) * pow(z, 0);
            else
                res += (4.964492094561648 - 0.6981317007977318 * (1. - sh) -
                    0.32579479370560815 * pow(1. - sh, 2) -
                    0.18616845354606182 * pow(1. - sh, 3) -
                    0.11967972013675403 * pow(1. - sh, 4)) * pow(z, 0);
        }

        if (1 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (2 <= maxpow) {
            if (sh < .900001)
                res += (53.70841793654156 * sh * pow(-1 + sh, -3) -
                    44.680428851054835 * Li3sh * sh * pow(-1 + sh, -3) +
                    5.585053606381854 * Li2sh * (-5. + 3. * sh) *
                    pow(-1 + sh, -3) + 3.723369070921236 * sh * pow(Lsh, 3) *
                    pow(-1 + sh, -3) - 11.170107212763709 * pow(Lsh, 2) *
                    pow(-1 + sh, -2) - Lsh *
                    (-22.340214425527417 * Li2sh * sh * pow(-1 + sh, -3) -
                    5.585053606381854 * pow(-1 + sh, -3)*
                    (3. + Lshb * (-5. + 3. * sh) +
                    2. * sh * pow(3.141592653589793, 2) - 2. * pow(sh, 2)))\
      - 0.930842267730309 * pow(-1 + sh, -3)*
                    (-6. * (2. - 5. * sh + 3. * pow(sh, 2)) +
                    pow(3.141592653589793, 2)*
                    (-9. + 3. * sh + 4. * pow(sh, 2)))) * pow(z, 1);
            else
                res += (-25.126044626684017 - 16.441531762218297 * (1. - sh) -
                    12.739670260838084 * pow(1. - sh, 2) -
                    10.578200186941283 * pow(1. - sh, 3) -
                    9.130437128725532 * pow(1. - sh, 4)) * pow(z, 1);
        }

        if (3 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (4 <= maxpow) {
            if (sh < .900001)
                res += (-5.585053606381854 * Li2sh * (-2. + 7. * sh) * pow(-1 + sh, -3) -
                    5.585053606381854 * pow(Lsh, 2) * pow(-1 + sh, -2) -
                    lz * (-39.09537524467298 * Lsh * sh * pow(-1 + sh, -3) +
                    2.792526803190927 * pow(-1 + sh, -2) * pow(sh, -2)*
                    (2. - 7. * sh + 15. * pow(sh, 2) + 4. * pow(sh, 3))) +
                    0.4654211338651545 * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-18. + 63. * sh - 2. *
                    (63. + 2. * pow(3.141592653589793, 2)) * pow(sh, 2) +
                    (9. + 14. * pow(3.141592653589793, 2)) * pow(sh, 3) +
                    36. * pow(sh, 4)) -
                    2.792526803190927 * Lsh * pow(-1 + sh, -4) * pow(sh, -2)*
                    (-4. + 13. * sh + (-21. + 4. * Lshb) * pow(sh, 2) +
                    (11. - 18. * Lshb) * pow(sh, 3) +
                    (-5. + 14. * Lshb) * pow(sh, 4))) * pow(z, 2);
            else
                res += (-9.153282299348039 - 18.43843391995787 * (1. - sh) -
                    29.484428830357537 * pow(1. - sh, 2) -
                    43.167588536881716 * pow(1. - sh, 3) +
                    log(z)*(-3.723369070921236 -
                    6.050474740247009 * (1. - sh) -
                    10.332349171806431 * pow(1. - sh, 2) -
                    15.265813190777068 * pow(1. - sh, 3) -
                    20.4785298900668 * pow(1. - sh, 4)) -
                    59.199668549550246 * pow(1. - sh, 4)) * pow(z, 2);
        }

        if (5 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (6 <= maxpow) {
            if (sh < .900001)
                res += (11.170107212763709 * pow(Lsh, 2) * pow(-1 + sh, -3) * pow(sh, -1) -
                    11.170107212763709 * Li2sh * pow(-1 + sh, -4) * pow(sh, -1)*
                    (1. - sh + 2. * pow(sh, 2)) -
                    0.930842267730309 * Lsh * pow(-1 + sh, -5) * pow(sh, -4)*
                    (4. + 4. * sh - 71. * pow(sh, 2) +
                    (155. - 12. * Lshb) * pow(sh, 3) +
                    2. * (-83. + 12. * Lshb) * pow(sh, 4) +
                    (98. - 36. * Lshb) * pow(sh, 5) +
                    12. * (-3. + 2. * Lshb) * pow(sh, 6)) -
                    lz * (-11.170107212763709 * Lsh * pow(-1 + sh, -4) *
                    pow(sh, -1)*(1. - sh + 2. * pow(sh, 2)) -
                    0.930842267730309 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (2. + 6. * sh - 45. * pow(sh, 2) + 61. * pow(sh, 3) -
                    41. * pow(sh, 4) - 11. * pow(sh, 5) + 4. * pow(sh, 6))) -
                    0.1551403779550515 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (-10. + 10. * sh + 54. * pow(sh, 2) +
                    (46. - 12. * pow(3.141592653589793, 2)) * pow(sh, 3) +
                    3. * (-53. + 4. * pow(3.141592653589793, 2)) * pow(sh, 4) -
                    24. * (-10. + pow(3.141592653589793, 2)) * pow(sh, 5) -
                    141. * pow(sh, 6) + 32. * pow(sh, 7))) * pow(z, 3);
            else
                res += (-13.97814805375014 - 45.88121537642694 * (1. - sh) -
                    113.65495437342528 * pow(1. - sh, 2) -
                    229.22586075329383 * pow(1. - sh, 3) +
                    log(z)*(-0.930842267730309 -
                    18.430676901060117 * (1. - sh) -
                    51.75483008580519 * pow(1. - sh, 2) -
                    103.16391875788196 * pow(1. - sh, 3) -
                    174.70579590629714 * pow(1. - sh, 4)) -
                    403.9971955539516 * pow(1. - sh, 4)) * pow(z, 3);
        }

        if (7 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (8 <= maxpow) {
            if (sh < .900001)
                res += (18.61684535460618 * Li2sh * pow(-1 + sh, -3) * pow(sh, -2) +
                    18.61684535460618 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -2) - lz *
                    (18.61684535460618 * Lsh * pow(-1 + sh, -3) * pow(sh, -2) +
                    0.310280755910103 * pow(-1 + sh, -2) * pow(sh, -6)*
                    (3. + 19. * sh + 43. * pow(sh, 2) - 260. * pow(sh, 3) +
                    225. * pow(sh, 4) - 105. * pow(sh, 5) + 15. * pow(sh, 6)))
                    + 0.310280755910103 * Lsh * pow(-1 + sh, -6) * pow(sh, -6)*
                    (6. + 14. * sh - 30. * pow(sh, 2) - 405. * pow(sh, 3) +
                    (1569. - 60. * Lshb) * pow(sh, 4) +
                    15. * (-169. + 12. * Lshb) * pow(sh, 5) +
                    (2235. - 180. * Lshb) * pow(sh, 6) +
                    (-1037. + 60. * Lshb) * pow(sh, 7) + 213. * pow(sh, 8)) -
                    0.025856729659175254 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (21. - 10. * sh - 307. * pow(sh, 2) + 1247. * pow(sh, 3) +
                    (-3143. + 120. * pow(3.141592653589793, 2)) *
                    pow(sh, 4) + (3526. -
                    240. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    (397. + 120. * pow(3.141592653589793, 2)) * pow(sh, 6) -
                    2577. * pow(sh, 7) + 1140. * pow(sh, 8) +
                    138. * pow(sh, 9) - 72. * pow(sh, 10))) * pow(z, 4);
            else
                res += (-17.996283842785974 - 135.35554718355516 * (1. - sh) -
                    472.35812505085903 * pow(1. - sh, 2) -
                    1200.9383413133833 * pow(1. - sh, 3) +
                    log(z)*(-14.893476283684944 -
                    84.70664636345812 * (1. - sh) -
                    265.29004630313807 * pow(1. - sh, 2) -
                    624.2848808911273 * pow(1. - sh, 3) -
                    1241.9208884413238 * pow(1. - sh, 4)) -
                    2545.7015752257666 * pow(1. - sh, 4)) * pow(z, 4);
        }

        if (9 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (10 <= maxpow) {
            if (sh < .900001)
                res += (39.09537524467298 * Li2sh * pow(-1 + sh, -3) * pow(sh, -3) +
                    39.09537524467298 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -3) - lz *
                    (39.09537524467298 * Lsh * pow(-1 + sh, -3) * pow(sh, -3) +
                    0.09308422677303091 * pow(-1 + sh, -2) * pow(sh, -8)*
                    (6. + 51. * sh + 181. * pow(sh, 2) + 301. * pow(sh, 3) -
                    2324. * pow(sh, 4) + 2220. * pow(sh, 5) -
                    880. * pow(sh, 6) - 70. * pow(sh, 7) + 95. * pow(sh, 8)))\
      + 0.09308422677303091 * Lsh * pow(-1 + sh, -7) * pow(sh, -8)*
                    (-12. - 42. * sh + 28. * pow(sh, 2) + 308. * pow(sh, 3) +
                    2793. * pow(sh, 4) +
                    2. * (-8339. + 210. * Lshb) * pow(sh, 5) +
                    (37042. - 1680. * Lshb) * pow(sh, 6) +
                    168. * (-266. + 15. * Lshb) * pow(sh, 7) -
                    8. * (-3959. + 210. * Lshb) * pow(sh, 8) +
                    3. * (-4351. + 140. * Lshb) * pow(sh, 9) + 2720. * pow(sh, 10)
                    ) - 0.001551403779550515 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (-162. + 36. * sh + 2914. * pow(sh, 2) + 5862. * pow(sh, 3) -
                    97530. * pow(sh, 4) + 329152. * pow(sh, 5) +
                    4200. * pow(3.141592653589793, 2) * pow(-1 + sh, 3) *
                    pow(sh, 5) - 497696. * pow(sh, 6) +
                    286926. * pow(sh, 7) + 114303. * pow(sh, 8) -
                    259230. * pow(sh, 9) + 141000. * pow(sh, 10) -
                    22550. * pow(sh, 11) + 2975. * pow(sh, 12) -
                    600. * pow(sh, 13))) * pow(z, 5);
            else
                res += (-45.438400411920945 - 460.45774991614974 * (1. - sh) -
                    2000.8969832546916 * pow(1. - sh, 2) -
                    6063.926888543121 * pow(1. - sh, 3) +
                    log(z)*(-57.71222059927916 -
                    352.7892194697871 * (1. - sh) -
                    1274.7884856566582 * pow(1. - sh, 2) -
                    3472.041658634053 * pow(1. - sh, 3) -
                    7917.744329314009 * pow(1. - sh, 4)) -
                    14922.183969640308 * pow(1. - sh, 4)) * pow(z, 5);
        }

        if (11 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (12 <= maxpow) {
            if (sh < .900001)
                res += (93.82890058721516 * Li2sh * pow(-1 + sh, -3) * pow(sh, -4) +
                    93.82890058721516 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -4) - lz *
                    (93.82890058721516 * Lsh * pow(-1 + sh, -3) * pow(sh, -4) +
                    0.01861684535460618 * pow(-1 + sh, -2) * pow(sh, -10)*
                    (20. + 212. * sh + 992. * pow(sh, 2) +
                    2592. * pow(sh, 3) + 3492. * pow(sh, 4) -
                    33768. * pow(sh, 5) + 34250. * pow(sh, 6) -
                    12355. * pow(sh, 7) - 1855. * pow(sh, 8) +
                    795. * pow(sh, 9) + 585. * pow(sh, 10))) +
                    0.01861684535460618 * Lsh * pow(-1 + sh, -8) * pow(sh, -10)*
                    (40. + 184. * sh + 40. * pow(sh, 2) - 1160. * pow(sh, 3) -
                    2240. * pow(sh, 4) - 33740. * pow(sh, 5) -
                    6. * (-44969. + 840. * Lshb) * pow(sh, 6) +
                    315. * (-2447. + 80. * Lshb) * pow(sh, 7) -
                    15. * (-80189. + 3360. * Lshb) * pow(sh, 8) +
                    40. * (-28549. + 1260. * Lshb) * pow(sh, 9) +
                    (669980. - 25200. * Lshb) * pow(sh, 10) +
                    (-228338. + 5040. * Lshb) * pow(sh, 11) +
                    35770. * pow(sh, 12)) +
                    0.00031028075591010303 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (-440. + 32. * sh + 10212. * pow(sh, 2) +
                    23632. * pow(sh, 3) - 7888. * pow(sh, 4) -
                    1.620528e6 * pow(sh, 5) + 7.571238e6 * pow(sh, 6) -
                    50400. * pow(3.141592653589793, 2) * pow(-1 + sh, 4) *
                    pow(sh, 6) - 1.5372042e7 * pow(sh, 7) +
                    1.5504288e7 * pow(sh, 8) - 5.560242e6 * pow(sh, 9) -
                    3.213542e6 * pow(sh, 10) + 3.254015e6 * pow(sh, 11) -
                    18260. * pow(sh, 12) - 907710. * pow(sh, 13) +
                    366640. * pow(sh, 14) - 57405. * pow(sh, 15) +
                    2800. * pow(sh, 16))) * pow(z, 6);
            else
                res += (-136.29525461574005 - 1645.5778674786802 * (1. - sh) -
                    8473.793189820017 * pow(1. - sh, 2) -
                    29701.229294840534 * pow(1. - sh, 3) +
                    log(z)*(-214.0937215779711 -
                    1463.749466005911 * (1. - sh) -
                    5989.876908617766 * pow(1. - sh, 2) -
                    18449.107577961182 * pow(1. - sh, 3) -
                    47241.17592958092 * pow(1. - sh, 4)) -
                    83004.51592284124 * pow(1. - sh, 4)) * pow(z, 6);
        }

        if (13 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (14 <= maxpow) {
            if (sh < .900001)
                res += (245.7423586808016 * Li2sh * pow(-1 + sh, -3) * pow(sh, -5) +
                    245.7423586808016 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -5) - lz *
                    (245.7423586808016 * Lsh * pow(-1 + sh, -3) * pow(sh, -5) +
                    0.008865164454574373 * pow(-1 + sh, -2) * pow(sh, -12)*
                    (30. + 380. * sh + 2186. * pow(sh, 2) +
                    7436. * pow(sh, 3) + 15906. * pow(sh, 4) +
                    18216. * pow(sh, 5) - 217404. * pow(sh, 6) +
                    230279. * pow(sh, 7) - 78421. * pow(sh, 8) -
                    14581. * pow(sh, 9) + 3024. * pow(sh, 10) +
                    3864. * pow(sh, 11) + 1365. * pow(sh, 12))) +
                    0.008865164454574373 * Lsh * pow(-1 + sh, -9) * pow(sh, -12)*
                    (-60. - 340. * sh - 312. * pow(sh, 2) + 1872. * pow(sh, 3) +
                    4980. * pow(sh, 4) + 1620. * pow(sh, 5) +
                    203850. * pow(sh, 6) +
                    (-1.895519e6 + 27720. * Lshb) * pow(sh, 7) +
                    (6.594942e6 - 166320. * Lshb) * pow(sh, 8) +
                    33. * (-385051. + 12600. * Lshb) * pow(sh, 9) +
                    (1.5286135e7 - 554400. * Lshb) * pow(sh, 10) +
                    15. * (-794279. + 27720. * Lshb) * pow(sh, 11) -
                    6. * (-990013. + 27720. * Lshb) * pow(sh, 12) +
                    2. * (-882383. + 13860. * Lshb) * pow(sh, 13) +
                    249228. * pow(sh, 14)) +
                    0.000021107534415653267 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (3900. + 100. * sh - 116036. * pow(sh, 2) -
                    329570. * pow(sh, 3) + 93490. * pow(sh, 4) +
                    1.36222e6 * pow(sh, 5) + 7.515214e7 * pow(sh, 6) -
                    4.58367722e8 * pow(sh, 7) -
                    1.9404e6 * pow(3.141592653589793, 2) * pow(-1 + sh, 5) *
                    pow(sh, 7) + 1.185571378e9 * pow(sh, 8) -
                    1.64901962e9 * pow(sh, 9) + 1.210803485e9 * pow(sh, 10) -
                    2.77663825e8 * pow(sh, 11) - 2.28715591e8 * pow(sh, 12) +
                    1.81552504e8 * pow(sh, 13) - 5.1683975e7 * pow(sh, 14) +
                    3.0412585e7 * pow(sh, 15) - 3.0028425e7 * pow(sh, 16) +
                    1.2629064e7 * pow(sh, 17) - 2.061822e6 * pow(sh, 18) +
                    52920. * pow(sh, 19))) * pow(z, 7);
            else
                res += (-456.36056641072724 - 6103.669051411126 * (1. - sh) -
                    35945.35613138051 * pow(1. - sh, 2) -
                    142439.61797330706 * pow(1. - sh, 3) +
                    log(z)*(-790.9056468148526 -
                    6067.540181822064 * (1. - sh) -
                    27711.918984145486 * pow(1. - sh, 2) -
                    94930.08698994012 * pow(1. - sh, 3) -
                    268847.72545040335 * pow(1. - sh, 4)) -
                    444531.89353893884 * pow(1. - sh, 4)) * pow(z, 7);
        }

        if (15 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (16 <= maxpow) {
            if (sh < .900001)
                res += (684.5679991822329 * Li2sh * pow(-1 + sh, -3) * pow(sh, -6) +
                    684.5679991822329 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -6) - lz *
                    (684.5679991822329 * Lsh * pow(-1 + sh, -3) * pow(sh, -6) +
                    0.001899678097408794 * pow(-1 + sh, -2) * pow(sh, -14)*
                    (105. + 1545. * sh + 10505. * pow(sh, 2) +
                    43433. * pow(sh, 3) + 119873. * pow(sh, 4) +
                    221793. * pow(sh, 5) + 221793. * pow(sh, 6) -
                    3.231657e6 * pow(sh, 7) + 3.541034e6 * pow(sh, 8) -
                    1.160656e6 * pow(sh, 9) - 243376. * pow(sh, 10) +
                    26124. * pow(sh, 11) + 54544. * pow(sh, 12) +
                    27790. * pow(sh, 13) + 6790. * pow(sh, 14))) +
                    0.003799356194817588 * Lsh * pow(-1 + sh, -10) * pow(sh, -14)*
                    (105. + 705. * sh + 1085. * pow(sh, 2) - 3227. * pow(sh, 3) -
                    12621. * pow(sh, 4) - 7077. * pow(sh, 5) +
                    23415. * pow(sh, 6) - 1.52775e6 * pow(sh, 7) +
                    (1.5332677e7 - 180180. * Lshb) * pow(sh, 8) +
                    154. * (-404281. + 8190. * Lshb) * pow(sh, 9) -
                    3276. * (-43597. + 1155. * Lshb) * pow(sh, 10) +
                    140. * (-1.492544e6 + 45045. * Lshb) * pow(sh, 11) -
                    35. * (-5.843231e6 + 180180. * Lshb) * pow(sh, 12) +
                    84. * (-1.606567e6 + 45045. * Lshb) * pow(sh, 13) -
                    14. * (-4.169089e6 + 90090. * Lshb) * pow(sh, 14) +
                    4. * (-3.790859e6 + 45045. * Lshb) * pow(sh, 15) +
                    1.820973e6 * pow(sh, 16)) -
                    2.2615215445342784e-6 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (23625. + 2250. * sh - 884825. * pow(sh, 2) -
                    3.042036e6 * pow(sh, 3) - 226209. * pow(sh, 4) +
                    1.547673e7 * pow(sh, 5) + 1.7445585e7 * pow(sh, 6) +
                    2.27462355e9 * pow(sh, 7) -
                    1.6881630069e10 * pow(sh, 8) +
                    5.04504e7 * pow(3.141592653589793, 2) * pow(-1 + sh, 6) *
                    pow(sh, 8) + 5.3231013434e10 * pow(sh, 9) -
                    9.3745467315e10 * pow(sh, 10) +
                    9.75051387e10 * pow(sh, 11) -
                    5.4985329535e10 * pow(sh, 12) +
                    7.700748318e9 * pow(sh, 13) +
                    9.422168487e9 * pow(sh, 14) -
                    5.032015758e9 * pow(sh, 15) - 1.2563586e8 * pow(sh, 16) +
                    1.23426506e9 * pow(sh, 17) -
                    1.153426148e9 * pow(sh, 18) +
                    7.67036928e8 * pow(sh, 19) - 2.79185592e8 * pow(sh, 20) +
                    4.285204e7 * pow(sh, 21) - 776160. * pow(sh, 22))) *
                pow(z, 8);
            else
                res += (-1629.163092036405 - 23281.294285910375 * (1. - sh) -
                    152825.6982845202 * pow(1. - sh, 2) -
                    672700.699177929 * pow(1. - sh, 3) +
                    log(z)*(-2934.014827885934 -
                    25115.05522563147 * (1. - sh) -
                    126608.1387084309 * pow(1. - sh, 2) -
                    476515.47051732504 * pow(1. - sh, 3) -
                    1.475709220012137e6 * pow(1. - sh, 4)) -
                    2.313374280493185e6 * pow(1. - sh, 4)) * pow(z, 8);
        }

        if (17 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (18 <= maxpow) {
            if (sh < .900001)
                res += (1996.656664281513 * Li2sh * pow(-1 + sh, -3) * pow(sh, -7) +
                    1996.656664281513 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -7) - lz *
                    (1996.656664281513 * Lsh * pow(-1 + sh, -3) * pow(sh, -7) +
                    0.005540727784108982 * pow(-1 + sh, -2) * pow(sh, -16)*
                    (28. + 469. * sh + 3673. * pow(sh, 2) +
                    17785. * pow(sh, 3) + 59113. * pow(sh, 4) +
                    140257. * pow(sh, 5) + 231985. * pow(sh, 6) +
                    205777. * pow(sh, 7) - 3.632057e6 * pow(sh, 8) +
                    4.091364e6 * pow(sh, 9) - 1.304928e6 * pow(sh, 10) -
                    297432. * pow(sh, 11) + 14292. * pow(sh, 12) +
                    58644. * pow(sh, 13) + 35460. * pow(sh, 14) +
                    12780. * pow(sh, 15) + 2430. * pow(sh, 16))) -
                    0.005540727784108982 * Lsh * pow(-1 + sh, -11) * pow(sh, -16)*
                    (56. + 434. * sh + 920. * pow(sh, 2) - 1480. * pow(sh, 3) -
                    9184. * pow(sh, 4) - 8932. * pow(sh, 5) +
                    19712. * pow(sh, 6) + 36344. * pow(sh, 7) -
                    3.49657e6 * pow(sh, 8) -
                    7. * (-5.358061e6 + 51480. * Lshb) * pow(sh, 9) +
                    20. * (-8.630911e6 + 144144. * Lshb) * pow(sh, 10) -
                    880. * (-521011. + 11466. * Lshb) * pow(sh, 11) +
                    56. * (-1.4125987e7 + 360360. * Lshb) * pow(sh, 12) -
                    140. * (-6.677771e6 + 180180. * Lshb) * pow(sh, 13) +
                    112. * (-6.885077e6 + 180180. * Lshb) * pow(sh, 14) -
                    56. * (-7.869671e6 + 180180. * Lshb) * pow(sh, 15) +
                    16. * (-1.0503341e7 + 180180. * Lshb) * pow(sh, 16) +
                    (3.8989933e7 - 360360. * Lshb) * pow(sh, 17) -
                    4.262544e6 * pow(sh, 18)) +
                    4.3974030032610975e-6 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (8330. + 1225. * sh - 385185. * pow(sh, 2) -
                    1.565725e6 * pow(sh, 3) - 766913. * pow(sh, 4) +
                    8.101569e6 * pow(sh, 5) + 1.6471637e7 * pow(sh, 6) -
                    1.4354375e7 * pow(sh, 7) + 3.953480265e9 * pow(sh, 8) -
                    3.3767434535e10 * pow(sh, 9) -
                    7.56756e7 * pow(3.141592653589793, 2) * pow(-1 + sh, 7) *
                    pow(sh, 9) + 1.25322516107e11 * pow(sh, 10) -
                    2.66443744245e11 * pow(sh, 11) +
                    3.52730324065e11 * pow(sh, 12) -
                    2.89748672815e11 * pow(sh, 13) +
                    1.29737902497e11 * pow(sh, 14) -
                    9.132479783e9 * pow(sh, 15) -
                    2.0967436048e10 * pow(sh, 16) +
                    9.674219718e9 * pow(sh, 17) -
                    2.08073817e9 * pow(sh, 18) +
                    2.119593546e9 * pow(sh, 19) -
                    2.784214188e9 * pow(sh, 20) +
                    2.248987986e9 * pow(sh, 21) -
                    1.186673418e9 * pow(sh, 22) + 3.6469845e8 * pow(sh, 23) -
                    5.0148315e7 * pow(sh, 24) + 720720. * pow(sh, 25))) *
                pow(z, 9);
            else
                res += (-6036.39383687799 - 90657.25321279526 * (1. - sh) -
                    651118.7801087499 * pow(1. - sh, 2) -
                    3.139904668840056e6 * pow(1. - sh, 3) +
                    log(z)*(-10946.705068508434 -
                    103756.33337255889 * (1. - sh) -
                    572261.3476707039 * pow(1. - sh, 2) -
                    2.3444993879405814e6 * pow(1. - sh, 3) -
                    7.869957280883137e6 * pow(1. - sh, 4)) -
                    1.1770925711253678e7 * pow(1. - sh, 4)) * pow(z, 9);
        }

        if (19 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (20 <= maxpow) {
            if (sh < .900001)
                res += (6034.340140939684 * Li2sh * pow(-1 + sh, -3) * pow(sh, -8) +
                    6034.340140939684 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -8) - lz *
                    (6034.340140939684 * Lsh * pow(-1 + sh, -3) * pow(sh, -8) +
                    0.00024625456818262145 * pow(-1 + sh, -2) * pow(sh, -18)*
                    (504. + 9464. * sh + 83804. * pow(sh, 2) +
                    463964. * pow(sh, 3) + 1.792004e6 * pow(sh, 4) +
                    5.082116e6 * pow(sh, 5) + 1.0736996e7 * pow(sh, 6) +
                    1.6220516e7 * pow(sh, 7) + 1.2878996e7 * pow(sh, 8) -
                    2.73934804e8 * pow(sh, 9) +
                    3.15821466e8 * pow(sh, 10) -
                    9.8670339e7 * pow(sh, 11) -
                    2.3977539e7 * pow(sh, 12) + 157761. * pow(sh, 13) +
                    4.274181e6 * pow(sh, 14) + 2.899395e6 * pow(sh, 15) +
                    1.241235e6 * pow(sh, 16) + 359415. * pow(sh, 17) +
                    56385. * pow(sh, 18))) +
                    0.00024625456818262145 * Lsh * pow(-1 + sh, -12) *
                    pow(sh, -18)*(1008. + 8848. * sh + 23688. * pow(sh, 2) -
                    17352. * pow(sh, 3) - 212592. * pow(sh, 4) -
                    311184. * pow(sh, 5) + 400176. * pow(sh, 6) +
                    1.492176e6 * pow(sh, 7) - 255024. * pow(sh, 8) -
                    2.64398904e8 * pow(sh, 9) -
                    6. * (-5.11641281e8 + 4.08408e6 * Lshb) * pow(sh, 10) +
                    9. * (-1.747237201e9 + 2.450448e7 * Lshb) * pow(sh, 11) -
                    1989. * (-2.3808319e7 + 443520. * Lshb) * pow(sh, 12) +
                    1848. * (-5.0928893e7 + 1.11384e6 * Lshb) * pow(sh, 13) -
                    13104. * (-9.960259e6 + 235620. * Lshb) * pow(sh, 14) +
                    3528. * (-3.6704249e7 + 875160. * Lshb) * pow(sh, 15) -
                    168. * (-5.49270061e8 + 1.225224e7 * Lshb) * pow(sh, 16) +
                    72. * (-6.45450961e8 + 1.225224e7 * Lshb) * pow(sh, 17) -
                    288. * (-5.4964186e7 + 765765. * Lshb) * pow(sh, 18) +
                    (-3.301634542e9 + 2.450448e7 * Lshb) * pow(sh, 19) +
                    3.2083623e8 * pow(sh, 20)) -
                    9.77200667391355e-8 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (268128. + 50176. * sh - 1.5037316e7 * pow(sh, 2) -
                    7.0758368e7 * pow(sh, 3) - 6.454424e7 * pow(sh, 4) +
                    3.47363296e8 * pow(sh, 5) + 9.86787592e8 * pow(sh, 6) +
                    3.5646688e7 * pow(sh, 7) - 4.264570016e9 * pow(sh, 8) +
                    6.1791288328e11 * pow(sh, 9) -
                    5.890389956722e12 * pow(sh, 10) +
                    1.02918816e10 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 8) * pow(sh, 10) +
                    2.5054270208126e13 * pow(sh, 11) -
                    6.2290275001696e13 * pow(sh, 12) +
                    9.9547394852612e13 * pow(sh, 13) -
                    1.0492568190538e14 * pow(sh, 14) +
                    7.0557905411966e13 * pow(sh, 15) -
                    2.5585687891288e13 * pow(sh, 16) +
                    2.41116416108e11 * pow(sh, 17) +
                    4.002654161834e12 * pow(sh, 18) -
                    1.418993445915e12 * pow(sh, 19) -
                    5.1123112488e10 * pow(sh, 20) +
                    3.91122982404e11 * pow(sh, 21) -
                    5.60776090644e11 * pow(sh, 22) +
                    5.66827442118e11 * pow(sh, 23) -
                    3.8373727824e11 * pow(sh, 24) +
                    1.699988427e11 * pow(sh, 25) -
                    4.480654338e10 * pow(sh, 26) +
                    5.447537865e9 * pow(sh, 27) - 6.48648e7 * pow(sh, 28))) *
                pow(z, 10);
            else
                res += (-22861.233438269435 - 358348.4866943795 * (1. - sh) -
                    2.7784028263374018e6 * pow(1. - sh, 2) -
                    1.4518829460769238e7 * pow(1. - sh, 3) +
                    log(z)*(-41067.519729237596 -
                    427724.1939873684 * (1. - sh) -
                    2.5624965034840526e6 * pow(1. - sh, 2) -
                    1.1344087093543807e7 * pow(1. - sh, 3) -
                    4.098677600641895e7 * pow(1. - sh, 4)) -
                    5.88118166357725e7 * pow(1. - sh, 4)) * pow(z, 10);
        }
    }
    return res;
}

double F_2::F_29re(double muh, double z, double sh, int maxpow)
{
    double lz = log(z);
    double lmu = log(muh);
    double Lsh = log(sh);
    double Lshb = log(1. - sh);
    double Li2sh = real(Li2(sh));
    double Li3sh = real(Li3(sh));
    double Li3shb = real(Li3(1. - sh));
    double Li4sh = real(Li4(sh));
    double sqrtsh = sqrt(sh);
    double sqrt4sh = sqrt(4. - sh);
    double ash = asin(sqrtsh / 2.);
    double cl2 = Cl2(2. * ash);
    double cl3 = Cl3(2. * ash);


    double res = 0;

    if (sh < 0.4) {
        res = -24.2913 + 0.296296 * Lsh + 0.3950617283950617 * lmu * Lsh +
                lmu * (1.0534979423868314 - 7.111111111111111 * lz) -
                11.55555 * lz - 26.8464 * sh - 4.444445 * lz * sh - 86.7723 * z +
                3.55556 * Lsh * z - 28.77965 * lz * z - 428.313 * sh * z +
                16. * Lsh * sh * z - 25.4303 * lz * sh * z + 3.555555 * Lsh * lz * sh * z +
                6.320987654320987 * pow(lmu, 2) + 1.7777775 * z * pow(lz, 2) -
                18.808425 * sh * z * pow(lz, 2) + 0.5925925 * z * pow(lz, 3) +
                0.5925925 * sh * z * pow(lz, 3) - 0.29629625 * sh * z * pow(lz, 4) -
                222.769 * pow(sh, 2) - 0.0987654 * Lsh * pow(sh, 2) -
                66.186 * lz * pow(sh, 2) - 1276.44 * z * pow(sh, 2) +
                32. * Lsh * z * pow(sh, 2) + 65.7645 * lz * z * pow(sh, 2) +
                7.1111 * Lsh * lz * z * pow(sh, 2) - 8. * pow(lz, 2) * pow(sh, 2) -
                85.7585 * z * pow(lz, 2) * pow(sh, 2) -
                0.5925925 * pow(lz, 3) * pow(sh, 2) +
                1.777775 * z * pow(lz, 3) * pow(sh, 2) -
                0.8888875 * z * pow(lz, 4) * pow(sh, 2) - 478.485 * pow(sh, 3) -
                0.131687 * Lsh * pow(sh, 3) - 171.951 * lz * pow(sh, 3) -
                2553.47 * z * pow(sh, 3) + 49.7778 * Lsh * z * pow(sh, 3) +
                206.4045 * lz * z * pow(sh, 3) + 10.66665 * Lsh * lz * z * pow(sh, 3) -
                16.8889 * pow(lz, 2) * pow(sh, 3) -
                194.03575 * z * pow(lz, 2) * pow(sh, 3) -
                1.777775 * pow(lz, 3) * pow(sh, 3) +
                4.14815 * z * pow(lz, 3) * pow(sh, 3) -
                1.777775 * z * pow(lz, 4) * pow(sh, 3) +
                lmu * pow(sh, 3)*(-0.00125416421712718 +
                0.022574955908289243 * pow(z, -3)) -
                0.0142243 * pow(sh, 3) * pow(z, -3) +
                lmu * pow(sh, 2)*(-0.008465608465608466 +
                0.1523809523809524 * pow(z, -2)) -
                0.0132191 * pow(sh, 2) * pow(z, -2) +
                0.0288536 * pow(sh, 3) * pow(z, -2) + 0.8462 * sh * pow(z, -1) +
                0.367901 * pow(sh, 2) * pow(z, -1) +
                10.8601 * pow(sh, 3) * pow(z, -1) +
                2.758375 * lz * pow(sh, 3) * pow(z, -1) +
                0.2962975 * pow(lz, 2) * pow(sh, 3) * pow(z, -1) +
                lmu * sh * (-0.07901234567901234 +
                1.4222222222222223 * pow(z, -1)) +
                140.368 * sh * pow(z, 0.5) + 842.206 * pow(sh, 2) * pow(z, 0.5) +
                pow(sh, 3)*(-46.7892 * pow(z, -0.5) + 1918.36 * pow(z, 0.5)) -
                23.3946 * pow(z, 1.5) + 96.5187 * pow(z, 2) -
                29.7586 * Lsh * pow(z, 2) - 162.7315 * lz * pow(z, 2) +
                3.555555 * Lsh * lz * pow(z, 2) + 108.781 * sh * pow(z, 2) -
                111.923 * Lsh * sh * pow(z, 2) - 448.7875 * lz * sh * pow(z, 2) +
                14.2222 * Lsh * lz * sh * pow(z, 2) +
                23.1111 * pow(lz, 2) * pow(z, 2) +
                3.55555 * Lsh * pow(lz, 2) * pow(z, 2) +
                73.77775 * sh * pow(lz, 2) * pow(z, 2) +
                14.222225 * Lsh * sh * pow(lz, 2) * pow(z, 2) +
                2.9629625 * pow(lz, 3) * pow(z, 2) +
                8.2963 * sh * pow(lz, 3) * pow(z, 2) +
                268.098 * pow(sh, 2) * pow(z, 2) -
                244.716 * Lsh * pow(sh, 2) * pow(z, 2) -
                816.045 * lz * pow(sh, 2) * pow(z, 2) +
                42.66665 * Lsh * lz * pow(sh, 2) * pow(z, 2) +
                178.66675 * pow(lz, 2) * pow(sh, 2) * pow(z, 2) +
                32. * Lsh * pow(lz, 2) * pow(sh, 2) * pow(z, 2) +
                16. * pow(lz, 3) * pow(sh, 2) * pow(z, 2) +
                527.368 * pow(sh, 3) * pow(z, 2) -
                421.619 * Lsh * pow(sh, 3) * pow(z, 2) -
                1252.835 * lz * pow(sh, 3) * pow(z, 2) +
                94.815 * Lsh * lz * pow(sh, 3) * pow(z, 2) +
                340.74 * pow(lz, 2) * pow(sh, 3) * pow(z, 2) +
                56.889 * Lsh * pow(lz, 2) * pow(sh, 3) * pow(z, 2) +
                26.074125 * pow(lz, 3) * pow(sh, 3) * pow(z, 2) +
                88.3801 * pow(z, 3) + 55.2172 * Lsh * pow(z, 3) +
                85.7285 * lz * pow(z, 3) + 3.160495 * Lsh * lz * pow(z, 3) +
                437.34 * sh * pow(z, 3) + 249.663 * Lsh * sh * pow(z, 3) +
                204.405 * lz * sh * pow(z, 3) + 7.1111 * Lsh * lz * sh * pow(z, 3) -
                30.22225 * pow(lz, 2) * pow(z, 3) -
                4.74075 * Lsh * pow(lz, 2) * pow(z, 3) -
                95.4075 * sh * pow(lz, 2) * pow(z, 3) -
                21.333325 * Lsh * sh * pow(lz, 2) * pow(z, 3) +
                823.218 * pow(sh, 2) * pow(z, 3) +
                668.137 * Lsh * pow(sh, 2) * pow(z, 3) +
                298.311 * lz * pow(sh, 2) * pow(z, 3) -
                253.3325 * pow(lz, 2) * pow(sh, 2) * pow(z, 3) -
                56.889 * Lsh * pow(lz, 2) * pow(sh, 2) * pow(z, 3) +
                1675.61 * pow(sh, 3) * pow(z, 3) +
                1391.36 * Lsh * pow(sh, 3) * pow(z, 3) +
                440.5585 * lz * pow(sh, 3) * pow(z, 3) -
                35.55555 * Lsh * lz * pow(sh, 3) * pow(z, 3) -
                496.89 * pow(lz, 2) * pow(sh, 3) * pow(z, 3) -
                118.5185 * Lsh * pow(lz, 2) * pow(sh, 3) * pow(z, 3);
    } else {
        if (0 <= maxpow) {
            if (sh < .900001)
                res += (8.547960200246003 + 6.320987654320987 * pow(lmu, 2) +
                    0.19753086419753085 * Li2sh * (-8. + 17. * sh) *
                    pow(-1 + sh, -1) + 0.19753086419753085 * cl2 * (2. + sh) *
                    sqrt4sh * sqrtsh * pow(sh, -2) -
                    lmu * (6.716049382716049 * Lsh -
                    0.7901234567901234 * ash * (2. + sh) * sqrt4sh * sqrtsh *
                    pow(sh, -2) + 0.3950617283950617 * (4. - 31. * sh) *
                    pow(sh, -1)) - 0.8888888888888888 * pow(Lsh, 2) *
                    pow(-1 + sh, -3) * pow(sh, 2) -
                    Lsh * (-0.19753086419753085 * ash * (2. + sh) * sqrt4sh *
                    sqrtsh * pow(sh, -2) -
                    0.09876543209876543 * pow(-1 + sh, -2)*
                    (-114. + 199. * sh - 67. * pow(sh, 2) +
                    2. * Lshb * (8. - 25. * sh + 17. * pow(sh, 2)))) +
                    0.19753086419753085 * ash * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, -2)*(-4. + 3. * sh + 18. * pow(sh, 2) -
                    16. * pow(sh, 3) + 5. * pow(sh, 4)) +
                    0.5925925925925926 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, -1)*(12. - 33. * sh + 18. * pow(sh, 2) -
                    4. * pow(sh, 4) + pow(sh, 5)) -
                    0.0054869684499314125 * pow(-1 + sh, -4) * pow(sh, -1)*
                    (288. + 5. * sh * (79. + 60. * pow(3.141592653589793, 2)) -
                    2. * (2257. + 618. * pow(3.141592653589793, 2)) *
                    pow(sh, 2) + 6. * (1391. +
                    306. * pow(3.141592653589793, 2)) * pow(sh, 3) -
                    10. * (617. + 123. * pow(3.141592653589793, 2)) *
                    pow(sh, 4) + (1655. +
                    312. * pow(3.141592653589793, 2)) * pow(sh, 5))) *
                pow(z, 0);
            else
                res += pow(z, 0)*(-4.256813794434612 +
                    6.247387287113509 * (1. - sh) +
                    4.358260258488125 * pow(1. - sh, 2) +
                    3.2040567770853476 * pow(1. - sh, 3) +
                    2.512816857053804 * pow(1. - sh, 4) +
                    log(muh)*(12.81635480205537 +
                    6.816868131135554 * (1. - sh) +
                    3.34395932171576 * pow(1. - sh, 2) +
                    2.241420882666335 * pow(1. - sh, 3) +
                    1.6783963168171898 * pow(1. - sh, 4)) +
                    6.320987654320987 * pow(log(muh), 2));
        }

        if (1 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (2 <= maxpow) {
            if (sh < .900001)
                res += (0.5925925925925926 * sh * pow(Lsh, 4) * pow(-1 + sh, -3) -
                    3.5555555555555554 * Li2sh * (1. + 2. * sh) *
                    pow(-1 + sh, -2) + 1.1851851851851851 * (-3. + sh) *
                    pow(Lsh, 3) * pow(-1 + sh, -2) +
                    42.666666666666664 * lmu * pow(sh, -1) -
                    lz * (64. * Li2sh * pow(9 - 9 * sh, -1) -
                    3.5555555555555554 * Lsh *
                    (2. + 2. * Lshb * (-1. + sh) + sh) * pow(-1 + sh, -2) +
                    3.5555555555555554 * pow(Lsh, 2) * pow(-1 + sh, -1) +
                    1.1851851851851851 *
                    (-18. + sh * (27. + pow(3.141592653589793, 2))) *
                    pow(-1 + sh, -1) * pow(sh, -1)) -
                    4.273980100123001 * pow(-1 + sh, -3)*
                    (-3. + 3. * sh + 2. * pow(sh, 2)) +
                    3.5555555555555554 * ash * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, -1)*(2. - 11. * sh + 3. * pow(sh, 2)) -
                    3.5555555555555554 * Li3sh * pow(-1 + sh, -3)*
                    (-3. - 3. * sh + 4. * pow(sh, 2)) -
                    pow(Lsh, 2)*(-7.111111111111111 * Li2sh * sh *
                    pow(-1 + sh, -3) -
                    0.5925925925925926 * pow(-1 + sh, -3)*
                    (12. + 3. * Lshb * (-7. + 5. * sh) +
                    2. * sh * (-6. + pow(3.141592653589793, 2)) +
                    3. * pow(sh, 2))) +
                    21.333333333333332 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-1. + 8. * sh - 5. * pow(sh, 2) + pow(sh, 3)) -
                    Lsh * (-34.19184080098401 * sh * pow(-1 + sh, -3) +
                    28.444444444444443 * Li3sh * sh * pow(-1 + sh, -3) -
                    3.5555555555555554 * Li2sh * pow(-1 + sh, -3)*
                    (-5. + sh + 2. * pow(sh, 2)) +
                    0.5925925925925926 * pow(-1 + sh, -3) * pow(sh, -1)*
                    (36. - sh * (66. + 6. * Lshb +
                    7. * pow(3.141592653589793, 2)) +
                    (69. - 6. * Lshb + 5. * pow(3.141592653589793, 2)) *
                    pow(sh, 2) + 3. * (-13. + 4. * Lshb) * pow(sh, 3))) +
                    0.11851851851851852 * pow(-1 + sh, -4) * pow(sh, -1)*
                    (-4. * (-1. + sh) * pow(3.141592653589793, 4) * pow(sh, 2) +
                    15. * (-1. + sh)*(-56. + 156. * sh +
                    3. * (-49. + 8. * Li4sh) * pow(sh, 2) + 47. * pow(sh, 3))\
         + 5. * pow(3.141592653589793, 2)*
                    (-3. + 8. * sh - 10. * pow(sh, 2) + 2. * pow(sh, 4)))) *
                pow(z, 1);
            else
                res += (67.82325420628487 + 57.04716984919418 * (1. - sh) +
                    51.233916954097545 * pow(1. - sh, 2) +
                    45.87999913302814 * pow(1. - sh, 3) +
                    log(z)*(-16. - 17.77777777777778 * (1. - sh) -
                    18.469135802469136 * pow(1. - sh, 2) -
                    18.874074074074073 * pow(1. - sh, 3) -
                    19.152592592592594 * pow(1. - sh, 4)) +
                    41.468913753494085 * pow(1. - sh, 4) +
                    log(muh)*(42.666666666666664 +
                    42.666666666666664 * (1. - sh) +
                    42.666666666666664 * pow(1. - sh, 2) +
                    42.666666666666664 * pow(1. - sh, 3) +
                    42.666666666666664 * pow(1. - sh, 4))) * pow(z, 1);
        }

        if (3 <= maxpow) {
            if (sh < .900001)
                res += -2.3703703703703702 * (-2. + sh) * pow(3.141592653589793, 2) *
                pow(sh, -1) * pow(z, 1.5);
            else
                res += (23.39461783961922 + 46.78923567923844 * (1. - sh) +
                    46.78923567923844 * pow(1. - sh, 2) +
                    46.78923567923844 * pow(1. - sh, 3) +
                    46.78923567923844 * pow(1. - sh, 4)) * pow(z, 1.5);
        }

        if (4 <= maxpow) {
            if (sh < .900001)
                res += (3.5555555555555554 * Li3shb * (6. + sh) * pow(-1 + sh, -3) +
                    3.5555555555555554 * Li3sh * (-11. + 3. * sh) *
                    pow(-1 + sh, -3) + 0.5925925925925926 * (2. + sh) *
                    pow(Lsh, 3) * pow(-1 + sh, -3) -
                    lmu * (-21.333333333333332 * pow(sh, -2) -
                    42.666666666666664 * Lsh * pow(sh, -2)) -
                    3.5555555555555554 * Li2sh * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-3. + 10. * sh - 9. * pow(sh, 2) + pow(sh, 3)) -
                    3.5555555555555554 * cl2 * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, -1)*(2. + 8. * pow(sh, 2) - 5. * pow(sh, 3) +
                    pow(sh, 4)) + 3.5555555555555554 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, -1)*
                    (-2. - 4. * sh + 24. * pow(sh, 2) - 15. * pow(sh, 3) +
                    3. * pow(sh, 4)) - 4.273980100123001 * pow(-1 + sh, -4) *
                    pow(sh, -2)*(8. - 32. * sh + 57. * pow(sh, 2) -
                    52. * pow(sh, 3) + 13. * pow(sh, 4)) -
                    0.8888888888888888 * pow(Lsh, 2) * pow(-1 + sh, -4) *
                    pow(sh, -2)*(-31. + 113. * sh +
                    3. * (-53. + 2. * Lshb) * pow(sh, 2) +
                    (87. - 8. * Lshb) * pow(sh, 3) +
                    2. * (-8. + Lshb) * pow(sh, 4)) -
                    Lsh * (3.5555555555555554 * Li2sh * (-7. + 2. * sh) *
                    pow(-1 + sh, -3) +
                    21.333333333333332 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-1. - 3. * sh + pow(sh, 2)) +
                    0.2962962962962963 * pow(-1 + sh, -3) * pow(sh, -2)*
                    (333. - 1032. * sh +
                    (1089. - 46. * pow(3.141592653589793, 2)) *
                    pow(sh, 2) + 2. *
                    (-153. + pow(3.141592653589793, 2)) * pow(sh, 3) +
                    12. * Lshb * (-3. + 10. * sh - 9. * pow(sh, 2) +
                    pow(sh, 3))) +
                    3.5555555555555554 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, -1)*
                    (2. + 8. * pow(sh, 2) - 5. * pow(sh, 3) + pow(sh, 4))) +
                    10.666666666666666 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (4. - 2. * sh - 24. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) -
                    pow(lz, 2)*(1.7777777777777777 * Lsh * (6. + sh) *
                    pow(-1 + sh, -3) +
                    0.8888888888888888 * pow(-1 + sh, -2) * pow(sh, -2)*
                    (-28. + 54. * sh - 47. * pow(sh, 2) + 12. * pow(sh, 3) -
                    6. * pow(sh, 4) + pow(sh, 5))) -
                    lz * (-3.5555555555555554 * Li2sh * (6. + sh) *
                    pow(-1 + sh, -3) +
                    1.7777777777777777 * pow(Lsh, 2) * pow(-1 + sh, -2) +
                    42.666666666666664 * lmu * pow(sh, -2) +
                    42.666666666666664 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-1. - 3. * sh + pow(sh, 2)) -
                    1.7777777777777777 * Lsh * pow(-1 + sh, -3) * pow(sh, -2)*
                    (29. - 82. * sh + 3. * (25. + 4. * Lshb) * pow(sh, 2) +
                    2. * (-12. + Lshb) * pow(sh, 3)) +
                    7.111111111111111 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, -1)*
                    (2. + 8. * pow(sh, 2) - 5. * pow(sh, 3) + pow(sh, 4)) -
                    0.2962962962962963 * pow(-1 + sh, -4) * pow(sh, -2)*
                    (2. * pow(3.141592653589793, 2) * pow(sh, 2)*
                    (4. - 11. * sh + pow(sh, 2)) +
                    3. * pow(-1 + sh, 2)*
                    (-108. + 216. * sh - 135. * pow(sh, 2) +
                    32. * pow(sh, 3) - 20. * pow(sh, 4) + 3. * pow(sh, 5)))
                    ) - 0.14814814814814814 * pow(-1 + sh, -4)*
                    (-144. * cl3 * (-1. - 3. * sh + pow(sh, 2)) +
                    pow(sh, -2)*(pow(-1 + sh, 2)*
                    (-232. + 560. * sh - 757. * pow(sh, 2) +
                    336. * pow(sh, 3) - 168. * pow(sh, 4) +
                    21. * pow(sh, 5)) +
                    2. * pow(3.141592653589793, 2)*
                    (45. - 151. * sh + 211. * pow(sh, 2) -
                    135. * pow(sh, 3) - 14. * pow(sh, 4) +
                    52. * pow(sh, 5) - 16. * pow(sh, 6) + 2. * pow(sh, 7)))
                    )) * pow(z, 2);
            else
                res += pow(z, 2)*(-165.12748700917908 -
                    411.3508120821892 * (1. - sh) -
                    670.1268907046218 * pow(1. - sh, 2) -
                    925.5677817546755 * pow(1. - sh, 3) +
                    log(muh)*(21.333333333333332 -
                    42.666666666666664 * pow(1. - sh, 2) -
                    99.55555555555556 * pow(1. - sh, 3) -
                    167.11111111111111 * pow(1. - sh, 4)) +
                    log(z)*(-92.67670236481818 -
                    123.95171074367174 * (1. - sh) -
                    143.75841383606902 * pow(1. - sh, 2) -
                    143.67298964675717 * pow(1. - sh, 3) +
                    log(muh)*(-42.666666666666664 -
                    85.33333333333333 * (1. - sh) -
                    128. * pow(1. - sh, 2) -
                    170.66666666666666 * pow(1. - sh, 3) -
                    213.33333333333334 * pow(1. - sh, 4)) -
                    130.3275572508033 * pow(1. - sh, 4)) -
                    1177.4249452560534 * pow(1. - sh, 4) +
                    (26.074074074074073 +
                    49.925925925925924 * (1. - sh) +
                    74.4 * pow(1. - sh, 2) +
                    99.61481481481482 * pow(1. - sh, 3) +
                    124.74074074074075 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (5 <= maxpow) {
            if (sh < .900001)
                res += 0.3160493827160494 * pow(3.141592653589793, 2) * pow(sh, -3)*
                (3. + 14. * sh + 3. * pow(sh, 2)) * pow(z, 2.5);
            else
                res += (62.385647572317914 + 124.77129514463583 * (1. - sh) +
                    196.51478985280144 * pow(1. - sh, 2) +
                    277.6161316968147 * pow(1. - sh, 3) +
                    368.0753206766757 * pow(1. - sh, 4)) * pow(z, 2.5);
        }

        if (6 <= maxpow) {
            if (sh < .900001)
                res += (4.7407407407407405 * Li3shb * (2. + sh) * pow(-1 + sh, -4) -
                    lmu * (37.925925925925924 * pow(sh, -3) -
                    56.888888888888886 * Lsh * pow(sh, -3)) -
                    7.111111111111111 * Li3sh * pow(-1 + sh, -3) * pow(sh, -1) +
                    2.3703703703703702 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -1) - 2.8493200667486676 * pow(-1 + sh, -4) *
                    pow(sh, -1)*(3. + sh + 2. * pow(sh, 2)) +
                    2.3703703703703702 * cl2 * sqrt4sh * sqrtsh * pow(-1 + sh, -3)*
                    (4. + 15. * sh - 29. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) +
                    0.7901234567901234 * ash * sqrt4sh * sqrtsh * pow(-1 + sh, -3)*
                    (-8. - 21. * sh - 17. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) +
                    0.3950617283950617 * Li2sh * pow(-1 + sh, -4) * pow(sh, -3)*
                    (-36. + 144. * sh - 234. * pow(sh, 2) + 208. * pow(sh, 3) -
                    73. * pow(sh, 4) + 9. * pow(sh, 5)) -
                    Lsh * (14.222222222222221 * (2. + sh) * pow(ash, 2) *
                    pow(-1 + sh, -4) -
                    7.111111111111111 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -1) - 2.3703703703703702 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3)*
                    (4. + 15. * sh - 29. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) -
                    0.03292181069958848 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (30. + (1508. - 432. * Lshb) * sh +
                    2. * (-3427. + 864. * Lshb) * pow(sh, 2) +
                    36. * (296. - 78. * Lshb +
                    5. * pow(3.141592653589793, 2)) * pow(sh, 3) +
                    (-6541. + 2496. * Lshb -
                    36. * pow(3.141592653589793, 2)) * pow(sh, 4) +
                    (1552. - 876. * Lshb +
                    72. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    27. * (3. + 4. * Lshb) * pow(sh, 6))) -
                    2.3703703703703702 * pow(ash, 2) * pow(-1 + sh, -4)*
                    (16. - 22. * sh - 171. * pow(sh, 2) + 336. * pow(sh, 3) -
                    300. * pow(sh, 4) + 141. * pow(sh, 5) - 33. * pow(sh, 6) +
                    3. * pow(sh, 7)) - 0.09876543209876543 * pow(Lsh, 2) *
                    pow(-1 + sh, -5) * pow(sh, -4)*
                    (12. + 494. * sh - 2533. * pow(sh, 2) +
                    (4871. - 36. * Lshb) * pow(sh, 3) +
                    (-4634. + 72. * Lshb) * pow(sh, 4) -
                    4. * (-541. + 9. * Lshb) * pow(sh, 5) - 428. * pow(sh, 6) +
                    18. * pow(sh, 7)) -
                    pow(lz, 2)*(2.3703703703703702 * Lsh * (2. + sh) *
                    pow(-1 + sh, -4) -
                    0.09876543209876543 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (-3. - 491. * sh + 1482. * pow(sh, 2) -
                    1467. * pow(sh, 3) + 572. * pow(sh, 4) -
                    132. * pow(sh, 5) + 321. * pow(sh, 6) -
                    378. * pow(sh, 7) + 222. * pow(sh, 8) -
                    60. * pow(sh, 9) + 6. * pow(sh, 10))) -
                    lz * (-4.7407407407407405 * Li2sh * (2. + sh) *
                    pow(-1 + sh, -4) +
                    28.444444444444443 * (2. + sh) * pow(ash, 2) *
                    pow(-1 + sh, -4) +
                    56.888888888888886 * lmu * pow(sh, -3) +
                    3.5555555555555554 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -1) - 4.7407407407407405 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3)*
                    (4. + 15. * sh - 29. * pow(sh, 2) + 23. * pow(sh, 3) -
                    8. * pow(sh, 4) + pow(sh, 5)) +
                    0.19753086419753085 * Lsh * pow(-1 + sh, -4) * pow(sh, -4)*
                    (6. + 494. * sh - 1991. * pow(sh, 2) +
                    2886. * pow(sh, 3) -
                    6. * (293. + 8. * Lshb) * pow(sh, 4) -
                    6. * (-65. + 4. * Lshb) * pow(sh, 5) + 9. * pow(sh, 6)) -
                    0.03292181069958848 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (15. + 1538. * sh - 4641. * pow(sh, 2) +
                    4446. * pow(sh, 3) - 1361. * pow(sh, 4) +
                    498. * pow(sh, 5) - 1215. * pow(sh, 6) +
                    606. * pow(sh, 7) - 84. * pow(sh, 8) - 24. * pow(sh, 9) +
                    6. * pow(sh, 10))) +
                    0.01646090534979424 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (19. - 7836. * sh + 30701. * pow(sh, 2) -
                    45359. * pow(sh, 3) + (31147. + 1728. * cl3) * pow(sh, 4) +
                    12. * (-701. + 72. * cl3) * pow(sh, 5) - 343. * pow(sh, 6) -
                    2371. * pow(sh, 7) + 4810. * pow(sh, 8) -
                    3164. * pow(sh, 9) + 902. * pow(sh, 10) -
                    94. * pow(sh, 11) +
                    6. * pow(3.141592653589793, 2)*
                    (-6. - 338. * sh + 1349. * pow(sh, 2) -
                    1798. * pow(sh, 3) + 914. * pow(sh, 4) -
                    42. * pow(sh, 5) - 299. * pow(sh, 6) +
                    440. * pow(sh, 7) - 400. * pow(sh, 8) +
                    188. * pow(sh, 9) - 44. * pow(sh, 10) + 4. * pow(sh, 11)))
                    ) * pow(z, 3);
            else
                res += pow(z, 3)*(-563.8946426367565 -
                    1680.2345038491285 * (1. - sh) -
                    3329.6412593857735 * pow(1. - sh, 2) -
                    5423.45927216734 * pow(1. - sh, 3) +
                    log(muh)*(-37.925925925925924 -
                    170.66666666666666 * (1. - sh) -
                    426.6666666666667 * pow(1. - sh, 2) -
                    824.8888888888889 * pow(1. - sh, 3) -
                    1379.5555555555557 * pow(1. - sh, 4)) -
                    7956.241038705334 * pow(1. - sh, 4) +
                    log(z)*(-34.97995438478488 -
                    30.044118068027284 * (1. - sh) +
                    62.84401734242212 * pow(1. - sh, 2) +
                    320.43564180164736 * pow(1. - sh, 3) +
                    log(muh)*(-56.888888888888886 -
                    170.66666666666666 * (1. - sh) -
                    341.3333333333333 * pow(1. - sh, 2) -
                    568.8888888888889 * pow(1. - sh, 3) -
                    853.3333333333334 * pow(1. - sh, 4)) +
                    749.5923384459219 * pow(1. - sh, 4)) +
                    (54.22222222222222 + 150.45925925925926 * (1. - sh) +
                    299.97037037037035 * pow(1. - sh, 2) +
                    503.0405643738977 * pow(1. - sh, 3) +
                    755.8095238095239 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (7 <= maxpow) {
            if (sh < .900001)
                res += 0.02708994708994709 * pow(3.141592653589793, 2) * pow(sh, -5)*
                (15. + 108. * sh + 314. * pow(sh, 2) + 108. * pow(sh, 3) +
                    15. * pow(sh, 4)) * pow(z, 3.5);
            else
                res += (149.725554173563 + 449.17666252068904 * (1. - sh) +
                    943.270991293447 * pow(1. - sh, 2) +
                    1676.9262067439056 * pow(1. - sh, 3) +
                    2699.0704810394973 * pow(1. - sh, 4)) * pow(z, 3.5);
        }

        if (8 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (117.33333333333333 * pow(sh, -4) -
                    128. * Lsh * pow(sh, -4)) +
                    14.246600333743338 * pow(-1 + sh, -3) * pow(sh, -2) -
                    11.851851851851851 * Li3sh * pow(-1 + sh, -3) * pow(sh, -2) +
                    3.950617283950617 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -2) - 3.5555555555555554 * cl2 * sqrt4sh * sqrtsh *
                    (-6. - 13. * sh + 20. * pow(sh, 2) - 8. * pow(sh, 3) +
                    pow(sh, 4)) + 0.5925925925925926 * Li2sh *
                    pow(-1 + sh, -5) * pow(sh, -4)*
                    (54. - 268. * sh + 544. * pow(sh, 2) - 570. * pow(sh, 3) +
                    292. * pow(sh, 4) - 58. * pow(sh, 5) - 6. * pow(sh, 6) +
                    3. * pow(sh, 7)) - 0.5925925925925926 * ash * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (-6. - 41. * sh - 239. * pow(sh, 2) + 671. * pow(sh, 3) -
                    680. * pow(sh, 4) + 329. * pow(sh, 5) - 77. * pow(sh, 6) +
                    7. * pow(sh, 7)) + 10.666666666666666 * sh * pow(ash, 2) *
                    pow(-1 + sh, -4)*(-24. - 3. * sh + 174. * pow(sh, 2) -
                    390. * pow(sh, 3) + 411. * pow(sh, 4) - 241. * pow(sh, 5) +
                    80. * pow(sh, 6) - 14. * pow(sh, 7) + pow(sh, 8)) -
                    Lsh * (-11.851851851851851 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -2) + 3.5555555555555554 * ash * sqrt4sh * sqrtsh *
                    (-6. - 13. * sh + 20. * pow(sh, 2) - 8. * pow(sh, 3) +
                    pow(sh, 4)) - 0.01646090534979424 * pow(-1 + sh, -5) *
                    pow(sh, -6)*(-21. + 10. * sh +
                    2. * (-847. + 972. * Lshb) * pow(sh, 2) +
                    (11470. - 9648. * Lshb) * pow(sh, 3) +
                    (-27667. + 19584. * Lshb -
                    600. * pow(3.141592653589793, 2)) * pow(sh, 4) +
                    8. * (3982. - 2565. * Lshb +
                    150. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    2. * (-9179. + 5256. * Lshb -
                    300. * pow(3.141592653589793, 2)) * pow(sh, 6) -
                    6. * (-607. + 348. * Lshb) * pow(sh, 7) -
                    6. * (7. + 36. * Lshb) * pow(sh, 8) +
                    6. * (5. + 18. * Lshb) * pow(sh, 9))) -
                    0.09876543209876543 * pow(Lsh, 2) * pow(-1 + sh, -6) *
                    pow(sh, -6)*(-6. - 14. * sh - 1215. * pow(sh, 2) +
                    7695. * pow(sh, 3) - 19257. * pow(sh, 4) -
                    60. * Lshb * pow(-1 + sh, 3) * pow(sh, 4) +
                    25233. * pow(sh, 5) - 18375. * pow(sh, 6) +
                    6983. * pow(sh, 7) - 1056. * pow(sh, 8) - 27. * pow(sh, 9) +
                    9. * pow(sh, 10)) -
                    0.04938271604938271 * pow(lz, 2) * pow(sh, -6)*
                    (-3. - 25. * sh - 2580. * pow(sh, 2) + 73. * pow(sh, 4) +
                    3. * pow(sh, 5) + 180. * pow(sh, 6) + 36. * pow(sh, 7) -
                    738. * pow(sh, 8) + 612. * pow(sh, 9) - 180. * pow(sh, 10) +
                    18. * pow(sh, 11)) -
                    lz * (128. * lmu * pow(sh, -4) +
                    5.925925925925926 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -2) + 7.111111111111111 * ash * sqrt4sh * sqrtsh *
                    (-6. - 13. * sh + 20. * pow(sh, 2) - 8. * pow(sh, 3) +
                    pow(sh, 4)) + 0.19753086419753085 * Lsh *
                    pow(-1 + sh, -5) * pow(sh, -6)*
                    (-3. - 10. * sh - 1240. * pow(sh, 2) +
                    6380. * pow(sh, 3) - 12722. * pow(sh, 4) +
                    12478. * pow(sh, 5) - 6074. * pow(sh, 6) +
                    1158. * pow(sh, 7) + 3. * pow(sh, 8) + 3. * pow(sh, 9)) +
                    0.0016460905349794238 * pow(-1 + sh, -4) * pow(sh, -6)*
                    (105. + 55. * sh + 18530. * pow(sh, 2) -
                    72330. * pow(sh, 3) + 91890. * pow(sh, 4) -
                    26202. * pow(sh, 5) - 21156. * pow(sh, 6) +
                    1154. * pow(sh, 7) + 54349. * pow(sh, 8) -
                    76131. * pow(sh, 9) + 4716. * pow(sh, 10) +
                    82440. * pow(sh, 11) - 83970. * pow(sh, 12) +
                    36900. * pow(sh, 13) - 7740. * pow(sh, 14) +
                    630. * pow(sh, 15))) -
                    0.000027434842249657064 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (2775. - 5550. * sh - 9.841575e6 * pow(sh, 2) +
                    4.85214e7 * pow(sh, 3) - 9.54242e7 * pow(sh, 4) +
                    9.3237052e7 * pow(sh, 5) - 4.3743086e7 * pow(sh, 6) +
                    4.46555e6 * pow(sh, 7) + 7.670645e6 * pow(sh, 8) -
                    4.88458e6 * pow(sh, 9) - 1.3483707e7 * pow(sh, 10) +
                    3.4549776e7 * pow(sh, 11) - 3.627225e7 * pow(sh, 12) +
                    2.100825e7 * pow(sh, 13) - 6.9246e6 * pow(sh, 14) +
                    1.21095e6 * pow(sh, 15) - 86850. * pow(sh, 16) +
                    1200. * pow(3.141592653589793, 2)*
                    (-9. - 30. * sh - 2694. * pow(sh, 2) +
                    13896. * pow(sh, 3) - 27086. * pow(sh, 4) +
                    25318. * pow(sh, 5) - 11444. * pow(sh, 6) +
                    2810. * pow(sh, 7) - 1033. * pow(sh, 8) -
                    2857. * pow(sh, 9) + 10122. * pow(sh, 10) -
                    14418. * pow(sh, 11) + 11736. * pow(sh, 12) -
                    5778. * pow(sh, 13) + 1692. * pow(sh, 14) -
                    270. * pow(sh, 15) + 18. * pow(sh, 16)))) * pow(z, 4);
            else
                res += pow(z, 4)*(-1424.5308091578474 -
                    5728.7251525464435 * (1. - sh) -
                    14040.07057463595 * pow(1. - sh, 2) -
                    27178.850860660903 * pow(1. - sh, 3) +
                    log(muh)*(-117.33333333333333 -
                    597.3333333333334 * (1. - sh) -
                    1749.3333333333333 * pow(1. - sh, 2) -
                    3925.3333333333335 * pow(1. - sh, 3) -
                    7509.333333333333 * pow(1. - sh, 4)) -
                    46368.872894680535 * pow(1. - sh, 4) +
                    log(z)*(34.25652635469211 +
                    169.5621944588141 * (1. - sh) +
                    865.728317571408 * pow(1. - sh, 2) +
                    2770.286236159471 * pow(1. - sh, 3) +
                    log(muh)*(-128. - 512. * (1. - sh) -
                    1280. * pow(1. - sh, 2) -
                    2560. * pow(1. - sh, 3) - 4480. * pow(1. - sh, 4)
                    ) + 6293.656266280077 * pow(1. - sh, 4)) +
                    (128.59259259259258 +
                    497.77777777777777 * (1. - sh) +
                    1274.962962962963 * pow(1. - sh, 2) +
                    2588.641975308642 * pow(1. - sh, 3) +
                    4550.617283950617 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (9 <= maxpow) {
            if (sh < .900001)
                res += 0.006449987402368355 * pow(3.141592653589793, 2) * pow(sh, -7)*
                (35. + 330. * sh + 1389. * pow(sh, 2) + 3212. * pow(sh, 3) +
                    1389. * pow(sh, 4) + 330. * pow(sh, 5) + 35. * pow(sh, 6)) *
                pow(z, 4.5);
            else
                res += (427.7872976387514 + 1711.1491905550056 * (1. - sh) +
                    4470.377260324953 * pow(1. - sh, 2) +
                    9518.267372462218 * pow(1. - sh, 3) +
                    17894.4954414067 * pow(1. - sh, 4)) * pow(z, 4.5);
        }

        if (10 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (352.7111111111111 * pow(sh, -5) -
                    341.3333333333333 * Lsh * pow(sh, -5)) +
                    29.917860700861013 * pow(-1 + sh, -3) * pow(sh, -3) -
                    24.88888888888889 * Li3sh * pow(-1 + sh, -3) * pow(sh, -3) +
                    8.296296296296296 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -3) + 2.3703703703703702 * cl2 * sh * sqrt4sh * sqrtsh *
                    (44. + 108. * sh - 221. * pow(sh, 2) + 132. * pow(sh, 3) -
                    33. * pow(sh, 4) + 3. * pow(sh, 5)) +
                    0.23703703703703705 * ash * sh * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3)*(-496. + 326. * sh + 6147. * pow(sh, 2) -
                    16495. * pow(sh, 3) + 18680. * pow(sh, 4) -
                    11251. * pow(sh, 5) + 3760. * pow(sh, 6) -
                    658. * pow(sh, 7) + 47. * pow(sh, 8)) +
                    1.1851851851851851 * Li2sh * pow(-1 + sh, -6) * pow(sh, -5)*
                    (-72. + 429. * sh - 1073. * pow(sh, 2) + 1442. * pow(sh, 3) -
                    1092. * pow(sh, 4) + 435. * pow(sh, 5) - 47. * pow(sh, 6) -
                    6. * pow(sh, 7) - pow(sh, 8) + pow(sh, 9)) -
                    7.111111111111111 * sh * pow(ash, 2) * pow(-1 + sh, -4)*
                    (-24. + 162. * sh + 114. * pow(sh, 2) - 1809. * pow(sh, 3) +
                    4224. * pow(sh, 4) - 4957. * pow(sh, 5) +
                    3423. * pow(sh, 6) - 1445. * pow(sh, 7) +
                    366. * pow(sh, 8) - 51. * pow(sh, 9) + 3. * pow(sh, 10)) -
                    Lsh * (-24.88888888888889 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -3) - 2.3703703703703702 * ash * sh * sqrt4sh *
                    sqrtsh * (44. + 108. * sh - 221. * pow(sh, 2) +
                    132. * pow(sh, 3) - 33. * pow(sh, 4) + 3. * pow(sh, 5)) +
                    0.0003292181069958848 * pow(-1 + sh, -7) * pow(sh, -8)*
                    (486. - 594. * sh - 8634. * pow(sh, 2) -
                    132632. * pow(sh, 3) + 806792. * pow(sh, 4) -
                    1.649394e6 * pow(sh, 5) +
                    63000. * pow(3.141592653589793, 2) * pow(-1 + sh, 4) *
                    pow(sh, 5) + 1.299724e6 * pow(sh, 6) +
                    289454. * pow(sh, 7) - 1.252893e6 * pow(sh, 8) +
                    839053. * pow(sh, 9) -
                    3600. * Lshb * (-1. + sh) * pow(sh, 3)*
                    (-72. + 429. * sh - 1073. * pow(sh, 2) +
                    1442. * pow(sh, 3) - 1092. * pow(sh, 4) +
                    435. * pow(sh, 5) - 47. * pow(sh, 6) -
                    6. * pow(sh, 7) - pow(sh, 8) + pow(sh, 9)) -
                    206662. * pow(sh, 10) + 15750. * pow(sh, 11) +
                    75. * pow(sh, 12) - 525. * pow(sh, 13))) -
                    0.009876543209876543 * pow(Lsh, 2) * pow(-1 + sh, -7) *
                    pow(sh, -8)*(36. + 126. * sh - 84. * pow(sh, 2) +
                    37024. * pow(sh, 3) - 269605. * pow(sh, 4) +
                    818292. * pow(sh, 5) -
                    1260. * Lshb * pow(-1 + sh, 4) * pow(sh, 5) -
                    1.360586e6 * pow(sh, 6) + 1.344224e6 * pow(sh, 7) -
                    788604. * pow(sh, 8) + 252535. * pow(sh, 9) -
                    33268. * pow(sh, 10) - 300. * pow(sh, 11) -
                    120. * pow(sh, 12) + 60. * pow(sh, 13)) +
                    0.0049382716049382715 * pow(lz, 2) * pow(sh, -8)*
                    (18. + 189. * sh + 903. * pow(sh, 2) + 78416. * pow(sh, 3) -
                    630. * pow(sh, 4) - 1383. * pow(sh, 5) -
                    1839. * pow(sh, 6) - 18. * pow(sh, 7) - 3120. * pow(sh, 8) -
                    8160. * pow(sh, 9) - 1440. * pow(sh, 10) +
                    46560. * pow(sh, 11) - 51720. * pow(sh, 12) +
                    23040. * pow(sh, 13) - 4680. * pow(sh, 14) +
                    360. * pow(sh, 15)) -
                    lz * (341.3333333333333 * lmu * pow(sh, -5) +
                    12.444444444444445 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -3) - 4.7407407407407405 * ash * sh * sqrt4sh *
                    sqrtsh * (44. + 108. * sh - 221. * pow(sh, 2) +
                    132. * pow(sh, 3) - 33. * pow(sh, 4) + 3. * pow(sh, 5)) +
                    0.019753086419753086 * Lsh * pow(-1 + sh, -6) * pow(sh, -8)*
                    (18. + 81. * sh + 39. * pow(sh, 2) + 37525. * pow(sh, 3) -
                    231198. * pow(sh, 4) + 582087. * pow(sh, 5) -
                    774221. * pow(sh, 6) + 575781. * pow(sh, 7) -
                    227535. * pow(sh, 8) + 38728. * pow(sh, 9) -
                    450. * pow(sh, 10) + 90. * pow(sh, 11) + 15. * pow(sh, 12)
                    ) - 0.000047031158142269256 * pow(-1 + sh, -5) *
                    pow(sh, -8)*(1701. + 1323. * sh - 29274. * pow(sh, 2) -
                    957341. * pow(sh, 3) + 5.622085e6 * pow(sh, 4) -
                    1.3372289e7 * pow(sh, 5) + 1.7244458e7 * pow(sh, 6) -
                    1.2810919e7 * pow(sh, 7) + 6.090011e6 * pow(sh, 8) -
                    4.03983e6 * pow(sh, 9) + 4.371768e6 * pow(sh, 10) +
                    4.551324e6 * pow(sh, 11) - 1.1897697e7 * pow(sh, 12) -
                    1.323264e7 * pow(sh, 13) + 6.277908e7 * pow(sh, 14) -
                    8.508528e7 * pow(sh, 15) + 6.212682e7 * pow(sh, 16) -
                    2.701314e7 * pow(sh, 17) + 6.98418e6 * pow(sh, 18) -
                    990360. * pow(sh, 19) + 59220. * pow(sh, 20))) -
                    1.679684219366759e-7 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (-161406. + 318843. * sh + 1.910657e6 * pow(sh, 2) +
                    3.755399935e9 * pow(sh, 3) -
                    2.2256359629e10 * pow(sh, 4) +
                    5.4715328248e10 * pow(sh, 5) -
                    7.1399970054e10 * pow(sh, 6) +
                    5.2256870574e10 * pow(sh, 7) -
                    2.1211105332e10 * pow(sh, 8) +
                    5.981785659e9 * pow(sh, 9) -
                    2.944201467e9 * pow(sh, 10) -
                    1.246759469e9 * pow(sh, 11) +
                    2.466843039e9 * pow(sh, 12) +
                    1.8171607842e10 * pow(sh, 13) -
                    6.053910752e10 * pow(sh, 14) +
                    8.996385496e10 * pow(sh, 15) -
                    7.96292826e10 * pow(sh, 16) +
                    4.509057616e10 * pow(sh, 17) -
                    1.647058952e10 * pow(sh, 18) +
                    3.74875284e9 * pow(sh, 19) - 4.8245988e8 * pow(sh, 20) +
                    2.674812e7 * pow(sh, 21) -
                    58800. * pow(3.141592653589793, 2)*
                    (-18. - 81. * sh - 39. * pow(sh, 2) -
                    28525. * pow(sh, 3) + 176088. * pow(sh, 4) -
                    439209. * pow(sh, 5) + 573427. * pow(sh, 6) -
                    414687. * pow(sh, 7) + 157597. * pow(sh, 8) -
                    24058. * pow(sh, 9) + 3132. * pow(sh, 10) -
                    3736. * pow(sh, 11) - 77479. * pow(sh, 12) +
                    318588. * pow(sh, 13) - 608560. * pow(sh, 14) +
                    702440. * pow(sh, 15) - 529920. * pow(sh, 16) +
                    267160. * pow(sh, 17) - 89120. * pow(sh, 18) +
                    18840. * pow(sh, 19) - 2280. * pow(sh, 20) +
                    120. * pow(sh, 21)))) * pow(z, 5);
            else
                res += pow(z, 5)*(-4202.986795121401 -
                    21563.981801901395 * (1. - sh) -
                    63115.765734768596 * pow(1. - sh, 2) -
                    142119.7662710934 * pow(1. - sh, 3) +
                    log(muh)*(-352.7111111111111 -
                    2104.8888888888887 * (1. - sh) -
                    7168. * pow(1. - sh, 2) -
                    18432. * pow(1. - sh, 3) -
                    39850.666666666664 * pow(1. - sh, 4)) -
                    277830.4069154384 * pow(1. - sh, 4) +
                    log(z)*(251.91238577751216 +
                    956.915478778669 * (1. - sh) +
                    4881.515489147685 * pow(1. - sh, 2) +
                    16699.40413911222 * pow(1. - sh, 3) +
                    log(muh)*(-341.3333333333333 -
                    1706.6666666666667 * (1. - sh) -
                    5120. * pow(1. - sh, 2) -
                    11946.666666666666 * pow(1. - sh, 3) -
                    23893.333333333332 * pow(1. - sh, 4)) +
                    41147.84749220197 * pow(1. - sh, 4)) +
                    (377.758024691358 + 1862.716049382716 * (1. - sh) +
                    5810.814814814815 * pow(1. - sh, 2) +
                    13779.160493827161 * pow(1. - sh, 3) +
                    27666.172839506173 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (11 <= maxpow) {
            if (sh < .900001)
                res += 0.0004560597153189746 * pow(3.141592653589793, 2) * pow(sh, -9)*
                (315. + 3640. * sh + 19380. * pow(sh, 2) + 62088. * pow(sh, 3) +
                    124834. * pow(sh, 4) + 62088. * pow(sh, 5) +
                    19380. * pow(sh, 6) + 3640. * pow(sh, 7) + 315. * pow(sh, 8)) *
                pow(z, 5.5);
            else
                res += (1330.8938148761156 + 6654.469074380578 * (1. - sh) +
                    20761.943512067406 * pow(1. - sh, 2) +
                    51372.50125421806 * pow(1. - sh, 3) +
                    110145.72275758653 * pow(1. - sh, 4)) * pow(z, 5.5);
        }

        if (12 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (1097.4814814814815 * pow(sh, -6) -
                    995.5555555555555 * Lsh * pow(sh, -6)) +
                    71.80286568206643 * pow(-1 + sh, -3) * pow(sh, -4) -
                    59.733333333333334 * Li3sh * pow(-1 + sh, -3) * pow(sh, -4) +
                    19.91111111111111 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -4) - 2.765432098765432 * cl2 * sh * sqrt4sh * sqrtsh *
                    (20. - 194. * sh - 657. * pow(sh, 2) + 1581. * pow(sh, 3) -
                    1239. * pow(sh, 4) + 462. * pow(sh, 5) - 84. * pow(sh, 6) +
                    6. * pow(sh, 7)) - 0.02633744855967078 * ash * sh * sqrt4sh *
                    sqrtsh * pow(-1 + sh, -3)*
                    (-3230. + 42428. * sh + 5415. * pow(sh, 2) -
                    547510. * pow(sh, 3) + 1.454143e6 * pow(sh, 4) -
                    1.806873e6 * pow(sh, 5) + 1.280646e6 * pow(sh, 6) -
                    546171. * pow(sh, 7) + 138714. * pow(sh, 8) -
                    19329. * pow(sh, 9) + 1137. * pow(sh, 10)) +
                    8.296296296296296 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 2)*
                    (210. - 870. * sh - 1395. * pow(sh, 2) +
                    13113. * pow(sh, 3) - 31009. * pow(sh, 4) +
                    39370. * pow(sh, 5) - 30843. * pow(sh, 6) +
                    15585. * pow(sh, 7) - 5091. * pow(sh, 8) +
                    1038. * pow(sh, 9) - 120. * pow(sh, 10) + 6. * pow(sh, 11))\
      + 0.019753086419753086 * Li2sh * pow(-1 + sh, -7) *
                    pow(sh, -6)*(12600. - 87696. * sh + 262296. * pow(sh, 2) -
                    436590. * pow(sh, 3) + 435240. * pow(sh, 4) -
                    257040. * pow(sh, 5) + 79436. * pow(sh, 6) -
                    8456. * pow(sh, 7) - 360. * pow(sh, 9) + 45. * pow(sh, 11))\
      - Lsh * (-59.733333333333334 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -4) + 2.765432098765432 * ash * sh * sqrt4sh *
                    sqrtsh * (20. - 194. * sh - 657. * pow(sh, 2) +
                    1581. * pow(sh, 3) - 1239. * pow(sh, 4) +
                    462. * pow(sh, 5) - 84. * pow(sh, 6) + 6. * pow(sh, 7)) +
                    0.00006584362139917696 * pow(-1 + sh, -8) * pow(sh, -10)*
                    (-1320. + 1416. * sh + 30540. * pow(sh, 2) +
                    40260. * pow(sh, 3) + 6.70004e6 * pow(sh, 4) -
                    5.379436e7 * pow(sh, 5) + 1.79724938e8 * pow(sh, 6) +
                    756000. * pow(3.141592653589793, 2) * pow(-1 + sh, 5) *
                    pow(sh, 6) - 3.3536944e8 * pow(sh, 7) +
                    3.8325104e8 * pow(sh, 8) - 2.7317989e8 * pow(sh, 9) +
                    1.17246435e8 * pow(sh, 10) -
                    2.7037239e7 * pow(sh, 11) -
                    300. * Lshb * (-1. + sh) * pow(sh, 4)*
                    (12600. - 87696. * sh + 262296. * pow(sh, 2) -
                    436590. * pow(sh, 3) + 435240. * pow(sh, 4) -
                    257040. * pow(sh, 5) + 79436. * pow(sh, 6) -
                    8456. * pow(sh, 7) - 360. * pow(sh, 9) +
                    45. * pow(sh, 11)) + 2.36385e6 * pow(sh, 12) -
                    31650. * pow(sh, 13) + 60375. * pow(sh, 14) -
                    3780. * pow(sh, 15) - 1215. * pow(sh, 16))) -
                    0.0019753086419753087 * pow(Lsh, 2) * pow(-1 + sh, -8) *
                    pow(sh, -10)*(-120. - 552. * sh - 120. * pow(sh, 2) +
                    3480. * pow(sh, 3) - 612380. * pow(sh, 4) +
                    4.99354e6 * pow(sh, 5) - 1.7689517e7 * pow(sh, 6) -
                    15120. * Lshb * pow(-1 + sh, 5) * pow(sh, 6) +
                    3.5499895e7 * pow(sh, 7) - 4.421963e7 * pow(sh, 8) +
                    3.502108e7 * pow(sh, 9) - 1.719707e7 * pow(sh, 10) +
                    4.767574e6 * pow(sh, 11) - 567440. * pow(sh, 12) +
                    1800. * pow(sh, 13) - 1800. * pow(sh, 14) -
                    225. * pow(sh, 15) + 225. * pow(sh, 16)) -
                    0.0019753086419753087 * pow(lz, 2) * pow(sh, -10)*
                    (-30. - 378. * sh - 2214. * pow(sh, 2) - 7938. * pow(sh, 3) -
                    638000. * pow(sh, 4) + 7560. * pow(sh, 5) +
                    6273. * pow(sh, 6) + 13689. * pow(sh, 7) +
                    10908. * pow(sh, 8) + 30. * pow(sh, 9) +
                    20300. * pow(sh, 10) + 27300. * pow(sh, 11) +
                    113400. * pow(sh, 12) + 49700. * pow(sh, 13) -
                    880950. * pow(sh, 14) + 1.19385e6 * pow(sh, 15) -
                    706650. * pow(sh, 16) + 216300. * pow(sh, 17) -
                    33600. * pow(sh, 18) + 2100. * pow(sh, 19)) -
                    lz * (995.5555555555555 * lmu * pow(sh, -6) +
                    29.866666666666667 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -4) + 5.530864197530864 * ash * sh * sqrt4sh *
                    sqrtsh * (20. - 194. * sh - 657. * pow(sh, 2) +
                    1581. * pow(sh, 3) - 1239. * pow(sh, 4) +
                    462. * pow(sh, 5) - 84. * pow(sh, 6) + 6. * pow(sh, 7)) +
                    0.003950617283950617 * Lsh * pow(-1 + sh, -7) *
                    pow(sh, -10)*(-60. - 336. * sh - 396. * pow(sh, 2) +
                    1344. * pow(sh, 3) - 614396. * pow(sh, 4) +
                    4.375784e6 * pow(sh, 5) - 1.3247019e7 * pow(sh, 6) +
                    2.2150786e7 * pow(sh, 7) - 2.2142404e7 * pow(sh, 8) +
                    1.3260636e7 * pow(sh, 9) - 4.429894e6 * pow(sh, 10) +
                    647380. * pow(sh, 11) - 2940. * pow(sh, 12) -
                    1740. * pow(sh, 13) + 585. * pow(sh, 14) +
                    45. * pow(sh, 15)) +
                    9.40623162845385e-6 * pow(-1 + sh, -6) * pow(sh, -10)*
                    (4620. + 4284. * sh - 102942. * pow(sh, 2) -
                    351078. * pow(sh, 3) - 4.7830454e7 * pow(sh, 4) +
                    3.0838269e8 * pow(sh, 5) - 8.19066822e8 * pow(sh, 6) +
                    1.178613196e9 * pow(sh, 7) -
                    9.89156856e8 * pow(sh, 8) +
                    4.74656612e8 * pow(sh, 9) - 9.292233e7 * pow(sh, 10) -
                    5.9056617e7 * pow(sh, 11) +
                    8.9385341e7 * pow(sh, 12) -
                    1.01542571e8 * pow(sh, 13) +
                    3.36952887e8 * pow(sh, 14) -
                    4.6151941e8 * pow(sh, 15) -
                    1.1490745e9 * pow(sh, 16) +
                    5.1849126e9 * pow(sh, 17) -
                    8.94761595e9 * pow(sh, 18) +
                    9.1281316e9 * pow(sh, 19) -
                    6.0729627e9 * pow(sh, 20) +
                    2.7087795e9 * pow(sh, 21) - 8.039283e8 * pow(sh, 22) +
                    1.522416e8 * pow(sh, 23) - 1.66278e7 * pow(sh, 24) +
                    795900. * pow(sh, 25))) -
                    7.465263197185596e-9 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (1.60524e6 - 3.372768e6 * sh - 2.1255318e7 * pow(sh, 2) +
                    5.1364152e7 * pow(sh, 3) -
                    2.17838821368e11 * pow(sh, 4) +
                    1.503468880032e12 * pow(sh, 5) -
                    4.435848139401e12 * pow(sh, 6) +
                    7.250465882724e12 * pow(sh, 7) -
                    7.100583095886e12 * pow(sh, 8) +
                    4.194932382824e12 * pow(sh, 9) -
                    1.400004505326e12 * pow(sh, 10) +
                    1.30381507564e11 * pow(sh, 11) +
                    2.09548894394e11 * pow(sh, 12) -
                    3.42677229216e11 * pow(sh, 13) +
                    7.84252942969e11 * pow(sh, 14) -
                    7.91328639346e11 * pow(sh, 15) -
                    3.49537340577e12 * pow(sh, 16) +
                    1.51956042427e13 * pow(sh, 17) -
                    2.91706462341e13 * pow(sh, 18) +
                    3.468763704735e13 * pow(sh, 19) -
                    2.790223133985e13 * pow(sh, 20) +
                    1.564098014115e13 * pow(sh, 21) -
                    6.1223554161e12 * pow(sh, 22) +
                    1.63963647855e12 * pow(sh, 23) -
                    2.859293178e11 * pow(sh, 24) +
                    2.92020939e10 * pow(sh, 25) - 1.3226913e9 * pow(sh, 26) +
                    88200. * pow(3.141592653589793, 2)*
                    (-180. - 1008. * sh - 1188. * pow(sh, 2) +
                    4032. * pow(sh, 3) - 1.452588e6 * pow(sh, 4) +
                    1.0340232e7 * pow(sh, 5) - 3.1138149e7 * pow(sh, 6) +
                    5.1560286e7 * pow(sh, 7) - 5.0820204e7 * pow(sh, 8) +
                    2.9901036e7 * pow(sh, 9) - 9.847894e6 * pow(sh, 10) +
                    1.626412e6 * pow(sh, 11) - 564648. * pow(sh, 12) +
                    1.515872e6 * pow(sh, 13) - 1.613573e6 * pow(sh, 14) -
                    1.0017483e7 * pow(sh, 15) + 5.154742e7 * pow(sh, 16) -
                    1.211917e8 * pow(sh, 17) + 1.785651e8 * pow(sh, 18) -
                    1.800631e8 * pow(sh, 19) + 1.286215e8 * pow(sh, 20) -
                    6.57363e7 * pow(sh, 21) + 2.38644e7 * pow(sh, 22) -
                    5.9997e6 * pow(sh, 23) + 991200. * pow(sh, 24) -
                    96600. * pow(sh, 25) + 4200. * pow(sh, 26)))) * pow(z, 6);
            else
                res += pow(z, 6)*(-13382.609103673856 -
                    83909.57333198964 * (1. - sh) -
                    285314.7964864959 * pow(1. - sh, 2) -
                    733141.6984787509 * pow(1. - sh, 3) +
                    log(muh)*(-1097.4814814814815 -
                    7580.444444444444 * (1. - sh) -
                    29518.222222222223 * pow(1. - sh, 2) -
                    85684.14814814815 * pow(1. - sh, 3) -
                    206727.11111111112 * pow(1. - sh, 4)) -
                    1.6179936283094224e6 * pow(1. - sh, 4) +
                    log(z)*(1155.1126760626482 +
                    4506.419624502263 * (1. - sh) +
                    25308.484542876675 * pow(1. - sh, 2) +
                    94030.12199742932 * pow(1. - sh, 3) +
                    log(muh)*(-995.5555555555555 -
                    5973.333333333333 * (1. - sh) -
                    20906.666666666668 * pow(1. - sh, 2) -
                    55751.11111111111 * pow(1. - sh, 3) -
                    125440. * pow(1. - sh, 4)) +
                    250854.98047286444 * pow(1. - sh, 4)) +
                    (1201.679012345679 + 7214.074074074074 * (1. - sh) +
                    26538.192592592593 * pow(1. - sh, 2) +
                    71813.39259259259 * pow(1. - sh, 3) +
                    162002.66666666666 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (13 <= maxpow) {
            if (sh < .900001)
                res += 0.00014351529503044654 * pow(3.141592653589793, 2) * pow(sh, -11)*
                (693. + 9450. * sh + 60305. * pow(sh, 2) +
                    238200. * pow(sh, 3) + 642234. * pow(sh, 4) +
                    1.173308e6 * pow(sh, 5) + 642234. * pow(sh, 6) +
                    238200. * pow(sh, 7) + 60305. * pow(sh, 8) +
                    9450. * pow(sh, 9) + 693. * pow(sh, 10)) * pow(z, 6.5);
            else
                res += (4355.652485049105 + 26133.914910294636 * (1. - sh) +
                    94735.44154981805 * pow(1. - sh, 2) +
                    266783.7147092577 * pow(1. - sh, 3) +
                    641447.6079321424 * pow(1. - sh, 4)) * pow(z, 6.5);
        }

        if (14 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (3527.9238095238097 * pow(sh, -7) -
                    3072. * Lsh * pow(sh, -7)) +
                    188.0551244054121 * pow(-1 + sh, -3) * pow(sh, -5) -
                    156.44444444444446 * Li3sh * pow(-1 + sh, -3) * pow(sh, -5) +
                    52.148148148148145 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -5) + 4.266666666666667 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-204. + 654. * sh + 3621. * pow(sh, 2) -
                    9390. * pow(sh, 3) + 8928. * pow(sh, 4) -
                    4384. * pow(sh, 5) + 1190. * pow(sh, 6) -
                    170. * pow(sh, 7) + 10. * pow(sh, 8)) +
                    0.06772486772486773 * ash * sqrt4sh * sqrtsh * pow(-1 + sh, -3) *
                    pow(sh, 2)*(23244. - 145995. * sh - 135165. * pow(sh, 2) +
                    2.214474e6 * pow(sh, 3) - 5.812671e6 * pow(sh, 4) +
                    7.761562e6 * pow(sh, 5) - 6.239858e6 * pow(sh, 6) +
                    3.192422e6 * pow(sh, 7) - 1.048133e6 * pow(sh, 8) +
                    214001. * pow(sh, 9) - 24740. * pow(sh, 10) +
                    1237. * pow(sh, 11)) +
                    0.7111111111111111 * Li2sh * pow(-1 + sh, -8) * pow(sh, -7)*
                    (-1080. + 8600. * sh - 29988. * pow(sh, 2) +
                    59752. * pow(sh, 3) - 74250. * pow(sh, 4) +
                    58630. * pow(sh, 5) - 28380. * pow(sh, 6) +
                    7472. * pow(sh, 7) - 698. * pow(sh, 8) - 10. * pow(sh, 11) +
                    pow(sh, 12) + pow(sh, 13)) -
                    12.8 * pow(ash, 2) * pow(-1 + sh, -4) * pow(sh, 2)*
                    (60. - 1390. * sh + 3920. * pow(sh, 2) +
                    11563. * pow(sh, 3) - 80966. * pow(sh, 4) +
                    191832. * pow(sh, 5) - 258720. * pow(sh, 6) +
                    224115. * pow(sh, 7) - 130416. * pow(sh, 8) +
                    51582. * pow(sh, 9) - 13684. * pow(sh, 10) +
                    2330. * pow(sh, 11) - 230. * pow(sh, 12) + 10. * pow(sh, 13))
                    - Lsh * (-156.44444444444446 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -5) - 4.266666666666667 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-204. + 654. * sh + 3621. * pow(sh, 2) -
                    9390. * pow(sh, 3) + 8928. * pow(sh, 4) -
                    4384. * pow(sh, 5) + 1190. * pow(sh, 6) -
                    170. * pow(sh, 7) + 10. * pow(sh, 8)) +
                    0.000013437473754934073 * pow(-1 + sh, -9) * pow(sh, -12)*
                    (3900. - 3800. * sh - 116136. * pow(sh, 2) -
                    213534. * pow(sh, 3) + 423060. * pow(sh, 4) -
                    1.71541326e8 * pow(sh, 5) +
                    1.547854104e9 * pow(sh, 6) -
                    6.099085398e9 * pow(sh, 7) +
                    9.702e6 * pow(3.141592653589793, 2) * pow(-1 + sh, 6) *
                    pow(sh, 7) + 1.3863208764e10 * pow(sh, 8) -
                    2.0080171644e10 * pow(sh, 9) +
                    1.9223278801e10 * pow(sh, 10) -
                    1.2149332644e10 * pow(sh, 11) +
                    4.878367842e9 * pow(sh, 12) -
                    1.128611791e9 * pow(sh, 13) -
                    52920. * Lshb * (-1. + sh) * pow(sh, 5)*
                    (-1080. + 8600. * sh - 29988. * pow(sh, 2) +
                    59752. * pow(sh, 3) - 74250. * pow(sh, 4) +
                    58630. * pow(sh, 5) - 28380. * pow(sh, 6) +
                    7472. * pow(sh, 7) - 698. * pow(sh, 8) -
                    10. * pow(sh, 11) + pow(sh, 12) + pow(sh, 13)) +
                    1.16995017e8 * pow(sh, 14) - 1.22745e6 * pow(sh, 15) -
                    53410. * pow(sh, 16) + 252693. * pow(sh, 17) -
                    23814. * pow(sh, 18) - 3234. * pow(sh, 19))) -
                    0.0028218694885361554 * pow(Lsh, 2) * pow(-1 + sh, -9) *
                    pow(sh, -12)*(60. + 340. * sh + 312. * pow(sh, 2) -
                    1872. * pow(sh, 3) - 4980. * pow(sh, 4) +
                    1.468248e6 * pow(sh, 5) - 1.3307922e7 * pow(sh, 6) +
                    5.3745563e7 * pow(sh, 7) -
                    27720. * Lshb * pow(-1 + sh, 6) * pow(sh, 7) -
                    1.2604899e8 * pow(sh, 8) + 1.89165441e8 * pow(sh, 9) -
                    1.88411563e8 * pow(sh, 10) + 1.24499847e8 * pow(sh, 11) -
                    5.2564902e7 * pow(sh, 12) + 1.2834946e7 * pow(sh, 13) -
                    1.375368e6 * pow(sh, 14) + 1260. * pow(sh, 16) -
                    1386. * pow(sh, 17) + 126. * pow(sh, 19)) +
                    0.0028218694885361554 * pow(lz, 2) * pow(sh, -12)*
                    (15. + 220. * sh + 1518. * pow(sh, 2) + 6534. * pow(sh, 3) +
                    19503. * pow(sh, 4) + 1.511448e6 * pow(sh, 5) -
                    20790. * pow(sh, 6) - 6546. * pow(sh, 7) -
                    24741. * pow(sh, 8) - 29490. * pow(sh, 9) -
                    19183. * pow(sh, 10) - 15. * pow(sh, 11) -
                    42336. * pow(sh, 12) - 50652. * pow(sh, 13) -
                    42336. * pow(sh, 14) - 522396. * pow(sh, 15) -
                    514080. * pow(sh, 16) + 5.330178e6 * pow(sh, 17) -
                    8.247204e6 * pow(sh, 18) + 6.008688e6 * pow(sh, 19) -
                    2.443392e6 * pow(sh, 20) + 570780. * pow(sh, 21) -
                    71820. * pow(sh, 22) + 3780. * pow(sh, 23)) -
                    lz * (3072. * lmu * pow(sh, -7) +
                    78.22222222222223 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -5) - 8.533333333333333 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-204. + 654. * sh + 3621. * pow(sh, 2) -
                    9390. * pow(sh, 3) + 8928. * pow(sh, 4) -
                    4384. * pow(sh, 5) + 1190. * pow(sh, 6) -
                    170. * pow(sh, 7) + 10. * pow(sh, 8)) +
                    0.005643738977072311 * Lsh * pow(-1 + sh, -8) *
                    pow(sh, -12)*(30. + 200. * sh + 356. * pow(sh, 2) -
                    580. * pow(sh, 3) - 3070. * pow(sh, 4) +
                    1.465988e6 * pow(sh, 5) - 1.1840494e7 * pow(sh, 6) +
                    4.1785315e7 * pow(sh, 7) - 8.3994971e7 * pow(sh, 8) +
                    1.0527886e8 * pow(sh, 9) - 8.4349693e7 * pow(sh, 10) +
                    4.2263834e7 * pow(sh, 11) -
                    1.2154288e7 * pow(sh, 12) + 1.55972e6 * pow(sh, 13) -
                    2380. * pow(sh, 14) - 2065. * pow(sh, 15) -
                    945. * pow(sh, 16) + 462. * pow(sh, 17) +
                    21. * pow(sh, 18)) -
                    4.071961743919416e-7 * pow(-1 + sh, -7) * pow(sh, -12)*
                    (64350. + 66000. * sh - 1.848594e6 * pow(sh, 2) -
                    7.286499e6 * pow(sh, 3) - 5.743914e6 * pow(sh, 4) -
                    5.685999132e9 * pow(sh, 5) +
                    4.1685525882e10 * pow(sh, 6) -
                    1.30007412909e11 * pow(sh, 7) +
                    2.26326493503e11 * pow(sh, 8) -
                    2.39590844427e11 * pow(sh, 9) +
                    1.56064921276e11 * pow(sh, 10) -
                    5.9156118388e10 * pow(sh, 11) +
                    1.1660658501e10 * pow(sh, 12) -
                    5.482108499e9 * pow(sh, 13) +
                    1.2697937753e10 * pow(sh, 14) -
                    1.820498844e10 * pow(sh, 15) +
                    4.184087512e9 * pow(sh, 16) +
                    6.5568484406e10 * pow(sh, 17) -
                    9.5193663855e10 * pow(sh, 18) -
                    3.83610629052e11 * pow(sh, 19) +
                    1.851933873636e12 * pow(sh, 20) -
                    3.850977196836e12 * pow(sh, 21) +
                    4.997388254166e12 * pow(sh, 22) -
                    4.45400972478e12 * pow(sh, 23) +
                    2.82695858676e12 * pow(sh, 24) -
                    1.2912095196e12 * pow(sh, 25) +
                    4.2141221892e11 * pow(sh, 26) -
                    9.582123474e10 * pow(sh, 27) +
                    1.44039357e10 * pow(sh, 28) -
                    1.28490516e9 * pow(sh, 29) + 5.143446e7 * pow(sh, 30)))
                    + 2.9379233361611947e-11 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (2.074545e8 - 4.76982e8 * sh -
                    3.223561968e9 * pow(sh, 2) +
                    1.2229671465e10 * pow(sh, 3) +
                    5.5118379195e10 * pow(sh, 4) -
                    1.50774673843134e14 * pow(sh, 5) +
                    1.186047300987252e15 * pow(sh, 6) -
                    4.079182881529008e15 * pow(sh, 7) +
                    8.005291590723075e15 * pow(sh, 8) -
                    9.81400671207825e15 * pow(sh, 9) +
                    7.724627706932279e15 * pow(sh, 10) -
                    3.853787364524662e15 * pow(sh, 11) +
                    1.164725088632579e15 * pow(sh, 12) -
                    2.634808520857e14 * pow(sh, 13) +
                    2.5170701729432e14 * pow(sh, 14) -
                    4.0013657985217e14 * pow(sh, 15) +
                    1.47801666642455e14 * pow(sh, 16) +
                    1.2877818678578e15 * pow(sh, 17) -
                    2.076397177767913e15 * pow(sh, 18) -
                    8.385630050032431e15 * pow(sh, 19) +
                    4.538622316201646e16 * pow(sh, 20) -
                    1.061838620189715e17 * pow(sh, 21) +
                    1.575009771316346e17 * pow(sh, 22) -
                    1.6342684496066314e17 * pow(sh, 23) +
                    1.2333678370646925e17 * pow(sh, 24) -
                    6.8698738259084936e16 * pow(sh, 25) +
                    2.8233898574272776e16 * pow(sh, 26) -
                    8.447633225048556e15 * pow(sh, 27) +
                    1.786675943700648e15 * pow(sh, 28) -
                    2.5272282124782e14 * pow(sh, 29) +
                    2.141343983394e13 * pow(sh, 30) -
                    8.2047522942e11 * pow(sh, 31) +
                    3.20166e7 * pow(3.141592653589793, 2)*
                    (-90. - 600. * sh - 1068. * pow(sh, 2) +
                    1740. * pow(sh, 3) + 9210. * pow(sh, 4) -
                    3.558804e6 * pow(sh, 5) + 2.8685982e7 * pow(sh, 6) -
                    1.00848529e8 * pow(sh, 7) +
                    2.01465905e8 * pow(sh, 8) - 2.5035526e8 * pow(sh, 9) +
                    1.98432319e8 * pow(sh, 10) -
                    9.8218082e7 * pow(sh, 11) +
                    2.7878488e7 * pow(sh, 12) - 3.151676e6 * pow(sh, 13) -
                    1.140968e6 * pow(sh, 14) + 600307. * pow(sh, 15) +
                    5.766227e6 * pow(sh, 16) - 8.667286e6 * pow(sh, 17) -
                    7.4435635e7 * pow(sh, 18) +
                    4.29448764e8 * pow(sh, 19) -
                    1.174957056e9 * pow(sh, 20) +
                    2.075532984e9 * pow(sh, 21) -
                    2.59118244e9 * pow(sh, 22) +
                    2.377353888e9 * pow(sh, 23) -
                    1.631212128e9 * pow(sh, 24) +
                    8.40926772e8 * pow(sh, 25) -
                    3.23868888e8 * pow(sh, 26) +
                    9.1648368e7 * pow(sh, 27) -
                    1.8464544e7 * pow(sh, 28) + 2.50236e6 * pow(sh, 29) -
                    204120. * pow(sh, 30) + 7560. * pow(sh, 31)))) * pow(z, 7);
            else
                res += pow(z, 7)*(-44491.606444877616 -
                    330794.4598052619 * (1. - sh) -
                    1.2804206866827896e6 * pow(1. - sh, 2) -
                    3.6984879243897516e6 * pow(1. - sh, 3) +
                    log(muh)*(-3527.9238095238097 -
                    27767.466666666667 * (1. - sh) -
                    121821.86666666667 * pow(1. - sh, 2) -
                    394137.6 * pow(1. - sh, 3) -
                    1.049856e6 * pow(1. - sh, 4)) -
                    9.101629224853888e6 * pow(1. - sh, 4) +
                    log(z)*(4793.772650900163 +
                    20076.271464118738 * (1. - sh) +
                    125799.80299624978 * pow(1. - sh, 2) +
                    506715.246202913 * pow(1. - sh, 3) +
                    log(muh)*(-3072. - 21504. * (1. - sh) -
                    86016. * pow(1. - sh, 2) -
                    258048. * pow(1. - sh, 3) -
                    645120. * pow(1. - sh, 4)) +
                    1.4556579496221067e6 * pow(1. - sh, 4)) +
                    (4000.5164021164023 +
                    28350.044444444444 * (1. - sh) +
                    120184.65185185186 * pow(1. - sh, 2) +
                    364920.47407407407 * pow(1. - sh, 3) +
                    913431.7037037037 * pow(1. - sh, 4)) * pow(log(z), 2));
        }

        if (15 <= maxpow) {
            if (sh < .900001)
                res += 0.000024287203774383262 * pow(3.141592653589793, 2) *
                pow(sh, -13)*(3003. + 47124. * sh + 349398. * pow(sh, 2) +
                    1.62554e6 * pow(sh, 3) + 5.297685e6 * pow(sh, 4) +
                    1.265412e7 * pow(sh, 5) + 2.15477e7 * pow(sh, 6) +
                    1.265412e7 * pow(sh, 7) + 5.297685e6 * pow(sh, 8) +
                    1.62554e6 * pow(sh, 9) + 349398. * pow(sh, 10) +
                    47124. * pow(sh, 11) + 3003. * pow(sh, 12)) * pow(z, 7.5);
            else
                res += (14742.208410935435 + 103195.45887654803 * (1. - sh) +
                    426049.8230760341 * pow(1. - sh, 2) +
                    1.3444894070773118e6 * pow(1. - sh, 3) +
                    3.579434527547286e6 * pow(1. - sh, 4)) * pow(z, 7.5);
        }

        if (16 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (11644.08888888889 * pow(sh, -8) -
                    9856. * Lsh * pow(sh, -8)) +
                    523.8678465579336 * pow(-1 + sh, -3) * pow(sh, -6) -
                    435.8095238095238 * Li3sh * pow(-1 + sh, -3) * pow(sh, -6) +
                    145.26984126984127 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -6) - 7.822222222222222 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-42. + 1287. * sh - 1614. * pow(sh, 2) -
                    19017. * pow(sh, 3) + 50556. * pow(sh, 4) -
                    55330. * pow(sh, 5) + 33315. * pow(sh, 6) -
                    11945. * pow(sh, 7) + 2550. * pow(sh, 8) -
                    300. * pow(sh, 9) + 15. * pow(sh, 10)) -
                    0.0028218694885361554 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 2)*
                    (228522. - 7.741593e6 * sh + 3.0723729e7 * pow(sh, 2) +
                    6.0003996e7 * pow(sh, 3) - 5.8092981e8 * pow(sh, 4) +
                    1.504380659e9 * pow(sh, 5) - 2.124842634e9 * pow(sh, 6) +
                    1.888618168e9 * pow(sh, 7) - 1.114436468e9 * pow(sh, 8) +
                    4.4384322e8 * pow(sh, 9) - 1.18087858e8 * pow(sh, 10) +
                    2.0123511e7 * pow(sh, 11) - 1.986441e6 * pow(sh, 12) +
                    86367. * pow(sh, 13)) +
                    23.466666666666665 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 3)*(-700. + 7875. * sh - 14966. * pow(sh, 2) -
                    79023. * pow(sh, 3) + 455850. * pow(sh, 4) -
                    1.077135e6 * pow(sh, 5) + 1.523775e6 * pow(sh, 6) -
                    1.432728e6 * pow(sh, 7) + 934836. * pow(sh, 8) -
                    430150. * pow(sh, 9) + 139230. * pow(sh, 10) -
                    31025. * pow(sh, 11) + 4530. * pow(sh, 12) -
                    390. * pow(sh, 13) + 15. * pow(sh, 14)) +
                    0.016931216931216932 * Li2sh * pow(-1 + sh, -9) * pow(sh, -8)*
                    (145530. - 1.30482e6 * sh + 5.20032e6 * pow(sh, 2) -
                    1.208298e7 * pow(sh, 3) + 1.801254e7 * pow(sh, 4) -
                    1.78178e7 * pow(sh, 5) + 1.163162e7 * pow(sh, 6) -
                    4.77477e6 * pow(sh, 7) + 1.082136e6 * pow(sh, 8) -
                    94842. * pow(sh, 9) - 420. * pow(sh, 13) +
                    70. * pow(sh, 14) + 35. * pow(sh, 15)) -
                    Lsh * (-435.8095238095238 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -6) + 7.822222222222222 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-42. + 1287. * sh - 1614. * pow(sh, 2) -
                    19017. * pow(sh, 3) + 50556. * pow(sh, 4) -
                    55330. * pow(sh, 5) + 33315. * pow(sh, 6) -
                    11945. * pow(sh, 7) + 2550. * pow(sh, 8) -
                    300. * pow(sh, 9) + 15. * pow(sh, 10)) +
                    4.799097769619311e-7 * pow(-1 + sh, -10) * pow(sh, -14)*
                    (-70875. + 64125. * sh + 2.661225e6 * pow(sh, 2) +
                    6.471633e6 * pow(sh, 3) - 8.447481e6 * pow(sh, 4) -
                    4.7108817e7 * pow(sh, 5) +
                    2.1458196025e10 * pow(sh, 6) -
                    2.14166617315e11 * pow(sh, 7) +
                    9.57541423647e11 * pow(sh, 8) +
                    7.56756e8 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 7) * pow(sh, 8) -
                    2.521983619869e12 * pow(sh, 9) +
                    4.337037789987e12 * pow(sh, 10) -
                    5.090519317485e12 * pow(sh, 11) +
                    4.129949513865e12 * pow(sh, 12) -
                    2.286556939359e12 * pow(sh, 13) +
                    8.27081528763e11 * pow(sh, 14) -
                    1.76924790709e11 * pow(sh, 15) -
                    35280. * Lshb * (-1. + sh) * pow(sh, 6)*
                    (145530. - 1.30482e6 * sh + 5.20032e6 * pow(sh, 2) -
                    1.208298e7 * pow(sh, 3) + 1.801254e7 * pow(sh, 4) -
                    1.78178e7 * pow(sh, 5) + 1.163162e7 * pow(sh, 6) -
                    4.77477e6 * pow(sh, 7) + 1.082136e6 * pow(sh, 8) -
                    94842. * pow(sh, 9) - 420. * pow(sh, 13) +
                    70. * pow(sh, 14) + 35. * pow(sh, 15)) +
                    1.717636396e10 * pow(sh, 16) -
                    1.22598e7 * pow(sh, 17) - 4.2757596e7 * pow(sh, 18) +
                    2.333772e6 * pow(sh, 19) + 6.325704e6 * pow(sh, 20) -
                    688800. * pow(sh, 21) - 54600. * pow(sh, 22))) -
                    0.00040312421264802217 * pow(Lsh, 2) * pow(-1 + sh, -10) *
                    pow(sh, -14)*(-315. - 2115. * sh - 3255. * pow(sh, 2) +
                    9681. * pow(sh, 3) + 37863. * pow(sh, 4) +
                    21231. * pow(sh, 5) - 3.5869645e7 * pow(sh, 6) +
                    3.5987455e8 * pow(sh, 7) - 1.631139771e9 * pow(sh, 8) -
                    540540. * Lshb * pow(-1 + sh, 7) * pow(sh, 8) +
                    4.372215162e9 * pow(sh, 9) -
                    7.668316866e9 * pow(sh, 10) +
                    9.19386972e9 * pow(sh, 11) - 7.62973092e9 * pow(sh, 12) +
                    4.325428674e9 * pow(sh, 13) -
                    1.601657043e9 * pow(sh, 14) +
                    3.49216864e8 * pow(sh, 15) - 3.3959485e7 * pow(sh, 16) +
                    8820. * pow(sh, 19) - 10290. * pow(sh, 20) +
                    735. * pow(sh, 21) + 735. * pow(sh, 22)) -
                    0.00010078105316200554 * pow(lz, 2) * pow(sh, -14)*
                    (-315. - 5265. * sh - 41730. * pow(sh, 2) -
                    208494. * pow(sh, 3) - 734877. * pow(sh, 4) -
                    1.926639e6 * pow(sh, 5) - 1.4698138e8 * pow(sh, 6) +
                    2.16216e6 * pow(sh, 7) + 48987. * pow(sh, 8) +
                    1.669041e6 * pow(sh, 9) + 2.629962e6 * pow(sh, 10) +
                    2.41431e6 * pow(sh, 11) + 1.436625e6 * pow(sh, 12) +
                    315. * pow(sh, 13) + 3.764376e6 * pow(sh, 14) +
                    4.230072e6 * pow(sh, 15) + 5.006232e6 * pow(sh, 16) -
                    7.37352e6 * pow(sh, 17) + 1.0643094e8 * pow(sh, 18) +
                    1.95359472e8 * pow(sh, 19) -
                    1.425010356e9 * pow(sh, 20) +
                    2.406212424e9 * pow(sh, 21) -
                    2.05080876e9 * pow(sh, 22) + 1.03141962e9 * pow(sh, 23) -
                    3.2026302e8 * pow(sh, 24) + 6.054048e7 * pow(sh, 25) -
                    6.40332e6 * pow(sh, 26) + 291060. * pow(sh, 27)) -
                    lz * (9856. * lmu * pow(sh, -8) +
                    217.9047619047619 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -6) + 15.644444444444444 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 2)*(-42. + 1287. * sh - 1614. * pow(sh, 2) -
                    19017. * pow(sh, 3) + 50556. * pow(sh, 4) -
                    55330. * pow(sh, 5) + 33315. * pow(sh, 6) -
                    11945. * pow(sh, 7) + 2550. * pow(sh, 8) -
                    300. * pow(sh, 9) + 15. * pow(sh, 10)) +
                    0.00040312421264802217 * Lsh * pow(-1 + sh, -9) *
                    pow(sh, -14)*(-315. - 2430. * sh - 5685. * pow(sh, 2) +
                    3996. * pow(sh, 3) + 41859. * pow(sh, 4) +
                    63090. * pow(sh, 5) - 7.1605955e7 * pow(sh, 6) +
                    6.4801935e8 * pow(sh, 7) -
                    2.609788929e9 * pow(sh, 8) +
                    6.121801554e9 * pow(sh, 9) -
                    9.217982115e9 * pow(sh, 10) +
                    9.24507918e9 * pow(sh, 11) -
                    6.181354605e9 * pow(sh, 12) +
                    2.66089059e9 * pow(sh, 13) -
                    6.71469273e8 * pow(sh, 14) +
                    7.6209266e7 * pow(sh, 15) + 37800. * pow(sh, 16) -
                    47460. * pow(sh, 17) - 29232. * pow(sh, 18) -
                    9828. * pow(sh, 19) + 6930. * pow(sh, 20) +
                    210. * pow(sh, 21)) -
                    1.6780062131536054e-9 * pow(-1 + sh, -8) * pow(sh, -14)*
                    (-1.0135125e7 - 1.1100375e7 * sh +
                    3.6848955e8 * pow(sh, 2) +
                    1.673522994e9 * pow(sh, 3) +
                    1.770566655e9 * pow(sh, 4) -
                    4.868950515e9 * pow(sh, 5) +
                    6.12638023426e12 * pow(sh, 6) -
                    5.053531208726e13 * pow(sh, 7) +
                    1.81942427597788e14 * pow(sh, 8) -
                    3.7509726864038e14 * pow(sh, 9) +
                    4.863909914149e14 * pow(sh, 10) -
                    4.0837905886362e14 * pow(sh, 11) +
                    2.185978661919e14 * pow(sh, 12) -
                    6.9223437871788e13 * pow(sh, 13) +
                    9.478097027448e12 * pow(sh, 14) +
                    4.822522515092e12 * pow(sh, 15) -
                    1.3702469432263e13 * pow(sh, 16) +
                    2.0211432885167e13 * pow(sh, 17) -
                    1.5340657706842e13 * pow(sh, 18) +
                    3.8517131981282e13 * pow(sh, 19) -
                    1.98231128437323e14 * pow(sh, 20) +
                    2.48611036890867e14 * pow(sh, 21) +
                    1.312843416208632e15 * pow(sh, 22) -
                    6.858549767677608e15 * pow(sh, 23) +
                    1.6510967898168744e16 * pow(sh, 24) -
                    2.57336419311972e16 * pow(sh, 25) +
                    2.851348331813982e16 * pow(sh, 26) -
                    2.336070503975208e16 * pow(sh, 27) +
                    1.439716999494774e16 * pow(sh, 28) -
                    6.70336841266092e15 * pow(sh, 29) +
                    2.34397396677444e15 * pow(sh, 30) -
                    6.0527470649646e14 * pow(sh, 31) +
                    1.1182510300962e14 * pow(sh, 32) -
                    1.396347000048e13 * pow(sh, 33) +
                    1.054350297e12 * pow(sh, 34) -
                    3.631041414e10 * pow(sh, 35))) -
                    4.656471897973153e-15 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (7.34806697625e11 - 1.86465740175e12 * sh -
                    1.3539275231625e13 * pow(sh, 2) +
                    6.7027116030732e13 * pow(sh, 3) +
                    3.63276406618983e14 * pow(sh, 4) +
                    7.707518005473e13 * pow(sh, 5) -
                    2.670939112625576e18 * pow(sh, 6) +
                    2.358705949072117e19 * pow(sh, 7) -
                    9.25798205589377e19 * pow(sh, 8) +
                    2.1183909722959626e20 * pow(sh, 9) -
                    3.1161735718840415e20 * pow(sh, 10) +
                    3.06304944728649e20 * pow(sh, 11) -
                    2.023336897561395e20 * pow(sh, 12) +
                    8.778312486562154e19 * pow(sh, 13) -
                    2.3206885685742117e19 * pow(sh, 14) +
                    1.3935768215051139e18 * pow(sh, 15) +
                    5.883932779473471e18 * pow(sh, 16) -
                    1.0545119614382879e19 * pow(sh, 17) +
                    1.1056449646096937e19 * pow(sh, 18) -
                    2.3434959475666616e19 * pow(sh, 19) +
                    1.0419598368525897e20 * pow(sh, 20) -
                    1.688591180885733e20 * pow(sh, 21) -
                    5.308738122339353e20 * pow(sh, 22) +
                    3.5306726064196524e21 * pow(sh, 23) -
                    9.689077766441178e21 * pow(sh, 24) +
                    1.7097533811227756e22 * pow(sh, 25) -
                    2.1588630869532427e22 * pow(sh, 26) +
                    2.038422378040867e22 * pow(sh, 27) -
                    1.4690695476739364e22 * pow(sh, 28) +
                    8.14476034656345e21 * pow(sh, 29) -
                    3.4697517653715583e21 * pow(sh, 30) +
                    1.1250567404926722e21 * pow(sh, 31) -
                    2.7233981875541377e20 * pow(sh, 32) +
                    4.759269487750347e19 * pow(sh, 33) -
                    5.663805036845516e18 * pow(sh, 34) +
                    4.101841359381566e17 * pow(sh, 35) -
                    1.362249094884678e16 * pow(sh, 36) +
                    4.32864432e10 * pow(3.141592653589793, 2)*
                    (-315. - 2430. * sh - 5685. * pow(sh, 2) +
                    3996. * pow(sh, 3) + 41859. * pow(sh, 4) +
                    63090. * pow(sh, 5) - 5.9090375e7 * pow(sh, 6) +
                    5.3345259e8 * pow(sh, 7) -
                    2.141709439e9 * pow(sh, 8) +
                    5.001401214e9 * pow(sh, 9) -
                    7.486485645e9 * pow(sh, 10) +
                    7.45371022e9 * pow(sh, 11) -
                    4.941375175e9 * pow(sh, 12) +
                    2.10797493e9 * pow(sh, 13) -
                    5.28751827e8 * pow(sh, 14) +
                    6.6874034e7 * pow(sh, 15) - 2.302929e7 * pow(sh, 16) +
                    4.790626e7 * pow(sh, 17) -
                    1.24781262e8 * pow(sh, 18) +
                    4.35359256e8 * pow(sh, 19) -
                    5.45760408e8 * pow(sh, 20) -
                    3.99911175e9 * pow(sh, 21) +
                    2.559251793e10 * pow(sh, 22) -
                    7.87509723e10 * pow(sh, 23) +
                    1.60158041736e11 * pow(sh, 24) -
                    2.35861111332e11 * pow(sh, 25) +
                    2.6202440418e11 * pow(sh, 26) -
                    2.2419142284e11 * pow(sh, 27) +
                    1.491808626e11 * pow(sh, 28) -
                    7.7359627884e10 * pow(sh, 29) +
                    3.1118686368e10 * pow(sh, 30) -
                    9.59731542e9 * pow(sh, 31) +
                    2.22259884e9 * pow(sh, 32) -
                    3.733653e8 * pow(sh, 33) + 4.288284e7 * pow(sh, 34) -
                    3.00762e6 * pow(sh, 35) + 97020. * pow(sh, 36)))) *
                pow(z, 8);
            else
                res += pow(z, 8)*(-152175.3347907426 -
                    1.3121004907612824e6 * (1. - sh) -
                    5.692547653098881e6 * pow(1. - sh, 2) -
                    1.8262414685026634e7 * pow(1. - sh, 3) +
                    log(muh)*(-11644.08888888889 -
                    103008.71111111112 * (1. - sh) -
                    502963.2 * pow(1. - sh, 2) -
                    1.794816e6 * pow(1. - sh, 3) -
                    5.231424e6 * pow(1. - sh, 4)) -
                    4.9606666429006e7 * pow(1. - sh, 4) +
                    log(z)*(19181.53823244784 +
                    86972.5498690609 * (1. - sh) +
                    607120.085934602 * pow(1. - sh, 2) +
                    2.6398902680343925e6 * pow(1. - sh, 3) +
                    log(muh)*(-9856. - 78848. * (1. - sh) -
                    354816. * pow(1. - sh, 2) -
                    1.18272e6 * pow(1. - sh, 3) -
                    3.25248e6 * pow(1. - sh, 4)) +
                    8.124517405933031e6 * pow(1. - sh, 4)) +
                    (13720.493827160493 +
                    112232.75061728395 * (1. - sh) +
                    538923.3777777777 * pow(1. - sh, 2) +
                    1.8125184592592593e6 * pow(1. - sh, 3) +
                    4.984340004232804e6 * pow(1. - sh, 4)) * pow(log(z), 2)
                    );
        }

        if (17 <= maxpow) {
            if (sh < .900001)
                res += 8.66719820968187e-6 * pow(3.141592653589793, 2) * pow(sh, -15)*
                (6435. + 114114. * sh + 962577. * pow(sh, 2) +
                    5.137524e6 * pow(sh, 3) + 1.9445755e7 * pow(sh, 4) +
                    5.526435e7 * pow(sh, 5) + 1.20557265e8 * pow(sh, 6) +
                    1.9446652e8 * pow(sh, 7) + 1.20557265e8 * pow(sh, 8) +
                    5.526435e7 * pow(sh, 9) + 1.9445755e7 * pow(sh, 10) +
                    5.137524e6 * pow(sh, 11) + 962577. * pow(sh, 12) +
                    114114. * pow(sh, 13) + 6435. * pow(sh, 14)) * pow(z, 8.5);
            else
                res += (51106.322491242834 + 408850.5799299427 * (1. - sh) +
                    1.8934892483005472e6 * pow(1. - sh, 2) +
                    6.615713446491386e6 * pow(1. - sh, 3) +
                    1.9308607466222685e7 * pow(1. - sh, 4)) * pow(z, 8.5);
        }

        if (18 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (39253.5139329806 * pow(sh, -9) -
                    32540.444444444445 * Lsh * pow(sh, -9)) +
                    1527.947885793973 * pow(-1 + sh, -3) * pow(sh, -7) -
                    1271.111111111111 * Li3sh * pow(-1 + sh, -3) * pow(sh, -7) +
                    423.7037037037037 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -7) + 16.141093474426807 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(552. - 6504. * sh + 954. * pow(sh, 2) +
                    96534. * pow(sh, 3) - 256765. * pow(sh, 4) +
                    311884. * pow(sh, 5) - 219753. * pow(sh, 6) +
                    97149. * pow(sh, 7) - 27453. * pow(sh, 8) +
                    4830. * pow(sh, 9) - 483. * pow(sh, 10) + 21. * pow(sh, 11))\
      + 0.00062708210856359 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 3)*
                    (-2.9602032e7 + 4.3918554e8 * sh -
                    1.183665042e9 * pow(sh, 2) - 4.124801388e9 * pow(sh, 3) +
                    2.9786749451e10 * pow(sh, 4) -
                    7.6073083277e10 * pow(sh, 5) +
                    1.12343648214e11 * pow(sh, 6) -
                    1.08358670795e11 * pow(sh, 7) +
                    7.1769426953e10 * pow(sh, 8) -
                    3.3301199019e10 * pow(sh, 9) +
                    1.0824913791e10 * pow(sh, 10) -
                    2.416552923e9 * pow(sh, 11) +
                    3.53029242e8 * pow(sh, 12) - 3.0393246e7 * pow(sh, 13) +
                    1.168971e6 * pow(sh, 14)) -
                    48.423280423280424 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 3)*(-112. + 5446. * sh - 40068. * pow(sh, 2) +
                    45402. * pow(sh, 3) + 481386. * pow(sh, 4) -
                    2.416545e6 * pow(sh, 5) + 5.68308e6 * pow(sh, 6) -
                    8.356089e6 * pow(sh, 7) + 8.410689e6 * pow(sh, 8) -
                    6.034798e6 * pow(sh, 9) + 3.142636e6 * pow(sh, 10) -
                    1.191618e6 * pow(sh, 11) + 325686. * pow(sh, 12) -
                    62481. * pow(sh, 13) + 7980. * pow(sh, 14) -
                    609. * pow(sh, 15) + 21. * pow(sh, 16)) +
                    0.02821869488536155 * Li2sh * pow(-1 + sh, -10) * pow(sh, -9)*
                    (-288288. + 2.873871e6 * sh - 1.2889503e7 * pow(sh, 2) +
                    3.423222e7 * pow(sh, 3) - 5.956146e7 * pow(sh, 4) +
                    7.0825482e7 * pow(sh, 5) - 5.8121154e7 * pow(sh, 6) +
                    3.2324292e7 * pow(sh, 7) - 1.153152e7 * pow(sh, 8) +
                    2.327611e6 * pow(sh, 9) - 186043. * pow(sh, 10) -
                    252. * pow(sh, 15) + 54. * pow(sh, 16) + 18. * pow(sh, 17))\
      - Lsh * (-1271.111111111111 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -7) - 16.141093474426807 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(552. - 6504. * sh + 954. * pow(sh, 2) +
                    96534. * pow(sh, 3) - 256765. * pow(sh, 4) +
                    311884. * pow(sh, 5) - 219753. * pow(sh, 6) +
                    97149. * pow(sh, 7) - 27453. * pow(sh, 8) +
                    4830. * pow(sh, 9) - 483. * pow(sh, 10) +
                    21. * pow(sh, 11)) +
                    9.331578996481995e-7 * pow(-1 + sh, -11) * pow(sh, -16)*
                    (24990. - 21315. * sh - 1.15923e6 * pow(sh, 2) -
                    3.54162e6 * pow(sh, 3) + 2.396436e6 * pow(sh, 4) +
                    2.6605446e7 * pow(sh, 5) + 2.5110204e7 * pow(sh, 6) -
                    4.6121470412e10 * pow(sh, 7) +
                    5.06007096796e11 * pow(sh, 8) -
                    2.5214921261e12 * pow(sh, 9) +
                    1.135134e9 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 8) * pow(sh, 9) +
                    7.515033973326e12 * pow(sh, 10) -
                    1.4885226217656e13 * pow(sh, 11) +
                    2.0578551617862e13 * pow(sh, 12) -
                    2.0264715219756e13 * pow(sh, 13) +
                    1.4215757817264e13 * pow(sh, 14) -
                    6.963287491704e12 * pow(sh, 15) +
                    2.269595684207e12 * pow(sh, 16) -
                    4.4385323008e11 * pow(sh, 17) -
                    30240. * Lshb * (-1. + sh) * pow(sh, 7)*
                    (-288288. + 2.873871e6 * sh -
                    1.2889503e7 * pow(sh, 2) +
                    3.423222e7 * pow(sh, 3) - 5.956146e7 * pow(sh, 4) +
                    7.0825482e7 * pow(sh, 5) -
                    5.8121154e7 * pow(sh, 6) +
                    3.2324292e7 * pow(sh, 7) -
                    1.153152e7 * pow(sh, 8) + 2.327611e6 * pow(sh, 9) -
                    186043. * pow(sh, 10) - 252. * pow(sh, 15) +
                    54. * pow(sh, 16) + 18. * pow(sh, 17)) +
                    3.9661774136e10 * pow(sh, 18) +
                    8.107722e7 * pow(sh, 19) - 2.4528798e7 * pow(sh, 20) -
                    2.4018498e7 * pow(sh, 21) + 3.225852e6 * pow(sh, 22) +
                    2.9835e6 * pow(sh, 23) - 343845. * pow(sh, 24) -
                    18225. * pow(sh, 25))) -
                    0.0005878894767783657 * pow(Lsh, 2) * pow(-1 + sh, -11) *
                    pow(sh, -16)*(168. + 1302. * sh + 2760. * pow(sh, 2) -
                    4440. * pow(sh, 3) - 27552. * pow(sh, 4) -
                    26796. * pow(sh, 5) + 59136. * pow(sh, 6) +
                    8.709724e7 * pow(sh, 7) - 9.61414058e8 * pow(sh, 8) +
                    4.834002949e9 * pow(sh, 9) -
                    1.08108e6 * Lshb * pow(-1 + sh, 8) * pow(sh, 9) -
                    1.4570114508e10 * pow(sh, 10) +
                    2.922310728e10 * pow(sh, 11) -
                    4.0941204696e10 * pow(sh, 12) +
                    4.087575366e10 * pow(sh, 13) -
                    2.9075948544e10 * pow(sh, 14) +
                    1.443451164e10 * pow(sh, 15) -
                    4.759554808e9 * pow(sh, 16) +
                    9.37068023e8 * pow(sh, 17) - 8.3312536e7 * pow(sh, 18) +
                    6048. * pow(sh, 22) - 7344. * pow(sh, 23) +
                    864. * pow(sh, 24) + 432. * pow(sh, 25)) -
                    0.00029394473838918284 * pow(lz, 2) * pow(sh, -16)*
                    (-84. - 1575. * sh - 14085. * pow(sh, 2) -
                    79950. * pow(sh, 3) - 323154. * pow(sh, 4) -
                    987129. * pow(sh, 5) - 2.347059e6 * pow(sh, 6) -
                    1.78300736e8 * pow(sh, 7) + 2.7027e6 * pow(sh, 8) -
                    473685. * pow(sh, 9) + 1.243629e6 * pow(sh, 10) +
                    2.698722e6 * pow(sh, 11) + 2.985906e6 * pow(sh, 12) +
                    2.433285e6 * pow(sh, 13) + 1.388619e6 * pow(sh, 14) +
                    84. * pow(sh, 15) + 4.25568e6 * pow(sh, 16) +
                    4.612608e6 * pow(sh, 17) + 5.189184e6 * pow(sh, 18) +
                    7.605312e6 * pow(sh, 19) - 6.1281792e7 * pow(sh, 20) +
                    2.75438592e8 * pow(sh, 21) + 8.71398528e8 * pow(sh, 22) -
                    5.028236928e9 * pow(sh, 23) +
                    8.99602704e9 * pow(sh, 24) -
                    8.653636992e9 * pow(sh, 25) +
                    5.137333344e9 * pow(sh, 26) -
                    1.978438176e9 * pow(sh, 27) +
                    4.97379168e8 * pow(sh, 28) - 7.8990912e7 * pow(sh, 29) +
                    7.2072e6 * pow(sh, 30) - 288288. * pow(sh, 31)) -
                    lz * (32540.444444444445 * lmu * pow(sh, -9) +
                    635.5555555555555 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -7) - 32.282186948853614 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(552. - 6504. * sh + 954. * pow(sh, 2) +
                    96534. * pow(sh, 3) - 256765. * pow(sh, 4) +
                    311884. * pow(sh, 5) - 219753. * pow(sh, 6) +
                    97149. * pow(sh, 7) - 27453. * pow(sh, 8) +
                    4830. * pow(sh, 9) - 483. * pow(sh, 10) +
                    21. * pow(sh, 11)) +
                    0.0011757789535567313 * Lsh * pow(-1 + sh, -10) *
                    pow(sh, -16)*(84. + 735. * sh + 2115. * pow(sh, 2) -
                    105. * pow(sh, 3) - 13881. * pow(sh, 4) -
                    27279. * pow(sh, 5) + 2289. * pow(sh, 6) +
                    8.7045013e7 * pow(sh, 7) - 8.74124185e8 * pow(sh, 8) +
                    3.955482141e9 * pow(sh, 9) -
                    1.0600174539e10 * pow(sh, 10) +
                    1.8626345409e10 * pow(sh, 11) -
                    2.2429329447e10 * pow(sh, 12) +
                    1.8752939835e10 * pow(sh, 13) -
                    1.0757383293e10 * pow(sh, 14) +
                    4.056843039e9 * pow(sh, 15) -
                    9.10168681e8 * pow(sh, 16) +
                    9.2636188e7 * pow(sh, 17) + 75600. * pow(sh, 18) +
                    9072. * pow(sh, 19) - 22680. * pow(sh, 20) -
                    9828. * pow(sh, 21) - 2268. * pow(sh, 22) +
                    2484. * pow(sh, 23) + 54. * pow(sh, 24)) +
                    3.2627898589097882e-9 * pow(-1 + sh, -9) * pow(sh, -16)*
                    (-3.57357e6 - 4.099095e6 * sh +
                    1.6114527e8 * pow(sh, 2) + 8.32841295e8 * pow(sh, 3) +
                    1.161846972e9 * pow(sh, 4) -
                    2.313726129e9 * pow(sh, 5) -
                    9.380058402e9 * pow(sh, 6) +
                    1.3161069788009e13 * pow(sh, 7) -
                    1.20977154695826e14 * pow(sh, 8) +
                    4.94447733407199e14 * pow(sh, 9) -
                    1.180536055693566e15 * pow(sh, 10) +
                    1.818479082421521e15 * pow(sh, 11) -
                    1.879273746539124e15 * pow(sh, 12) +
                    1.307997164466393e15 * pow(sh, 13) -
                    5.94838522786482e14 * pow(sh, 14) +
                    1.62091018204671e14 * pow(sh, 15) -
                    2.194598322815e13 * pow(sh, 16) +
                    9.520266140208e12 * pow(sh, 17) -
                    3.1476144603672e13 * pow(sh, 18) +
                    6.08108801358e13 * pow(sh, 19) -
                    8.0522179628688e13 * pow(sh, 20) +
                    7.1735262216768e13 * pow(sh, 21) +
                    1.85972284144884e14 * pow(sh, 22) -
                    1.24257330785952e15 * pow(sh, 23) +
                    1.516348491395922e15 * pow(sh, 24) +
                    9.623404446386016e15 * pow(sh, 25) -
                    5.409785863372176e16 * pow(sh, 26) +
                    1.4651551524606797e17 * pow(sh, 27) -
                    2.639914855668742e17 * pow(sh, 28) +
                    3.46785263569046e17 * pow(sh, 29) -
                    3.4581010205224454e17 * pow(sh, 30) +
                    2.67102371124581e17 * pow(sh, 31) -
                    1.612804363486636e17 * pow(sh, 32) +
                    7.625393556018638e16 * pow(sh, 33) -
                    2.809203040360517e16 * pow(sh, 34) +
                    7.968174811781184e15 * pow(sh, 35) -
                    1.704011763662208e15 * pow(sh, 36) +
                    2.65362784294608e14 * pow(sh, 37) -
                    2.836102317048e13 * pow(sh, 38) +
                    1.857724700832e12 * pow(sh, 39) -
                    5.6166718608e10 * pow(sh, 40))) -
                    1.3581376369088363e-14 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (-1.522039519e11 + 4.26276275425e11 * sh +
                    3.315607505925e12 * pow(sh, 2) -
                    1.9935815474575e13 * pow(sh, 3) -
                    1.24680380503679e14 * pow(sh, 4) -
                    9.4734104241777e13 * pow(sh, 5) +
                    6.72219759402191e14 * pow(sh, 6) +
                    2.6103747782620196e18 * pow(sh, 7) -
                    2.5573475986293776e19 * pow(sh, 8) +
                    1.1271511598880529e20 * pow(sh, 9) -
                    2.943261559227364e20 * pow(sh, 10) +
                    5.045168745362524e20 * pow(sh, 11) -
                    5.941440025879828e20 * pow(sh, 12) +
                    4.8854165231351536e20 * pow(sh, 13) -
                    2.7897519097641733e20 * pow(sh, 14) +
                    1.0745710257767067e20 * pow(sh, 15) -
                    2.6239676246066704e19 * pow(sh, 16) +
                    5.344996730119183e18 * pow(sh, 17) -
                    8.145618788181729e18 * pow(sh, 18) +
                    1.8132101139625396e19 * pow(sh, 19) -
                    2.789986937416512e19 * pow(sh, 20) +
                    2.916708794791665e19 * pow(sh, 21) +
                    4.506612585214779e19 * pow(sh, 22) -
                    3.9814881989842764e20 * pow(sh, 23) +
                    7.61642854944141e20 * pow(sh, 24) +
                    1.912231127650318e21 * pow(sh, 25) -
                    1.5547276029752026e22 * pow(sh, 26) +
                    4.875241535562659e22 * pow(sh, 27) -
                    9.909337425361018e22 * pow(sh, 28) +
                    1.4647795672750128e23 * pow(sh, 29) -
                    1.651330016200192e23 * pow(sh, 30) +
                    1.453924699389752e23 * pow(sh, 31) -
                    1.011735575962528e23 * pow(sh, 32) +
                    5.58883301567305e22 * pow(sh, 33) -
                    2.447160559972393e22 * pow(sh, 34) +
                    8.433457866753118e21 * pow(sh, 35) -
                    2.2566304052798968e21 * pow(sh, 36) +
                    4.585243554016694e20 * pow(sh, 37) -
                    6.826335499960051e19 * pow(sh, 38) +
                    7.011890262150629e18 * pow(sh, 39) -
                    4.434709029248097e17 * pow(sh, 40) +
                    1.2998152420597344e16 * pow(sh, 41) -
                    4.32864432e10 * pow(3.141592653589793, 2)*
                    (-84. - 735. * sh - 2115. * pow(sh, 2) +
                    105. * pow(sh, 3) + 13881. * pow(sh, 4) +
                    27279. * pow(sh, 5) - 2289. * pow(sh, 6) -
                    7.2918901e7 * pow(sh, 7) + 7.30592797e8 * pow(sh, 8) -
                    3.297157631e9 * pow(sh, 9) +
                    8.805108353e9 * pow(sh, 10) -
                    1.5403793139e10 * pow(sh, 11) +
                    1.8449564077e10 * pow(sh, 12) -
                    1.5329503273e10 * pow(sh, 13) +
                    8.733035583e9 * pow(sh, 14) -
                    3.270393893e9 * pow(sh, 15) +
                    7.28627507e8 * pow(sh, 16) -
                    6.571293e7 * pow(sh, 17) - 3.2675014e7 * pow(sh, 18) +
                    7.242013e7 * pow(sh, 19) - 7.6735758e7 * pow(sh, 20) -
                    2.40223726e8 * pow(sh, 21) +
                    1.627847962e9 * pow(sh, 22) -
                    2.273776974e9 * pow(sh, 23) -
                    1.712105386e10 * pow(sh, 24) +
                    1.18341944808e11 * pow(sh, 25) -
                    3.9995878208e11 * pow(sh, 26) +
                    9.10773328608e11 * pow(sh, 27) -
                    1.531097366656e12 * pow(sh, 28) +
                    1.98076916752e12 * pow(sh, 29) -
                    2.016366553344e12 * pow(sh, 30) +
                    1.634962897568e12 * pow(sh, 31) -
                    1.06202452928e12 * pow(sh, 32) +
                    5.53053223008e11 * pow(sh, 33) -
                    2.30009473408e11 * pow(sh, 34) +
                    7.5735678304e10 * pow(sh, 35) -
                    1.945628256e10 * pow(sh, 36) +
                    3.810741792e9 * pow(sh, 37) -
                    5.48735616e8 * pow(sh, 38) +
                    5.4678624e7 * pow(sh, 39) - 3.36336e6 * pow(sh, 40) +
                    96096. * pow(sh, 41)))) * pow(z, 9);
            else
                res += pow(z, 9)*(-531170.0836599696 -
                    5.221397600319266e6 * (1. - sh) -
                    2.50820565037545e7 * pow(1. - sh, 2) -
                    8.849720248983555e7 * pow(1. - sh, 3) +
                    log(muh)*(-39253.5139329806 -
                    385822.06984126987 * (1. - sh) -
                    2.075542349206349e6 * pow(1. - sh, 2) -
                    8.098428613756614e6 * pow(1. - sh, 3) -
                    2.5637579174603175e7 * pow(1. - sh, 4)) -
                    2.6309546792497513e8 * pow(1. - sh, 4) +
                    log(z)*(75507.81523340371 +
                    370284.8608070748 * (1. - sh) +
                    2.8644751808652747e6 * pow(1. - sh, 2) +
                    1.3385139112281743e7 * pow(1. - sh, 3) +
                    log(muh)*(-32540.444444444445 -
                    292864. * (1. - sh) -
                    1.46432e6 * pow(1. - sh, 2) -
                    5.369173333333333e6 * pow(1. - sh, 3) -
                    1.610752e7 * pow(1. - sh, 4)) +
                    4.39338775383846e7 * pow(1. - sh, 4)) +
                    (48060.242210464436 + 446131.6613756614 * (1. - sh) +
                    2.3941590476190476e6 * pow(1. - sh, 2) +
                    8.828220007054674e6 * pow(1. - sh, 3) +
                    2.6455532740740743e7 * pow(1. - sh, 4)) *
                    pow(log(z), 2));
        }

        if (19 <= maxpow) {
            if (sh < .900001)
                res += 4.0250146484590727e-7 * pow(3.141592653589793, 2) * pow(sh, -17)*
                (109395. + 2.16216e6 * sh + 2.0430696e7 * pow(sh, 2) +
                    1.22866128e8 * pow(sh, 3) + 5.27900436e8 * pow(sh, 4) +
                    1.72236568e9 * pow(sh, 5) + 4.41295356e9 * pow(sh, 6) +
                    8.96714376e9 * pow(sh, 7) + 1.385377093e10 * pow(sh, 8) +
                    8.96714376e9 * pow(sh, 9) + 4.41295356e9 * pow(sh, 10) +
                    1.72236568e9 * pow(sh, 11) + 5.27900436e8 * pow(sh, 12) +
                    1.22866128e8 * pow(sh, 13) + 2.0430696e7 * pow(sh, 14) +
                    2.16216e6 * pow(sh, 15) + 109395. * pow(sh, 16)) * pow(z, 9.5);
            else
                res += (180375.25585144534 + 1.6233773026630078e6 * (1. - sh) +
                    8.333336820336774e6 * pow(1. - sh, 2) +
                    3.192642028570582e7 * pow(1. - sh, 3) +
                    1.0132579997454941e8 * pow(1. - sh, 4)) * pow(z, 9.5);
        }

        if (20 <= maxpow) {
            if (sh < .900001)
                res += (-1. * lmu * (134616.0761904762 * pow(sh, -10) -
                    109824. * Lsh * pow(sh, -10)) +
                    4617.798054844007 * pow(-1 + sh, -3) * pow(sh, -8) -
                    3841.58024691358 * Li3sh * pow(-1 + sh, -3) * pow(sh, -8) +
                    1280.5267489711935 * pow(Lsh, 3) * pow(-1 + sh, -3) *
                    pow(sh, -8) - 36.317460317460316 * cl2 * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(72. - 4364. * sh + 28750. * pow(sh, 2) +
                    23168. * pow(sh, 3) - 476659. * pow(sh, 4) +
                    1.255353e6 * pow(sh, 5) - 1.649661e6 * pow(sh, 6) +
                    1.316274e6 * pow(sh, 7) - 686175. * pow(sh, 8) +
                    239883. * pow(sh, 9) - 55951. * pow(sh, 10) +
                    8372. * pow(sh, 11) - 728. * pow(sh, 12) + 28. * pow(sh, 13))
                    - 0.005643738977072311 * ash * sqrt4sh * sqrtsh *
                    pow(-1 + sh, -3) * pow(sh, 3)*
                    (-1.003446e6 + 6.399262e7 * sh -
                    5.88476654e8 * pow(sh, 2) + 1.052685443e9 * pow(sh, 3) +
                    6.558619027e9 * pow(sh, 4) -
                    3.9015984112e10 * pow(sh, 5) +
                    9.831642973e10 * pow(sh, 6) -
                    1.5050270954e11 * pow(sh, 7) +
                    1.55340604554e11 * pow(sh, 8) -
                    1.13220265218e11 * pow(sh, 9) +
                    5.9521934912e10 * pow(sh, 10) -
                    2.2692174847e10 * pow(sh, 11) +
                    6.219574195e9 * pow(sh, 12) -
                    1.194652762e9 * pow(sh, 13) + 1.5263422e8 * pow(sh, 14) -
                    1.1648401e7 * pow(sh, 15) + 401669. * pow(sh, 16)) +
                    108.95238095238095 * pow(ash, 2) * pow(-1 + sh, -4) *
                    pow(sh, 4)*(1638. - 34902. * sh + 187614. * pow(sh, 2) -
                    73296. * pow(sh, 3) - 2.717613e6 * pow(sh, 4) +
                    1.2278721e7 * pow(sh, 5) - 2.8715127e7 * pow(sh, 6) +
                    4.3584072e7 * pow(sh, 7) - 4.6464222e7 * pow(sh, 8) +
                    3.6125334e7 * pow(sh, 9) - 2.0866662e7 * pow(sh, 10) +
                    9.012312e6 * pow(sh, 11) - 2.899701e6 * pow(sh, 12) +
                    684873. * pow(sh, 13) - 115255. * pow(sh, 14) +
                    13076. * pow(sh, 15) - 896. * pow(sh, 16) + 28. * pow(sh, 17)
                    ) + 0.007054673721340388 * Li2sh * pow(-1 + sh, -11) *
                    pow(sh, -10)*(3.891888e6 - 4.2698656e7 * sh +
                    2.12860648e8 * pow(sh, 2) - 6.36197562e8 * pow(sh, 3) +
                    1.265813472e9 * pow(sh, 4) - 1.758542016e9 * pow(sh, 5) +
                    1.737624672e9 * pow(sh, 6) - 1.217575632e9 * pow(sh, 7) +
                    5.89815408e8 * pow(sh, 8) - 1.86234048e8 * pow(sh, 9) +
                    3.3715396e7 * pow(sh, 10) - 2.523664e6 * pow(sh, 11) -
                    1008. * pow(sh, 17) + 252. * pow(sh, 18) + 63. * pow(sh, 19))
                    - Lsh * (-3841.58024691358 * Li2sh * pow(-1 + sh, -3) *
                    pow(sh, -8) + 36.317460317460316 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(72. - 4364. * sh + 28750. * pow(sh, 2) +
                    23168. * pow(sh, 3) - 476659. * pow(sh, 4) +
                    1.255353e6 * pow(sh, 5) - 1.649661e6 * pow(sh, 6) +
                    1.316274e6 * pow(sh, 7) - 686175. * pow(sh, 8) +
                    239883. * pow(sh, 9) - 55951. * pow(sh, 10) +
                    8372. * pow(sh, 11) - 728. * pow(sh, 12) +
                    28. * pow(sh, 13)) +
                    6.22105266432133e-8 * pow(-1 + sh, -12) * pow(sh, -18)*
                    (-268128. + 217952. * sh + 1.5087492e7 * pow(sh, 2) +
                    5.5721052e7 * pow(sh, 3) - 6.214128e6 * pow(sh, 4) -
                    4.11907536e8 * pow(sh, 5) -
                    6.39424296e8 * pow(sh, 6) +
                    9.51140904e8 * pow(sh, 7) +
                    2.797636941792e12 * pow(sh, 8) -
                    3.3528009426912e13 * pow(sh, 9) +
                    1.8405229744577e14 * pow(sh, 10) +
                    5.1459408e10 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 9) * pow(sh, 10) -
                    6.11232376478328e14 * pow(sh, 11) +
                    1.367454094140762e15 * pow(sh, 12) -
                    2.171310899030364e15 * pow(sh, 13) +
                    2.509372042935534e15 * pow(sh, 14) -
                    2.126984603171022e15 * pow(sh, 15) +
                    1.312509475395804e15 * pow(sh, 16) -
                    5.75196391765836e14 * pow(sh, 17) +
                    1.70043077466117e14 * pow(sh, 18) -
                    3.0485673234577e13 * pow(sh, 19) -
                    113400. * Lshb * (-1. + sh) * pow(sh, 8)*
                    (3.891888e6 - 4.2698656e7 * sh +
                    2.12860648e8 * pow(sh, 2) -
                    6.36197562e8 * pow(sh, 3) +
                    1.265813472e9 * pow(sh, 4) -
                    1.758542016e9 * pow(sh, 5) +
                    1.737624672e9 * pow(sh, 6) -
                    1.217575632e9 * pow(sh, 7) +
                    5.89815408e8 * pow(sh, 8) -
                    1.86234048e8 * pow(sh, 9) +
                    3.3715396e7 * pow(sh, 10) -
                    2.523664e6 * pow(sh, 11) - 1008. * pow(sh, 17) +
                    252. * pow(sh, 18) + 63. * pow(sh, 19)) +
                    2.505502772136e12 * pow(sh, 20) +
                    3.810922668e9 * pow(sh, 21) +
                    9.25325478e8 * pow(sh, 22) -
                    6.18090102e8 * pow(sh, 23) -
                    3.71771532e8 * pow(sh, 24) + 7.86267e7 * pow(sh, 25) +
                    4.1725125e7 * pow(sh, 26) - 4.8951e6 * pow(sh, 27) -
                    187425. * pow(sh, 28))) -
                    0.00007838526357044875 * pow(Lsh, 2) * pow(-1 + sh, -12) *
                    pow(sh, -18)*(-1008. - 8848. * sh - 23688. * pow(sh, 2) +
                    17352. * pow(sh, 3) + 212592. * pow(sh, 4) +
                    311184. * pow(sh, 5) - 400176. * pow(sh, 6) -
                    1.492176e6 * pow(sh, 7) - 2.343842424e9 * pow(sh, 8) +
                    2.82465414e10 * pow(sh, 9) -
                    1.56076722399e11 * pow(sh, 10) -
                    2.450448e7 * Lshb * pow(-1 + sh, 9) * pow(sh, 10) +
                    5.22413429229e11 * pow(sh, 11) -
                    1.178919945486e12 * pow(sh, 12) +
                    1.88907310284e12 * pow(sh, 13) -
                    2.203548370128e12 * pow(sh, 14) +
                    1.885005025848e12 * pow(sh, 15) -
                    1.173372074448e12 * pow(sh, 16) +
                    5.18137391592e11 * pow(sh, 17) -
                    1.53980764326e11 * pow(sh, 18) +
                    2.7628439638e10 * pow(sh, 19) -
                    2.260854288e9 * pow(sh, 20) + 45360. * pow(sh, 25) -
                    56700. * pow(sh, 26) + 8505. * pow(sh, 27) +
                    2835. * pow(sh, 28)) -
                    0.00007838526357044875 * pow(lz, 2) * pow(sh, -18)*
                    (-252. - 5236. * sh - 52122. * pow(sh, 2) -
                    330990. * pow(sh, 3) - 1.50586e6 * pow(sh, 4) -
                    5.221788e6 * pow(sh, 5) - 1.4306214e7 * pow(sh, 6) -
                    3.1500898e7 * pow(sh, 7) - 2.399232528e9 * pow(sh, 8) +
                    3.675672e7 * pow(sh, 9) - 1.1865305e7 * pow(sh, 10) +
                    7.819275e6 * pow(sh, 11) + 2.920308e7 * pow(sh, 12) +
                    3.763735e7 * pow(sh, 13) + 3.5618775e7 * pow(sh, 14) +
                    2.7424047e7 * pow(sh, 15) + 1.5311086e7 * pow(sh, 16) +
                    252. * pow(sh, 17) + 5.397678e7 * pow(sh, 18) +
                    5.722002e7 * pow(sh, 19) + 6.231654e7 * pow(sh, 20) +
                    6.996132e7 * pow(sh, 21) + 2.7057888e8 * pow(sh, 22) -
                    3.18810492e9 * pow(sh, 23) + 7.5729654e9 * pow(sh, 24) +
                    4.194296964e10 * pow(sh, 25) -
                    2.0547002619e11 * pow(sh, 26) +
                    3.8218629735e11 * pow(sh, 27) -
                    4.0430890071e11 * pow(sh, 28) +
                    2.7416659842e11 * pow(sh, 29) -
                    1.2521582073e11 * pow(sh, 30) +
                    3.911266359e10 * pow(sh, 31) -
                    8.26458633e9 * pow(sh, 32) + 1.13189076e9 * pow(sh, 33) -
                    9.081072e7 * pow(sh, 34) + 3.24324e6 * pow(sh, 35)) -
                    lz * (109824. * lmu * pow(sh, -10) +
                    1920.79012345679 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -8) + 72.63492063492063 * ash * sqrt4sh * sqrtsh *
                    pow(sh, 3)*(72. - 4364. * sh + 28750. * pow(sh, 2) +
                    23168. * pow(sh, 3) - 476659. * pow(sh, 4) +
                    1.255353e6 * pow(sh, 5) - 1.649661e6 * pow(sh, 6) +
                    1.316274e6 * pow(sh, 7) - 686175. * pow(sh, 8) +
                    239883. * pow(sh, 9) - 55951. * pow(sh, 10) +
                    8372. * pow(sh, 11) - 728. * pow(sh, 12) +
                    28. * pow(sh, 13)) +
                    0.0001567705271408975 * Lsh * pow(-1 + sh, -11) *
                    pow(sh, -18)*(-504. - 4928. * sh - 16772. * pow(sh, 2) -
                    8096. * pow(sh, 3) + 98200. * pow(sh, 4) +
                    253792. * pow(sh, 5) + 53704. * pow(sh, 6) -
                    692384. * pow(sh, 7) - 2.34466232e9 * pow(sh, 8) +
                    2.5895265088e10 * pow(sh, 9) -
                    1.30081243153e11 * pow(sh, 10) +
                    3.91980399854e11 * pow(sh, 11) -
                    7.87080144424e11 * pow(sh, 12) +
                    1.105852892984e12 * pow(sh, 13) -
                    1.109622439576e12 * pow(sh, 14) +
                    7.95460832936e11 * pow(sh, 15) -
                    3.99495040168e11 * pow(sh, 16) +
                    1.33989748088e11 * pow(sh, 17) -
                    2.7053178394e10 * pow(sh, 18) +
                    2.494260648e9 * pow(sh, 19) + 864864. * pow(sh, 20) +
                    769608. * pow(sh, 21) - 13608. * pow(sh, 22) -
                    222264. * pow(sh, 23) - 69120. * pow(sh, 24) -
                    9000. * pow(sh, 25) + 19215. * pow(sh, 26) +
                    315. * pow(sh, 27)) +
                    2.5590508697331672e-11 * pow(-1 + sh, -10) * pow(sh, -18)*
                    (3.25909584e8 + 3.86898512e8 * sh -
                    1.7890959086e10 * pow(sh, 2) -
                    1.0389775539e11 * pow(sh, 3) -
                    1.8235127911e11 * pow(sh, 4) +
                    2.39868807178e11 * pow(sh, 5) +
                    1.439309125254e12 * pow(sh, 6) +
                    1.482637674518e12 * pow(sh, 7) -
                    6.794302525868858e15 * pow(sh, 8) +
                    6.901772268373983e16 * pow(sh, 9) -
                    3.158878275063268e17 * pow(sh, 10) +
                    8.578247944222483e17 * pow(sh, 11) -
                    1.5323085794390446e18 * pow(sh, 12) +
                    1.8841304231440591e18 * pow(sh, 13) -
                    1.6184014070975416e18 * pow(sh, 14) +
                    9.617660963186045e17 * pow(sh, 15) -
                    3.8015225593619155e17 * pow(sh, 16) +
                    9.092524285521288e16 * pow(sh, 17) -
                    9.590076560304648e15 * pow(sh, 18) -
                    4.556468500926695e15 * pow(sh, 19) +
                    1.7572146654042552e16 * pow(sh, 20) -
                    3.9615878221273704e16 * pow(sh, 21) +
                    5.638676809242492e16 * pow(sh, 22) -
                    4.406121643569693e16 * pow(sh, 23) +
                    3.2318412281568824e16 * pow(sh, 24) -
                    4.259492022110168e17 * pow(sh, 25) +
                    2.1201430825186813e18 * pow(sh, 26) -
                    2.4923037486423537e18 * pow(sh, 27) -
                    1.7838580318483542e19 * pow(sh, 28) +
                    1.0701104247446746e20 * pow(sh, 29) -
                    3.1929857696090705e20 * pow(sh, 30) +
                    6.474487284281146e20 * pow(sh, 31) -
                    9.760291519177703e20 * pow(sh, 32) +
                    1.1392452492311442e21 * pow(sh, 33) -
                    1.0520263768751638e21 * pow(sh, 34) +
                    7.775724274489533e20 * pow(sh, 35) -
                    4.624318941820542e20 * pow(sh, 36) +
                    2.213656928475123e20 * pow(sh, 37) -
                    8.494727327998501e19 * pow(sh, 38) +
                    2.5900145606169035e19 * pow(sh, 39) -
                    6.181939718636802e18 * pow(sh, 40) +
                    1.1286121824774998e18 * pow(sh, 41) -
                    1.5195925385464826e17 * pow(sh, 42) +
                    1.420123992415128e16 * pow(sh, 43) -
                    8.2168151561496e14 * pow(sh, 44) +
                    2.214605244852e13 * pow(sh, 45))) -
                    4.177278391107532e-18 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (3.16414088198208e14 - 9.74539823921664e14 * sh -
                    8.087033764735926e15 * pow(sh, 2) +
                    5.684694862939435e16 * pow(sh, 3) +
                    4.0319420043801754e17 * pow(sh, 4) +
                    4.882604186351892e17 * pow(sh, 5) -
                    1.9325128069129482e18 * pow(sh, 6) -
                    6.292691026868566e18 * pow(sh, 7) -
                    2.4287339249894217e22 * pow(sh, 8) +
                    2.612488077307783e23 * pow(sh, 9) -
                    1.276336786564487e24 * pow(sh, 10) +
                    3.7407720820676834e24 * pow(sh, 11) -
                    7.312076867879097e24 * pow(sh, 12) +
                    1.0021549960712915e25 * pow(sh, 13) -
                    9.851452036875564e24 * pow(sh, 14) +
                    6.978601203194415e24 * pow(sh, 15) -
                    3.521127295712042e24 * pow(sh, 16) +
                    1.224012074235529e24 * pow(sh, 17) -
                    2.690422527577656e23 * pow(sh, 18) +
                    6.92847965398663e21 * pow(sh, 19) +
                    1.0487308963151102e23 * pow(sh, 20) -
                    2.7045906540143195e23 * pow(sh, 21) +
                    4.4609820546041925e23 * pow(sh, 22) -
                    4.3341866014896366e23 * pow(sh, 23) +
                    3.0284128932535685e23 * pow(sh, 24) -
                    2.8502065219122033e24 * pow(sh, 25) +
                    1.6744213714265902e25 * pow(sh, 26) -
                    3.4546092096924117e25 * pow(sh, 27) -
                    6.6958214497636675e25 * pow(sh, 28) +
                    6.719624033223081e26 * pow(sh, 29) -
                    2.3634332855143025e27 * pow(sh, 30) +
                    5.406861258181357e27 * pow(sh, 31) -
                    9.10419041097793e27 * pow(sh, 32) +
                    1.1865952156817548e28 * pow(sh, 33) -
                    1.2283961231268607e28 * pow(sh, 34) +
                    1.0245250602869844e28 * pow(sh, 35) -
                    6.935097181125567e27 * pow(sh, 36) +
                    3.819594455600949e27 * pow(sh, 37) -
                    1.7090015768187537e27 * pow(sh, 38) +
                    6.177750381749111e26 * pow(sh, 39) -
                    1.7862394817725466e26 * pow(sh, 40) +
                    4.0667139734465495e25 * pow(sh, 41) -
                    7.117942930727479e24 * pow(sh, 42) +
                    9.229373088621336e23 * pow(sh, 43) -
                    8.339200912205272e22 * pow(sh, 44) +
                    4.6814118287209613e21 * pow(sh, 45) -
                    1.2279937968685318e20 * pow(sh, 46) +
                    6.2548910424e12 * pow(3.141592653589793, 2)*
                    (-1512. - 14784. * sh - 50316. * pow(sh, 2) -
                    24288. * pow(sh, 3) + 294600. * pow(sh, 4) +
                    761376. * pow(sh, 5) + 161112. * pow(sh, 6) -
                    2.077152e6 * pow(sh, 7) - 5.96371776e9 * pow(sh, 8) +
                    6.5734816224e10 * pow(sh, 9) -
                    3.29439299647e11 * pow(sh, 10) +
                    9.89864674466e11 * pow(sh, 11) -
                    1.980655533976e12 * pow(sh, 12) +
                    2.77128605852e12 * pow(sh, 13) -
                    2.767417361128e12 * pow(sh, 14) +
                    1.973276912096e12 * pow(sh, 15) -
                    9.85353747448e11 * pow(sh, 16) +
                    3.28634709368e11 * pow(sh, 17) -
                    6.613484449e10 * pow(sh, 18) +
                    6.792399064e9 * pow(sh, 19) -
                    3.03847082e9 * pow(sh, 20) +
                    7.83321994e9 * pow(sh, 21) -
                    1.36334135e10 * pow(sh, 22) +
                    2.612527414e10 * pow(sh, 23) -
                    1.2043334018e11 * pow(sh, 24) +
                    5.11152445252e11 * pow(sh, 25) -
                    7.00772118731e11 * pow(sh, 26) -
                    5.082162807869e12 * pow(sh, 27) +
                    3.7496386828908e13 * pow(sh, 28) -
                    1.3686666259266e14 * pow(sh, 29) +
                    3.4205865415722e14 * pow(sh, 30) -
                    6.4118721989322e14 * pow(sh, 31) +
                    9.3979081997658e14 * pow(sh, 32) -
                    1.10202690808782e15 * pow(sh, 33) +
                    1.04788397968254e15 * pow(sh, 34) -
                    8.141721939351e14 * pow(sh, 35) +
                    5.1869434238622e14 * pow(sh, 36) -
                    2.7096438795426e14 * pow(sh, 37) +
                    1.1569642322238e14 * pow(sh, 38) -
                    4.010774591538e13 * pow(sh, 39) +
                    1.116674149734e13 * pow(sh, 40) -
                    2.4564705165e12 * pow(sh, 41) +
                    4.1666228604e11 * pow(sh, 42) -
                    5.249021778e10 * pow(sh, 43) +
                    4.61837376e9 * pow(sh, 44) -
                    2.5297272e8 * pow(sh, 45) + 6.48648e6 * pow(sh, 46)))) *
                pow(z, 10);
            else
                res += pow(z, 10)*(-1.8827679840714834e6 -
                    2.081717517867475e7 * (1. - sh) -
                    1.0963380905010003e8 * pow(1. - sh, 2) -
                    4.219709458628686e8 * pow(1. - sh, 3) +
                    log(muh)*(-134616.0761904762 -
                    1.455984761904762e6 * (1. - sh) -
                    8.55703619047619e6 * pow(1. - sh, 2) -
                    3.624158476190476e7 * pow(1. - sh, 3) -
                    1.2382547047619048e8 * pow(1. - sh, 4)) -
                    1.3631906422358756e9 * pow(1. - sh, 4) +
                    log(z)*(294861.71513582155 +
                    1.5577045832132744e6 * (1. - sh) +
                    1.3273873434568334e7 * pow(1. - sh, 2) +
                    6.637266945174166e7 * pow(1. - sh, 3) +
                    log(muh)*(-109824. - 1.09824e6 * (1. - sh) -
                    6.04032e6 * pow(1. - sh, 2) -
                    2.416128e7 * pow(1. - sh, 3) -
                    7.852416e7 * pow(1. - sh, 4)) +
                    2.3142944320276135e8 * pow(1. - sh, 4)) +
                    (171022.4 + 1.777716148148148e6 * (1. - sh) +
                    1.0547910696296297e7 * pow(1. - sh, 2) +
                    4.229024415943562e7 * pow(1. - sh, 3) +
                    1.3716763538765433e8 * pow(1. - sh, 4)) *
                    pow(log(z), 2));
        }
    }
    return res;
}

double F_2::F_29im(double muh, double z, double sh, int maxpow)
{
    double lz = log(z);
    double lmu = log(muh);
    double Lsh = log(sh);
    double Lshb = log(1. - sh);
    double Li2sh = real(Li2(sh));
    double Li3sh = real(Li3(sh));


    double res = 0;

    if (sh < 0.4) {
        res = -22.0299 - 1.241123023640412 * lmu + 0.620562 * Lsh -
                5.58505 * lz + 1.86168 * sh + 5.58505 * lz * sh + 97.2931 * z +
                33.5103 * lz * z + 184.792 * sh * z + 11.1701 * Lsh * sh * z +
                100.531 * lz * sh * z + 11.1701 * z * pow(lz, 2) +
                11.1701 * sh * z * pow(lz, 2) + 8.19141 * pow(sh, 2) +
                5.58505 * lz * pow(sh, 2) + 313.249 * z * pow(sh, 2) +
                22.3402 * Lsh * z * pow(sh, 2) + 156.3815 * lz * z * pow(sh, 2) +
                11.1701 * z * pow(lz, 2) * pow(sh, 2) + 10.3323 * pow(sh, 3) +
                5.58505 * lz * pow(sh, 3) + 459.887 * z * pow(sh, 3) +
                33.5103 * Lsh * z * pow(sh, 3) + 208.5085 * lz * z * pow(sh, 3) +
                11.1701 * z * pow(lz, 2) * pow(sh, 3) +
                0.0177303 * pow(sh, 3) * pow(z, -3) +
                0.11968 * pow(sh, 2) * pow(z, -2) -
                0.0221629 * pow(sh, 3) * pow(z, -2) + 1.11701 * sh * pow(z, -1) -
                0.372337 * pow(sh, 2) * pow(z, -1) -
                0.523045 * pow(sh, 3) * pow(z, -1) - 160.51 * pow(z, 2) +
                11.1701 * Lsh * pow(z, 2) + 44.68045 * lz * pow(z, 2) +
                22.3402 * Lsh * lz * pow(z, 2) - 396.864 * sh * pow(z, 2) +
                44.6804 * Lsh * sh * pow(z, 2) + 201.062 * lz * sh * pow(z, 2) +
                89.361 * Lsh * lz * sh * pow(z, 2) + 44.6805 * pow(lz, 2) * pow(z, 2) +
                122.87125 * sh * pow(lz, 2) * pow(z, 2) -
                652.279 * pow(sh, 2) * pow(z, 2) +
                134.041 * Lsh * pow(sh, 2) * pow(z, 2) +
                491.4845 * lz * pow(sh, 2) * pow(z, 2) +
                201.062 * Lsh * lz * pow(sh, 2) * pow(z, 2) +
                234.57225 * pow(lz, 2) * pow(sh, 2) * pow(z, 2) -
                890.889 * pow(sh, 3) * pow(z, 2) +
                297.87 * Lsh * pow(sh, 3) * pow(z, 2) +
                934.565 * lz * pow(sh, 3) * pow(z, 2) +
                357.4435 * Lsh * lz * pow(sh, 3) * pow(z, 2) +
                379.7825 * pow(lz, 2) * pow(sh, 3) * pow(z, 2) +
                142.135 * pow(z, 3) + 9.92898 * Lsh * pow(z, 3) -
                104.2545 * lz * pow(z, 3) - 29.78695 * Lsh * lz * pow(z, 3) +
                382.697 * sh * pow(z, 3) + 22.3402 * Lsh * sh * pow(z, 3) -
                402.124 * lz * sh * pow(z, 3) - 134.0415 * Lsh * lz * sh * pow(z, 3) +
                640.989 * pow(sh, 2) * pow(z, 3) -
                990.415 * lz * pow(sh, 2) * pow(z, 3) -
                357.4435 * Lsh * lz * pow(sh, 2) * pow(z, 3) +
                810.709 * pow(sh, 3) * pow(z, 3) -
                111.701 * Lsh * pow(sh, 3) * pow(z, 3) -
                1958.49 * lz * pow(sh, 3) * pow(z, 3) -
                744.675 * Lsh * lz * pow(sh, 3) * pow(z, 3);
    } else {
        if (0 <= maxpow) {
            if (sh < .900001)
                res += (21.099091401887005 * lmu +
                    0.310280755910103 * pow(-1 + sh, -2)*
                    (76. - 161. * sh + 67. * pow(sh, 2)) -
                    0.620561511820206 * Lsh * pow(-1 + sh, -3)*
                    (-8. + 33. * sh - 51. * pow(sh, 2) + 17. * pow(sh, 3))) *
                pow(z, 0);
            else
                res += (17.065441575055665 + 8.22244003161773 * (1. - sh) +
                    21.099091401887005 * log(muh) +
                    3.5992567685571952 * pow(1. - sh, 2) +
                    2.2133360588254014 * pow(1. - sh, 3) +
                    1.573566690686951 * pow(1. - sh, 4)) * pow(z, 0);
        }

        if (1 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (2 <= maxpow) {
            if (sh < .900001)
                res += (-107.41683587308312 * sh * pow(-1 + sh, -3) +
                    89.36085770210967 * Li3sh * sh * pow(-1 + sh, -3) -
                    11.170107212763709 * Li2sh * (-7. + 5. * sh) *
                    pow(-1 + sh, -3) - 7.446738141842472 * sh * pow(Lsh, 3) *
                    pow(-1 + sh, -3) + 22.340214425527417 * pow(Lsh, 2) *
                    pow(-1 + sh, -2) - Lsh *
                    (44.680428851054835 * Li2sh * sh * pow(-1 + sh, -3) +
                    11.170107212763709 * pow(-1 + sh, -3)*
                    (5. + Lshb * (-7. + 5. * sh) +
                    sh * (-3. + 2. * pow(3.141592653589793, 2)) -
                    pow(sh, 2))) +
                    1.861684535460618 * pow(-1 + sh, -3) * pow(sh, -1)*
                    (18. - sh * (60. + 11. * pow(3.141592653589793, 2)) +
                    (72. + 5. * pow(3.141592653589793, 2)) * pow(sh, 2) +
                    (-30. + 4. * pow(3.141592653589793, 2)) * pow(sh, 3))) *
                pow(z, 1);
            else
                res += (5.5716604023132 - 7.453434743876799 * (1. - sh) -
                    13.15061358913166 * pow(1. - sh, 2) -
                    16.48686093313114 * pow(1. - sh, 3) -
                    18.724591847033217 * pow(1. - sh, 4)) * pow(z, 1);
        }

        if (3 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (4 <= maxpow) {
            if (sh < .900001)
                res += (11.170107212763709 * Li2sh * (3. + 2. * sh) * pow(-1 + sh, -3) -
                    11.170107212763709 * pow(Lsh, 2) * pow(-1 + sh, -2) -
                    134.0412865531645 * lmu * pow(sh, -2) -
                    lz * (78.19075048934596 * Lsh * pow(-1 + sh, -3) -
                    5.585053606381854 * pow(-1 + sh, -2) * pow(sh, -2)*
                    (23. - 39. * sh + 30. * pow(sh, 2))) -
                    0.930842267730309 * pow(-1 + sh, -3) * pow(sh, -2)*
                    (-315. + 900. * sh +
                    (-957. + 6. * pow(3.141592653589793, 2)) * pow(sh, 2) +
                    4. * (78. + pow(3.141592653589793, 2)) * pow(sh, 3) +
                    24. * pow(sh, 4)) +
                    5.585053606381854 * Lsh * pow(-1 + sh, -4) * pow(sh, -2)*
                    (-25. + 87. * sh - (121. + 6. * Lshb) * pow(sh, 2) +
                    (67. + 2. * Lshb) * pow(sh, 3) +
                    2. * (-7. + 2. * Lshb) * pow(sh, 4))) * pow(z, 2);
            else
                res += (-255.36106211401477 - 376.7273797882516 * (1. - sh) -
                    438.1474554206565 * pow(1. - sh, 2) -
                    458.2075495484674 * pow(1. - sh, 3) +
                    log(muh)*(-134.0412865531645 -
                    268.082573106329 * (1. - sh) -
                    402.1238596594935 * pow(1. - sh, 2) -
                    536.165146212658 * pow(1. - sh, 3) -
                    670.2064327658226 * pow(1. - sh, 4)) -
                    446.58202617315146 * pow(1. - sh, 4) +
                    log(z)*(141.48802469500697 +
                    276.46015351590177 * (1. - sh) +
                    408.8259239871517 * pow(1. - sh, 2) +
                    539.8885152835793 * pow(1. - sh, 3) +
                    670.2064327658226 * pow(1. - sh, 4))) * pow(z, 2);
        }

        if (5 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (6 <= maxpow) {
            if (sh < .900001)
                res += (-178.72171540421934 * lmu * pow(sh, -3) -
                    22.340214425527417 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -1) + 7.446738141842472 * Li2sh * pow(-1 + sh, -4) *
                    pow(sh, -1)*(3. + sh + 2. * pow(sh, 2)) +
                    0.620561511820206 * Lsh * pow(-1 + sh, -5) * pow(sh, -4)*
                    (12. + 422. * sh - 2173. * pow(sh, 2) +
                    (4115. - 36. * Lshb) * pow(sh, 3) +
                    6. * (-625. + 4. * Lshb) * pow(sh, 4) -
                    6. * (-267. + 2. * Lshb) * pow(sh, 5) +
                    24. * (-11. + Lshb) * pow(sh, 6)) -
                    lz * (7.446738141842472 * Lsh * pow(-1 + sh, -4) *
                    pow(sh, -1)*(3. + sh + 2. * pow(sh, 2)) -
                    0.620561511820206 * pow(-1 + sh, -3) * pow(sh, -4)*
                    (-6. - 428. * sh + 1275. * pow(sh, 2) -
                    1143. * pow(sh, 3) + 335. * pow(sh, 4) +
                    27. * pow(sh, 5) + 12. * pow(sh, 6))) -
                    0.10342691863670102 * pow(-1 + sh, -4) * pow(sh, -4)*
                    (30. + 1796. * sh - 7538. * pow(sh, 2) +
                    36. * (299. + pow(3.141592653589793, 2)) * pow(sh, 3) +
                    (-6521. + 12. * pow(3.141592653589793, 2)) * pow(sh, 4) +
                    8. * (106. + 3. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    381. * pow(sh, 6) + 24. * pow(sh, 7))) * pow(z, 3);
            else
                res += (-139.59531208395535 - 127.73017597795302 * (1. - sh) +
                    172.3157475693439 * pow(1. - sh, 2) +
                    862.5554678942696 * pow(1. - sh, 3) +
                    log(muh)*(-178.72171540421934 -
                    536.165146212658 * (1. - sh) -
                    1072.330292425316 * pow(1. - sh, 2) -
                    1787.2171540421934 * pow(1. - sh, 3) -
                    2680.8257310632903 * pow(1. - sh, 4)) +
                    2025.5930676420699 * pow(1. - sh, 4) +
                    log(z)*(322.07142463468693 +
                    919.2998236104531 * (1. - sh) +
                    1803.5999779542467 * pow(1. - sh, 2) +
                    2978.9966723284447 * pow(1. - sh, 3) +
                    4449.37284876415 * pow(1. - sh, 4))) * pow(z, 3);
        }

        if (7 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (8 <= maxpow) {
            if (sh < .900001)
                res += (-402.1238596594935 * lmu * pow(sh, -4) -
                    37.23369070921236 * Li2sh * pow(-1 + sh, -3) * pow(sh, -2) -
                    37.23369070921236 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -2) - lz *
                    (-37.23369070921236 * Lsh * pow(-1 + sh, -3) * pow(sh, -2) -
                    0.620561511820206 * pow(-1 + sh, -2) * pow(sh, -6)*
                    (3. + 19. * sh + 1126. * pow(sh, 2) - 2252. * pow(sh, 3) +
                    975. * pow(sh, 4) + 39. * pow(sh, 5) + 30. * pow(sh, 6)))\
      - 0.620561511820206 * Lsh * pow(-1 + sh, -6) * pow(sh, -6)*
                    (6. + 14. * sh + 1053. * pow(sh, 2) - 6729. * pow(sh, 3) +
                    (16821. - 60. * Lshb) * pow(sh, 4) +
                    3. * (-7297. + 60. * Lshb) * pow(sh, 5) -
                    3. * (-5263. + 60. * Lshb) * pow(sh, 6) +
                    (-5933. + 60. * Lshb) * pow(sh, 7) + 900. * pow(sh, 8)) +
                    0.05171345931835051 * pow(-1 + sh, -5) * pow(sh, -6)*
                    (21. - 10. * sh + 3476. * pow(sh, 2) - 18346. * pow(sh, 3) +
                    (36523. + 120. * pow(3.141592653589793, 2)) *
                    pow(sh, 4) - 16. *
                    (2108. + 15. * pow(3.141592653589793, 2)) * pow(sh, 5) +
                    2. * (6731. + 60. * pow(3.141592653589793, 2)) *
                    pow(sh, 6) - 96. * pow(sh, 7) - 678. * pow(sh, 8) -
                    408. * pow(sh, 9) + 144. * pow(sh, 10))) * pow(z, 4);
            else
                res += (-24.201898960988036 + 587.5698023025075 * (1. - sh) +
                    2943.504986434556 * pow(1. - sh, 2) +
                    8455.573910153013 * pow(1. - sh, 3) +
                    log(muh)*(-402.1238596594935 -
                    1608.495438637974 * (1. - sh) -
                    4021.238596594935 * pow(1. - sh, 2) -
                    8042.47719318987 * pow(1. - sh, 3) -
                    14074.335088082273 * pow(1. - sh, 4)) +
                    18802.085498788645 * pow(1. - sh, 4) +
                    log(z)*(819.141195602672 +
                    3200.2357164568025 * (1. - sh) +
                    7927.052751991311 * pow(1. - sh, 2) +
                    15806.942829084288 * pow(1. - sh, 3) +
                    27672.433541664814 * pow(1. - sh, 4))) * pow(z, 4);
        }

        if (9 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (10 <= maxpow) {
            if (sh < .900001)
                res += (-1072.330292425316 * lmu * pow(sh, -5) -
                    78.19075048934596 * Li2sh * pow(-1 + sh, -3) * pow(sh, -3) -
                    78.19075048934596 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -3) - lz *
                    (-78.19075048934596 * Lsh * pow(-1 + sh, -3) * pow(sh, -3) -
                    0.062056151182020604 * pow(-1 + sh, -2) * pow(sh, -8)*
                    (18. + 153. * sh + 543. * pow(sh, 2) +
                    34531. * pow(sh, 3) - 69998. * pow(sh, 4) +
                    32548. * pow(sh, 5) + 60. * pow(sh, 6) +
                    690. * pow(sh, 7) + 195. * pow(sh, 8))) -
                    0.062056151182020604 * Lsh * pow(-1 + sh, -7) * pow(sh, -8)*
                    (-36. - 126. * sh + 84. * pow(sh, 2) - 32704. * pow(sh, 3) +
                    239545. * pow(sh, 4) +
                    36. * (-20227. + 35. * Lshb) * pow(sh, 5) +
                    (1.209686e6 - 5040. * Lshb) * pow(sh, 6) +
                    56. * (-21289. + 135. * Lshb) * pow(sh, 7) +
                    (696984. - 5040. * Lshb) * pow(sh, 8) +
                    35. * (-6389. + 36. * Lshb) * pow(sh, 9) +
                    30808. * pow(sh, 10)) -
                    0.0010342691863670101 * pow(-1 + sh, -6) * pow(sh, -8)*
                    (486. - 108. * sh - 8742. * pow(sh, 2) +
                    126466. * pow(sh, 3) - 671262. * pow(sh, 4) +
                    1.573824e6 * pow(sh, 5) -
                    12600. * pow(3.141592653589793, 2) * pow(-1 + sh, 3) *
                    pow(sh, 5) - 1.781252e6 * pow(sh, 6) +
                    797802. * pow(sh, 7) + 214029. * pow(sh, 8) -
                    253718. * pow(sh, 9) - 92700. * pow(sh, 10) +
                    88650. * pow(sh, 11) - 4275. * pow(sh, 12) -
                    5400. * pow(sh, 13))) * pow(z, 5);
            else
                res += (351.27268533709133 + 3865.7340081335415 * (1. - sh) +
                    17368.68228224328 * pow(1. - sh, 2) +
                    52713.83107089804 * pow(1. - sh, 3) +
                    log(muh)*(-1072.330292425316 -
                    5361.651462126581 * (1. - sh) -
                    16084.95438637974 * pow(1. - sh, 2) -
                    37531.56023488606 * pow(1. - sh, 3) -
                    75063.12046977213 * pow(1. - sh, 4)) +
                    127763.72928220684 * pow(1. - sh, 4) +
                    log(z)*(2503.8415878921674 +
                    12312.560956024709 * (1. - sh) +
                    36728.24335783481 * pow(1. - sh, 2) +
                    85657.34659956669 * pow(1. - sh, 3) +
                    171742.8806422893 * pow(1. - sh, 4))) * pow(z, 5);
        }

        if (11 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (12 <= maxpow) {
            if (sh < .900001)
                res += (-3127.6300195738386 * lmu * pow(sh, -6) -
                    187.65780117443032 * Li2sh * pow(-1 + sh, -3) * pow(sh, -4) -
                    187.65780117443032 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -4) - lz *
                    (-187.65780117443032 * Lsh * pow(-1 + sh, -3) * pow(sh, -4) -
                    0.01241123023640412 * pow(-1 + sh, -2) * pow(sh, -10)*
                    (60. + 636. * sh + 2976. * pow(sh, 2) +
                    7776. * pow(sh, 3) + 566576. * pow(sh, 4) -
                    1.155544e6 * pow(sh, 5) + 555575. * pow(sh, 6) -
                    4665. * pow(sh, 7) + 6585. * pow(sh, 8) +
                    4185. * pow(sh, 9) + 720. * pow(sh, 10))) -
                    0.01241123023640412 * Lsh * pow(-1 + sh, -8) * pow(sh, -10)*
                    (120. + 552. * sh + 120. * pow(sh, 2) - 3480. * pow(sh, 3) +
                    549380. * pow(sh, 4) - 4.49206e6 * pow(sh, 5) +
                    (1.5939557e7 - 15120. * Lshb) * pow(sh, 6) +
                    5. * (-6.401093e6 + 15120. * Lshb) * pow(sh, 7) -
                    160. * (-249128. + 945. * Lshb) * pow(sh, 8) +
                    160. * (-197248. + 945. * Lshb) * pow(sh, 9) +
                    (1.551469e7 - 75600. * Lshb) * pow(sh, 10) +
                    14. * (-309151. + 1080. * Lshb) * pow(sh, 11) +
                    525160. * pow(sh, 12)) +
                    0.00020685383727340204 * pow(-1 + sh, -7) * pow(sh, -10)*
                    (1320. - 96. * sh - 30636. * pow(sh, 2) -
                    70896. * pow(sh, 3) - 2.603936e6 * pow(sh, 4) +
                    2.1791024e7 * pow(sh, 5) - 7.0464714e7 * pow(sh, 6) +
                    151200. * pow(3.141592653589793, 2) * pow(-1 + sh, 4) *
                    pow(sh, 6) + 1.25759326e8 * pow(sh, 7) -
                    1.37732314e8 * pow(sh, 8) + 9.4834176e7 * pow(sh, 9) -
                    3.8854759e7 * pow(sh, 10) + 7.49308e6 * pow(sh, 11) -
                    545670. * pow(sh, 12) + 1.17158e6 * pow(sh, 13) -
                    783395. * pow(sh, 14) + 77910. * pow(sh, 15) +
                    33600. * pow(sh, 16))) * pow(z, 6);
            else
                res += (2099.7304538674402 + 19515.031680922508 * (1. - sh) +
                    91328.97681100095 * pow(1. - sh, 2) +
                    300670.6061024515 * pow(1. - sh, 3) +
                    log(muh)*(-3127.6300195738386 -
                    18765.78011744303 * (1. - sh) -
                    65680.23041105061 * pow(1. - sh, 2) -
                    175147.28109613495 * pow(1. - sh, 3) -
                    394081.38246630365 * pow(1. - sh, 4)) +
                    796731.7474127222 * pow(1. - sh, 4) +
                    log(z)*(8190.17083300308 +
                    48527.5999435842 * (1. - sh) +
                    169220.42220904253 * pow(1. - sh, 2) +
                    451635.111655464 * pow(1. - sh, 3) +
                    1.0198531287397521e6 * pow(1. - sh, 4))) * pow(z, 6);
        }

        if (13 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (14 <= maxpow) {
            if (sh < .900001)
                res += (-9650.972631827844 * lmu * pow(sh, -7) -
                    491.4847173616032 * Li2sh * pow(-1 + sh, -3) * pow(sh, -5) -
                    491.4847173616032 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -5) - lz *
                    (-491.4847173616032 * Lsh * pow(-1 + sh, -3) * pow(sh, -5) -
                    0.017730328909148746 * pow(-1 + sh, -2) * pow(sh, -12)*
                    (30. + 380. * sh + 2186. * pow(sh, 2) +
                    7436. * pow(sh, 3) + 15906. * pow(sh, 4) +
                    1.352004e6 * pow(sh, 5) - 2.76528e6 * pow(sh, 6) +
                    1.354403e6 * pow(sh, 7) - 16681. * pow(sh, 8) +
                    9569. * pow(sh, 9) + 8694. * pow(sh, 10) +
                    3234. * pow(sh, 11) + 399. * pow(sh, 12))) -
                    0.017730328909148746 * Lsh * pow(-1 + sh, -9) * pow(sh, -12)*
                    (-60. - 340. * sh - 312. * pow(sh, 2) + 1872. * pow(sh, 3) +
                    4980. * pow(sh, 4) - 1.332168e6 * pow(sh, 5) +
                    1.2088242e7 * pow(sh, 6) +
                    5. * (-9.776695e6 + 5544. * Lshb) * pow(sh, 7) -
                    30. * (-3.824725e6 + 5544. * Lshb) * pow(sh, 8) +
                    3. * (-5.7427063e7 + 138600. * Lshb) * pow(sh, 9) +
                    (1.71668683e8 - 554400. * Lshb) * pow(sh, 10) +
                    3. * (-3.7845529e7 + 138600. * Lshb) * pow(sh, 11) -
                    30. * (-1.601585e6 + 5544. * Lshb) * pow(sh, 12) +
                    2. * (-5.902763e6 + 13860. * Lshb) * pow(sh, 13) +
                    1.28742e6 * pow(sh, 14)) +
                    0.000042215068831306535 * pow(-1 + sh, -8) * pow(sh, -12)*
                    (-3900. - 100. * sh + 116036. * pow(sh, 2) +
                    329570. * pow(sh, 3) - 93490. * pow(sh, 4) +
                    1.05811916e8 * pow(sh, 5) - 9.10727068e8 * pow(sh, 6) +
                    3.32689061e9 * pow(sh, 7) +
                    1.9404e6 * pow(3.141592653589793, 2) * pow(-1 + sh, 5) *
                    pow(sh, 7) - 6.892981954e9 * pow(sh, 8) +
                    8.95115243e9 * pow(sh, 9) - 7.522485491e9 * pow(sh, 10) +
                    4.037897533e9 * pow(sh, 11) -
                    1.290569693e9 * pow(sh, 12) +
                    1.94901398e8 * pow(sh, 13) + 8.064665e6 * pow(sh, 14) -
                    1.8561445e7 * pow(sh, 15) + 1.7389365e7 * pow(sh, 16) -
                    7.700448e6 * pow(sh, 17) + 658266. * pow(sh, 18) +
                    264600. * pow(sh, 19))) * pow(z, 7);
            else
                res += (9578.002977728951 + 90591.13670883651 * (1. - sh) +
                    454740.084732464 * pow(1. - sh, 2) +
                    1.6274729201675933e6 * pow(1. - sh, 3) +
                    log(muh)*(-9650.972631827844 -
                    67556.80842279491 * (1. - sh) -
                    270227.23369117966 * pow(1. - sh, 2) -
                    810681.701073539 * pow(1. - sh, 3) -
                    2.0267042526838474e6 * pow(1. - sh, 4)) +
                    4.693965288441072e6 * pow(1. - sh, 4) +
                    log(z)*(27844.116316492098 +
                    192981.35015973114 * (1. - sh) +
                    770003.1492999103 * pow(1. - sh, 2) +
                    2.3136505305141844e6 * pow(1. - sh, 3) +
                    5.808370113148497e6 * pow(1. - sh, 4))) * pow(z, 7);
        }

        if (15 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (16 <= maxpow) {
            if (sh < .900001)
                res += (-30963.537193781 * lmu * pow(sh, -8) -
                    1369.1359983644659 * Li2sh * pow(-1 + sh, -3) * pow(sh, -6) -
                    1369.1359983644659 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -6) - lz *
                    (-1369.1359983644659 * Lsh * pow(-1 + sh, -3) * pow(sh, -6) -
                    0.001266452064939196 * pow(-1 + sh, -2) * pow(sh, -14)*
                    (315. + 4635. * sh + 31515. * pow(sh, 2) +
                    130299. * pow(sh, 3) + 359619. * pow(sh, 4) +
                    665379. * pow(sh, 5) + 6.6151919e7 * pow(sh, 6) -
                    1.35470551e8 * pow(sh, 7) + 6.7113242e7 * pow(sh, 8) -
                    941808. * pow(sh, 9) + 284172. * pow(sh, 10) +
                    360612. * pow(sh, 11) + 176862. * pow(sh, 12) +
                    48090. * pow(sh, 13) + 4620. * pow(sh, 14))) -
                    0.002532904129878392 * Lsh * pow(-1 + sh, -10) * pow(sh, -14)*
                    (315. + 2115. * sh + 3255. * pow(sh, 2) -
                    9681. * pow(sh, 3) - 37863. * pow(sh, 4) -
                    21231. * pow(sh, 5) + 3.2813515e7 * pow(sh, 6) -
                    3.294172e8 * pow(sh, 7) -
                    39. * (-3.8321329e7 + 13860. * Lshb) * pow(sh, 8) +
                    42. * (-9.5458711e7 + 90090. * Lshb) * pow(sh, 9) -
                    42. * (-1.67531213e8 + 270270. * Lshb) * pow(sh, 10) +
                    420. * (-2.0098649e7 + 45045. * Lshb) * pow(sh, 11) -
                    2100. * (-3.338711e6 + 9009. * Lshb) * pow(sh, 12) +
                    84. * (-4.7391601e7 + 135135. * Lshb) * pow(sh, 13) -
                    21. * (-7.0412477e7 + 180180. * Lshb) * pow(sh, 14) +
                    (-3.24500326e8 + 540540. * Lshb) * pow(sh, 15) +
                    3.1967803e7 * pow(sh, 16)) -
                    1.507681029689519e-6 * pow(-1 + sh, -9) * pow(sh, -14)*
                    (-70875. - 6750. * sh + 2.654475e6 * pow(sh, 2) +
                    9.126108e6 * pow(sh, 3) + 678627. * pow(sh, 4) -
                    4.643019e7 * pow(sh, 5) + 1.5345996055e10 * pow(sh, 6) -
                    1.4348857176e11 * pow(sh, 7) +
                    5.91466492647e11 * pow(sh, 8) -
                    1.513512e8 * pow(3.141592653589793, 2) * pow(-1 + sh, 6) *
                    pow(sh, 8) - 1.415943215622e12 * pow(sh, 9) +
                    2.178821872845e12 * pow(sh, 10) -
                    2.24337645648e12 * pow(sh, 11) +
                    1.552421630265e12 * pow(sh, 12) -
                    7.00737702894e11 * pow(sh, 13) +
                    1.89129808485e11 * pow(sh, 14) -
                    2.3911342252e10 * pow(sh, 15) +
                    1.14148692e9 * pow(sh, 16) - 2.22118512e9 * pow(sh, 17) +
                    2.487344244e9 * pow(sh, 18) -
                    1.56858156e9 * pow(sh, 19) + 5.01486552e8 * pow(sh, 20) -
                    3.056844e7 * pow(sh, 21) - 1.397088e7 * pow(sh, 22))) *
                pow(z, 8);
            else
                res += (40161.85009597605 + 403454.99326336605 * (1. - sh) +
                    2.1866803584763454e6 * pow(1. - sh, 2) +
                    8.483425144271815e6 * pow(1. - sh, 3) +
                    log(muh)*(-30963.537193781 -
                    247708.297550248 * (1. - sh) -
                    1.114687338976116e6 * pow(1. - sh, 2) -
                    3.71562446325372e6 * pow(1. - sh, 3) -
                    1.021796727394773e7 * pow(1. - sh, 4)) +
                    2.6489409680208746e7 * pow(1. - sh, 4) +
                    log(z)*(97097.39806997219 +
                    770481.1057763142 * (1. - sh) +
                    3.461164952904078e6 * pow(1. - sh, 2) +
                    1.1560034432357585e7 * pow(1. - sh, 3) +
                    3.1932028892972782e7 * pow(1. - sh, 4))) * pow(z, 8);
        }

        if (17 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (18 <= maxpow) {
            if (sh < .900001)
                res += (-102228.82121121346 * lmu * pow(sh, -9) -
                    3993.313328563026 * Li2sh * pow(-1 + sh, -3) * pow(sh, -7) -
                    3993.313328563026 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -7) - lz *
                    (-3993.313328563026 * Lsh * pow(-1 + sh, -3) * pow(sh, -7) -
                    0.0036938185227393216 * pow(-1 + sh, -2) * pow(sh, -16)*
                    (84. + 1407. * sh + 11019. * pow(sh, 2) +
                    53355. * pow(sh, 3) + 177339. * pow(sh, 4) +
                    420771. * pow(sh, 5) + 695955. * pow(sh, 6) +
                    8.0686627e7 * pow(sh, 7) - 1.65305039e8 * pow(sh, 8) +
                    8.25115e7 * pow(sh, 9) - 1.2204e6 * pow(sh, 10) +
                    196344. * pow(sh, 11) + 374004. * pow(sh, 12) +
                    218268. * pow(sh, 13) + 79164. * pow(sh, 14) +
                    17172. * pow(sh, 15) + 1350. * pow(sh, 16))) -
                    0.0036938185227393216 * Lsh * pow(-1 + sh, -11) * pow(sh, -16)*
                    (-168. - 1302. * sh - 2760. * pow(sh, 2) +
                    4440. * pow(sh, 3) + 27552. * pow(sh, 4) +
                    26796. * pow(sh, 5) - 59136. * pow(sh, 6) -
                    8.0178328e7 * pow(sh, 7) + 8.85522242e8 * pow(sh, 8) +
                    (-4.455681973e9 + 1.08108e6 * Lshb) * pow(sh, 9) -
                    36. * (-3.73310921e8 + 240240. * Lshb) * pow(sh, 10) +
                    55440. * (-486509. + 546. * Lshb) * pow(sh, 11) -
                    504. * (-7.5023647e7 + 120120. * Lshb) * pow(sh, 12) +
                    84. * (-4.49774219e8 + 900900. * Lshb) * pow(sh, 13) -
                    240. * (-1.12105241e8 + 252252. * Lshb) * pow(sh, 14) +
                    24. * (-5.57582173e8 + 1.26126e6 * Lshb) * pow(sh, 15) +
                    (4.426935664e9 - 8.64864e6 * Lshb) * pow(sh, 16) +
                    (-8.76740327e8 + 1.08108e6 * Lshb) * pow(sh, 17) +
                    7.8847504e7 * pow(sh, 18)) -
                    2.9316020021740647e-6 * pow(-1 + sh, -10) * pow(sh, -16)*
                    (24990. + 3675. * sh - 1.155555e6 * pow(sh, 2) -
                    4.697175e6 * pow(sh, 3) - 2.300739e6 * pow(sh, 4) +
                    2.4304707e7 * pow(sh, 5) + 4.9414911e7 * pow(sh, 6) -
                    3.5555744717e10 * pow(sh, 7) +
                    3.63795694607e11 * pow(sh, 8) -
                    1.673813526981e12 * pow(sh, 9) -
                    2.270268e8 * pow(3.141592653589793, 2) * pow(-1 + sh, 7) *
                    pow(sh, 9) + 4.554015894201e12 * pow(sh, 10) -
                    8.127350542815e12 * pow(sh, 11) +
                    9.960251835135e12 * pow(sh, 12) -
                    8.507649883005e12 * pow(sh, 13) +
                    5.015942498283e12 * pow(sh, 14) -
                    1.962379873869e12 * pow(sh, 15) +
                    4.63995107234e11 * pow(sh, 16) -
                    5.1382668638e10 * pow(sh, 17) -
                    1.45210023e9 * pow(sh, 18) +
                    4.602427326e9 * pow(sh, 19) -
                    6.429483144e9 * pow(sh, 20) +
                    5.36052951e9 * pow(sh, 21) - 2.64447351e9 * pow(sh, 22) +
                    6.66882918e8 * pow(sh, 23) - 2.7794799e7 * pow(sh, 24) -
                    1.513512e7 * pow(sh, 25))) * pow(z, 9);
            else
                res += (162348.40292881487 + 1.7529724360976778e6 * (1. - sh) +
                    1.0256186898134898e7 * pow(1. - sh, 2) +
                    4.2955517822645485e7 * pow(1. - sh, 3) +
                    log(muh)*(-102228.82121121346 -
                    920059.3909009212 * (1. - sh) -
                    4.600296954504606e6 * pow(1. - sh, 2) -
                    1.686775549985022e7 * pow(1. - sh, 3) -
                    5.060326649955066e7 * pow(1. - sh, 4)) +
                    1.4446294675132388e8 * pow(1. - sh, 4) +
                    log(z)*(344809.38943874295 +
                    3.08210039661968e6 * (1. - sh) +
                    1.5391563066319158e7 * pow(1. - sh, 2) +
                    5.6559239118621774e7 * pow(1. - sh, 3) +
                    1.7045200046472126e8 * pow(1. - sh, 4))) * pow(z, 9);
        }

        if (19 <= maxpow) {
            if (sh < .900001)
                res += 0.;
            else
                res += 0.;
        }

        if (20 <= maxpow) {
            if (sh < .900001)
                res += (-345022.27158784546 * lmu * pow(sh, -10) -
                    12068.680281879368 * Li2sh * pow(-1 + sh, -3) * pow(sh, -8) -
                    12068.680281879368 * pow(Lsh, 2) * pow(-1 + sh, -3) *
                    pow(sh, -8) - lz *
                    (-12068.680281879368 * Lsh * pow(-1 + sh, -3) * pow(sh, -8) -
                    0.0004925091363652429 * pow(-1 + sh, -2) * pow(sh, -18)*
                    (504. + 9464. * sh + 83804. * pow(sh, 2) +
                    463964. * pow(sh, 3) + 1.792004e6 * pow(sh, 4) +
                    5.082116e6 * pow(sh, 5) + 1.0736996e7 * pow(sh, 6) +
                    1.6220516e7 * pow(sh, 7) +
                    2.181841484e9 * pow(sh, 8) -
                    4.46987794e9 * pow(sh, 9) +
                    2.242757169e9 * pow(sh, 10) -
                    3.3805539e7 * pow(sh, 11) + 2.425761e6 * pow(sh, 12) +
                    8.640081e6 * pow(sh, 13) + 5.776731e6 * pow(sh, 14) +
                    2.476035e6 * pow(sh, 15) + 730935. * pow(sh, 16) +
                    132615. * pow(sh, 17) + 8820. * pow(sh, 18))) -
                    0.0004925091363652429 * Lsh * pow(-1 + sh, -12) * pow(sh, -18)*
                    (1008. + 8848. * sh + 23688. * pow(sh, 2) -
                    17352. * pow(sh, 3) - 212592. * pow(sh, 4) -
                    311184. * pow(sh, 5) + 400176. * pow(sh, 6) +
                    1.492176e6 * pow(sh, 7) + 2.168707464e9 * pow(sh, 8) -
                    2.614996692e10 * pow(sh, 9) -
                    39. * (-3.707091121e9 + 628320. * Lshb) * pow(sh, 10) +
                    9. * (-5.3800645531e10 + 2.450448e7 * Lshb) *
                    pow(sh, 11) - 36. *
                    (-3.0370262471e10 + 2.450448e7 * Lshb) * pow(sh, 12) +
                    120120. * (-1.4593549e7 + 17136. * Lshb) * pow(sh, 13) -
                    1008. * (-2.029981021e9 + 3.06306e6 * Lshb) *
                    pow(sh, 14) + 504. *
                    (-3.476232167e9 + 6.12612e6 * Lshb) * pow(sh, 15) -
                    2352. * (-4.64302499e8 + 875160. * Lshb) * pow(sh, 16) +
                    72. * (-6.711321751e9 + 1.225224e7 * Lshb) * pow(sh, 17) -
                    18. * (-8.004613297e9 + 1.225224e7 * Lshb) * pow(sh, 18) +
                    (-2.5997681938e10 + 2.450448e7 * Lshb) * pow(sh, 19) +
                    2.147289408e9 * pow(sh, 20)) +
                    1.95440133478271e-7 * pow(-1 + sh, -11) * pow(sh, -18)*
                    (268128. + 50176. * sh - 1.5037316e7 * pow(sh, 2) -
                    7.0758368e7 * pow(sh, 3) - 6.454424e7 * pow(sh, 4) +
                    3.47363296e8 * pow(sh, 5) + 9.86787592e8 * pow(sh, 6) +
                    3.5646688e7 * pow(sh, 7) -
                    2.256631448624e12 * pow(sh, 8) +
                    2.5235654405248e13 * pow(sh, 9) -
                    1.28349595677322e14 * pow(sh, 10) +
                    1.02918816e10 * pow(3.141592653589793, 2) *
                    pow(-1 + sh, 8) * pow(sh, 10) +
                    3.91335165488006e14 * pow(sh, 11) -
                    7.95205485397036e14 * pow(sh, 12) +
                    1.131873241929248e15 * pow(sh, 13) -
                    1.152918562112926e15 * pow(sh, 14) +
                    8.41687395958136e14 * pow(sh, 15) -
                    4.32532523359468e14 * pow(sh, 16) +
                    1.49507294517008e14 * pow(sh, 17) -
                    3.1460926993849e13 * pow(sh, 18) +
                    3.102547096368e12 * pow(sh, 19) -
                    9.5864935068e10 * pow(sh, 20) +
                    2.69818915464e11 * pow(sh, 21) -
                    4.54966309854e11 * pow(sh, 22) +
                    4.78236408048e11 * pow(sh, 23) -
                    3.2126306742e11 * pow(sh, 24) +
                    1.3173020316e11 * pow(sh, 25) -
                    2.7741591765e10 * pow(sh, 26) +
                    8.0713269e8 * pow(sh, 27) + 5.189184e8 * pow(sh, 28))) *
                pow(z, 10);
            else
                res += (644254.0137035465 + 7.493223537446329e6 * (1. - sh) +
                    4.720371172464203e7 * pow(1. - sh, 2) +
                    2.125124872327622e8 * pow(1. - sh, 3) +
                    log(muh)*(-345022.27158784546 -
                    3.4502227158784545e6 * (1. - sh) -
                    1.8976224937331498e7 * pow(1. - sh, 2) -
                    7.590489974932599e7 * pow(1. - sh, 3) -
                    2.466909241853095e8 * pow(1. - sh, 4)) +
                    7.661513926733323e8 * pow(1. - sh, 4) +
                    log(z)*(1.2414164251232008e6 +
                    1.2341289851214426e7 * (1. - sh) +
                    6.781685298675093e7 * pow(1. - sh, 2) +
                    2.718874874350479e8 * pow(1. - sh, 3) +
                    8.876628109013227e8 * pow(1. - sh, 4))) * pow(z, 10);
        }
    }
    return res;
}

double F_2::DeltaF_29re(double muh, double z, double sh, int maxpow)
{
    double lz = log(z);
    double lmu = log(muh);
    double Lsh = log(sh);


    double res = 0;

    if (sh < 0.4) {
        res = 0.06772486772486773 * (0.6666666666666666 + lmu - 0.5 * lz)*
                (105. + pow(sh, 3) * pow(z, -3) + 4.5 * pow(sh, 2) * pow(z, -2) +
                21. * sh * pow(z, -1));
    } else {
        if (0 <= maxpow)
            res += 0.;

        if (1 <= maxpow)
            res += 0.;

        if (2 <= maxpow)
            res += (-28.444444444444443 * pow(sh, -1) -
                42.666666666666664 * lmu * pow(sh, -1) +
                21.333333333333332 * lz * pow(sh, -1)) * pow(z, 1);

        if (3 <= maxpow)
            res += 0.;

        if (4 <= maxpow)
            res += (-56.888888888888886 * Lsh * pow(sh, -2) -
                85.33333333333333 * lmu * Lsh * pow(sh, -2) -
                42.666666666666664 * pow(lz, 2) * pow(sh, -2) -
                lz * (-56.888888888888886 * pow(sh, -2) -
                85.33333333333333 * lmu * pow(sh, -2) -
                42.666666666666664 * Lsh * pow(sh, -2))) * pow(z, 2);

        if (5 <= maxpow)
            res += 0.;

        if (6 <= maxpow)
            res += (113.77777777777777 * pow(sh, -3) -
                113.77777777777777 * Lsh * pow(sh, -3) -
                85.33333333333333 * pow(lz, 2) * pow(sh, -3) -
                lz * (-28.444444444444443 * pow(sh, -3) -
                170.66666666666666 * lmu * pow(sh, -3) -
                85.33333333333333 * Lsh * pow(sh, -3)) -
                lmu * (-170.66666666666666 * pow(sh, -3) +
                170.66666666666666 * Lsh * pow(sh, -3))) * pow(z, 3);

        if (7 <= maxpow)
            res += 0.;

        if (8 <= maxpow)
            res += (398.22222222222223 * pow(sh, -4) -
                341.3333333333333 * Lsh * pow(sh, -4) -
                256. * pow(lz, 2) * pow(sh, -4) -
                lz * (-42.666666666666664 * pow(sh, -4) -
                512. * lmu * pow(sh, -4) - 256. * Lsh * pow(sh, -4)) -
                lmu * (-597.3333333333334 * pow(sh, -4) +
                512. * Lsh * pow(sh, -4))) * pow(z, 4);

        if (9 <= maxpow)
            res += 0.;

        if (10 <= maxpow)
            res += (1403.2592592592594 * pow(sh, -5) -
                1137.7777777777778 * Lsh * pow(sh, -5) -
                853.3333333333334 * pow(lz, 2) * pow(sh, -5) -
                lz * (-85.33333333333333 * pow(sh, -5) -
                1706.6666666666667 * lmu * pow(sh, -5) -
                853.3333333333334 * Lsh * pow(sh, -5)) -
                lmu * (-2104.8888888888887 * pow(sh, -5) +
                1706.6666666666667 * Lsh * pow(sh, -5))) * pow(z, 5);

        if (11 <= maxpow)
            res += 0.;

        if (12 <= maxpow)
            res += (5053.62962962963 * pow(sh, -6) -
                3982.222222222222 * Lsh * pow(sh, -6) -
                2986.6666666666665 * pow(lz, 2) * pow(sh, -6) -
                lz * (-192. * pow(sh, -6) -
                5973.333333333333 * lmu * pow(sh, -6) -
                2986.6666666666665 * Lsh * pow(sh, -6)) -
                lmu * (-7580.444444444444 * pow(sh, -6) +
                5973.333333333333 * Lsh * pow(sh, -6))) * pow(z, 6);

        if (13 <= maxpow)
            res += 0.;

        if (14 <= maxpow)
            res += (18511.644444444446 * pow(sh, -7) - 14336. * Lsh * pow(sh, -7) -
                10752. * pow(lz, 2) * pow(sh, -7) -
                lz * (-452.26666666666665 * pow(sh, -7) -
                21504. * lmu * pow(sh, -7) - 10752. * Lsh * pow(sh, -7)) -
                lmu * (-27767.466666666667 * pow(sh, -7) +
                21504. * Lsh * pow(sh, -7))) * pow(z, 7);

        if (15 <= maxpow)
            res += 0.;

        if (16 <= maxpow)
            res += (68672.47407407407 * pow(sh, -8) -
                52565.333333333336 * Lsh * pow(sh, -8) -
                39424. * pow(lz, 2) * pow(sh, -8) -
                lz * (-1060.9777777777779 * pow(sh, -8) -
                78848. * lmu * pow(sh, -8) - 39424. * Lsh * pow(sh, -8)) -
                lmu * (-103008.71111111112 * pow(sh, -8) +
                78848. * Lsh * pow(sh, -8))) * pow(z, 8);

        if (17 <= maxpow)
            res += 0.;

        if (18 <= maxpow)
            res += (257214.71322751322 * pow(sh, -9) -
                195242.66666666666 * Lsh * pow(sh, -9) -
                146432. * pow(lz, 2) * pow(sh, -9) -
                lz * (-2331.631746031746 * pow(sh, -9) -
                292864. * lmu * pow(sh, -9) - 146432. * Lsh * pow(sh, -9)) -
                lmu * (-385822.06984126987 * pow(sh, -9) +
                292864. * Lsh * pow(sh, -9))) * pow(z, 9);

        if (19 <= maxpow)
            res += 0.;

        if (20 <= maxpow)
            res += (970656.5079365079 * pow(sh, -10) - 732160. * Lsh * pow(sh, -10) -
                549120. * pow(lz, 2) * pow(sh, -10) -
                lz * (-4167.619047619048 * pow(sh, -10) -
                1.09824e6 * lmu * pow(sh, -10) - 549120. * Lsh * pow(sh, -10))
                - lmu * (-1.455984761904762e6 * pow(sh, -10) +
                1.09824e6 * Lsh * pow(sh, -10))) * pow(z, 10);

    }
    return res;
}

double F_2::DeltaF_29im(double muh, double z, double sh, int maxpow)
{
    double lz = log(z);
    double lmu = log(muh);


    double res = 0;

    if (sh < 0.4) {
        res = 0.;
    } else {
        if (0 <= maxpow)
            res += 0.;

        if (1 <= maxpow)
            res += 0.;

        if (2 <= maxpow)
            res += 0.;

        if (3 <= maxpow)
            res += 0.;

        if (4 <= maxpow)
            res += (178.72171540421934 * pow(sh, -2) +
                268.082573106329 * lmu * pow(sh, -2) -
                134.0412865531645 * lz * pow(sh, -2)) * pow(z, 2);

        if (5 <= maxpow)
            res += 0.;

        if (6 <= maxpow)
            res += (357.4434308084387 * pow(sh, -3) +
                536.165146212658 * lmu * pow(sh, -3) -
                268.082573106329 * lz * pow(sh, -3)) * pow(z, 3);

        if (7 <= maxpow)
            res += 0.;

        if (8 <= maxpow)
            res += (1072.330292425316 * pow(sh, -4) +
                1608.495438637974 * lmu * pow(sh, -4) -
                804.247719318987 * lz * pow(sh, -4)) * pow(z, 4);

        if (9 <= maxpow)
            res += 0.;

        if (10 <= maxpow)
            res += (3574.434308084387 * pow(sh, -5) +
                5361.651462126581 * lmu * pow(sh, -5) -
                2680.8257310632903 * lz * pow(sh, -5)) * pow(z, 5);

        if (11 <= maxpow)
            res += 0.;

        if (12 <= maxpow)
            res += (12510.520078295354 * pow(sh, -6) +
                18765.78011744303 * lmu * pow(sh, -6) -
                9382.890058721516 * lz * pow(sh, -6)) * pow(z, 6);

        if (13 <= maxpow)
            res += 0.;

        if (14 <= maxpow)
            res += (45037.872281863274 * pow(sh, -7) +
                67556.80842279491 * lmu * pow(sh, -7) -
                33778.40421139746 * lz * pow(sh, -7)) * pow(z, 7);

        if (15 <= maxpow)
            res += 0.;

        if (16 <= maxpow)
            res += (165138.86503349867 * pow(sh, -8) +
                247708.297550248 * lmu * pow(sh, -8) -
                123854.148775124 * lz * pow(sh, -8)) * pow(z, 8);

        if (17 <= maxpow)
            res += 0.;

        if (18 <= maxpow)
            res += (613372.9272672808 * pow(sh, -9) +
                920059.3909009212 * lmu * pow(sh, -9) -
                460029.6954504606 * lz * pow(sh, -9)) * pow(z, 9);

        if (19 <= maxpow)
            res += 0.;

        if (20 <= maxpow)
            res += (2.300148477252303e6 * pow(sh, -10) +
                3.4502227158784545e6 * lmu * pow(sh, -10) -
                1.7251113579392273e6 * lz * pow(sh, -10)) * pow(z, 10);

    }
    return res;
}
